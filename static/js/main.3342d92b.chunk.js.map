{"version":3,"sources":["components/Header.js","components/Body.js","components/Menus.js","components/Guide.js","components/Comment.js","components/Meta.js","components/PostList.js","components/Recents.js","components/CommentLists.js","components/Emoji.js","components/Post.js","components/NotFoundPage.js","components/Login.js","components/Quill.js","components/Paging.js","components/Tags.js","components/Content.js","components/Setting.js","App.js","index.js"],"names":["React","memo","props","store","useContext","AppContext","id","className","onClick","slideMenu","to","closeMenuMobile","alt","src","setting","document","querySelector","style","display","login","imageUrl","Math","floor","random","onError","e","target","children","menus","map","i","key","name","exact","activeClassName","substring","toUpperCase","count","subMenus","length","j","title","href","preventDefault","window","open","comment","post","refreshComment","useState","setImageUrl","update","date","publishedDate","replace","useEffect","postId","commentId","value","content","username","Axios","process","withCredentials","data","then","res","catch","fontWeight","updated","readOnly","onChange","resizeTextarea","textarea","confirm","classList","remove","url","patch","console","log","alert","add","focus","background","locales","en","ko","Meta","lang","locale","description","image","undefined","canonical","type","width","height","Helmet","titleTemplate","rel","itemprop","property","hreflang","list","no","tags","views","text","idx","location","comments","setComments","commentCnt","setCommentCnt","recentAll","setRecentAll","pathname","get","setReady","reduce","a","b","splited","emojis","split","copied","emoji","setTimeout","options","format","match","history","params","setPost","postBody","setPostBody","recents","setRecents","popular","setPopular","recentComments","setRecentComments","useQuill","modules","syntax","formats","quill","quillRef","go","body","hash","elem","frame","contentScroll","scrollTop","elemTop","offsetTop","dif","clearInterval","setInterval","scrollHeight","clientHeight","setContents","setText","querySelectorAll","deletePost","delete","func","svg","ref","push","placeholder","useHistory","browser","agent","navigator","userAgent","toLowerCase","indexOf","checkUsername","setCheckUsername","checkPassword","setCheckPassword","checkPasswordConfirm","setCheckPasswordConfirm","buttonName","setButtonName","userinfo","setUserinfo","userinfoElem","user","JSON","parse","host","email","naverLogout","click","profile_image","kakaoLogout","profile","thumbnail_image_url","fetch","mode","method","credentials","headers","stringify","status","json","message","error","setLogin","clickButton","password","color","fontSize","naverIdLogin","firstChild","kakaoLogin","googleLogin","passwordConfirm","autoComplete","textAlign","ready","setSubMenus","toolbar","size","header","align","indent","imageCompress","quality","maxWidth","maxHeight","imageType","debug","Quill","register","Number","checked","mainMenu","getElementById","res2","subMenu","newSubMenu","clickPost","getContents","getText","newMainMenu","getLength","editor","marginBottom","removeEventListener","addEventListener","changeMainMenu","changeSubMenu","postCount","useLocation","search","queryString","paging","pages","page","parseInt","startPost","lastPage","ceil","links","innerHTML","p","path","tag","lists","setLists","titles","setTitles","setPostCount","setPage","pageNum","tempTitles","resize","loading","component","Login","Tags","CommentLists","Post","NotFoundPage","disabled","settingWrapper","stopPropagation","naverIdLogout","googleLogout","oAuth","createContext","order","setMenus","checkToken","fake","textareas","clientWidth","guideWrapper","left","parentNode","Provider","rootElement","hasChildNodes","hydrate","basename","ReactDOM","render"],"mappings":"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","file":"static/js/main.3342d92b.chunk.js","sourcesContent":["import React from 'react'\r\nimport './Header.css'\r\nimport { Link } from 'react-router-dom'\r\nimport { AppContext } from '../App'\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\n\r\nfunction Header(props) {\r\n\tconst store = React.useContext(AppContext)\r\n\r\n\tconst toggleSetting = () => {\r\n\t\tconst setting = document.querySelector('#settingWrapper')\r\n\t\tif (setting) {\r\n\t\t\tif (setting.style.display === 'block') {\r\n\t\t\t\tsetting.style.display = 'none'\r\n\t\t\t} else {\r\n\t\t\t\tsetting.style.display = 'block'\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div id=\"headerWrapper\">\r\n\t\t\t<div id=\"header\">\r\n\t\t\t\t<div className=\"menu hover\" onClick={store.slideMenu}>\r\n\t\t\t\t\t<MenuIcon/>\r\n\t\t\t\t</div>\r\n\t\t\t\t<Link to=\"/\">\r\n\t\t\t\t\t<div id=\"title\" className=\"hover\" onClick={store.closeMenuMobile}>\r\n\t\t\t\t\t\t<img id=\"logo\" alt=\"logo\" src={process.env.PUBLIC_URL + '/images/imcat_64.png'} />\r\n\t\t\t\t\t\t임기의 코딩 블로그\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</Link>\r\n\t\t\t\t<div className=\"hover\" onClick={toggleSetting}>\r\n\t\t\t\t\t{!store.login ? (\r\n\t\t\t\t\t\t<img className=\"profile\" alt=\"PROFILE\" src={process.env.PUBLIC_URL + '/images/noavatar.png'} />\r\n\t\t\t\t\t) : (\r\n\t\t\t\t\t\t<img\r\n\t\t\t\t\t\t\tclassName=\"profile\"\r\n\t\t\t\t\t\t\talt=\"PROFILE\"\r\n\t\t\t\t\t\t\tsrc={store.login.imageUrl ? store.login.imageUrl : 'noimage'+Math.floor(Math.random()*100)}\r\n\t\t\t\t\t\t\tonError={(e) => {\r\n\t\t\t\t\t\t\t\te.target.src = process.env.PUBLIC_URL + '/images/dog' + (Math.floor(Math.random() * (3 - 1 + 1)) + 1) + '.png'\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\nexport default React.memo(Header)\r\n","import React from 'react'\r\nimport './Body.css'\r\n\r\nfunction Body(props) {\r\n\treturn(\r\n        <div id=\"body\">\r\n            {props.children}\r\n        </div>\r\n    ) \r\n}\r\nexport default React.memo(Body)\r\n","import React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\nimport './Menus.css'\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore'\r\n\r\nfunction Menus(props) {\r\n\tconst { menus } = props\r\n\r\n\t//menu정보를 받아서 링크 메뉴 생성하기\r\n\t//menu { name: string, cnt: number, Object{ name: string, cnt: number}, Object{...}}\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{menus &&\r\n\t\t\t\tmenus.map((i) => (\r\n\t\t\t\t\t<div key={i.name}>\r\n\t\t\t\t\t\t<NavLink exact to={i.name === 'home' ? '/' : `/tags/${i.name}`} className=\"list\" activeClassName=\"activeList\">\r\n\t\t\t\t\t\t\t<span className=\"menuName\">{i.name.substring(0, 1).toUpperCase() + i.name.substring(1)}</span>\r\n\t\t\t\t\t\t\t<span className=\"menuOptions\">\r\n\t\t\t\t\t\t\t\t<span className=\"menuCnt\">{i.count}</span>\r\n\t\t\t\t\t\t\t\t<span className=\"menuExpandIcon\">{i.subMenus && i.subMenus.length >= 1 && <ExpandMoreIcon />}</span>\r\n\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t</NavLink>\r\n\t\t\t\t\t\t{i.subMenus && i.subMenus.length > 0 && i.subMenus.map((j) => (\r\n\t\t\t\t\t\t\t<NavLink exact to={`/tags/${j.name}`} className=\"list subList\" activeClassName=\"activeList\" key={j.name}>\r\n                            <span className=\"menuName\">{j.name.substring(0, 1).toUpperCase() + j.name.substring(1)}</span>\r\n                            <span className=\"menuOptions\">\r\n                                <span className=\"menuCnt\">{j.count}</span>\r\n                            </span>\r\n                        </NavLink>\r\n\t\t\t\t\t\t))}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t))}\r\n\t\t</>\r\n\t)\r\n}\r\nexport default React.memo(Menus)\r\n","import React from 'react'\r\nimport './Guide.css'\r\nimport { AppContext } from '../App'\r\nimport Menus from './Menus'\r\nimport OpenInNewIcon from '@material-ui/icons/OpenInNew'\r\n\r\nfunction Guide(props) {\r\n\tconst store = React.useContext(AppContext)\r\n\r\n\treturn (\r\n\t\t<div id=\"guideBack\" onClick={store.closeMenuMobile}>\r\n\t\t\t<div id=\"guideWrapper\" className=\"slideMenu\">\r\n\t\t\t\t<div id=\"avatar\">\r\n\t\t\t\t\t<img alt=\"avatar\" src={process.env.PUBLIC_URL + '/images/avatar.png'} title=\"Hello 😄\" />\r\n\t\t\t\t\t<div id=\"name\">Im kiyoung</div>\r\n\t\t\t\t\t<div id=\"nickName\">imki123</div>\r\n\t\t\t\t\t<div id=\"github\">\r\n\t\t\t\t\t\t<a href=\"https://github.com/imki123\">\r\n\t\t\t\t\t\t\t<img alt=\"github\" src={process.env.PUBLIC_URL + '/images/GitHub-Mark-32px.png'} /> <span>https://github.com/imki123</span>\r\n\t\t\t\t\t\t</a>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div id=\"introduction\">A web programmer who dreams of becoming a wise developer.</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"menus\">\r\n\t\t\t\t\t<Menus menus={store.menus} />\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"menus\">\r\n\t\t\t\t\t<a href=\"https://imki123.github.io/catbook\" className=\"list\"\r\n                        onClick={e => {e.preventDefault(); window.open(\"https://imki123.github.io/catbook\")}}>\r\n\t\t\t\t\t\t<div className=\"menuLink\">\r\n\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t<img alt=\"catbook\" src={process.env.PUBLIC_URL + '/images/catbook_64.png'} />\r\n\t\t\t\t\t\t\t\tCatbook\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<OpenInNewIcon />\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</a>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\nexport default React.memo(Guide)\r\n","import React, { useEffect, useState } from 'react'\r\nimport './Comment.css'\r\nimport { AppContext } from '../App'\r\nimport Axios from 'axios'\r\n\r\nfunction Comment(props) {\r\n\tconst store = React.useContext(AppContext)\r\n\tconst { comment, post, refreshComment } = props\r\n\tconst [ imageUrl, setImageUrl ] = useState('noimage')\r\n\tlet update = false\r\n\tlet date = comment.publishedDate.substring(0, 16).replace('T', ' ')\r\n\tuseEffect(() => {\r\n\t\tconst textarea = document.querySelector(`#comment_${post.postId}_${comment.commentId} textarea`)\r\n\t\ttextarea.value = comment.content\r\n\r\n\t\t//댓글 프로필 이미지 가져오기\r\n\t\tif (comment.username) {\r\n\t\t\tlet url = process.env.REACT_APP_URL + '/auth/user'\r\n\t\t\t//url = process.env.REACT_APP_LOCAL_URL + '/auth/user'\r\n\t\t\tAxios.post(url, {\r\n\t\t\t\twithCredentials: true, //CORS\r\n\t\t\t\tdata: {\r\n\t\t\t\t\tusername: comment.username,\r\n\t\t\t\t},\r\n\t\t\t})\r\n\t\t\t\t.then((res) => {\r\n\t\t\t\t\tif(!res.data.imageUrl) setImageUrl('noimage'+Math.floor(Math.random()*100))\r\n\t\t\t\t\telse setImageUrl(res.data.imageUrl)\r\n\t\t\t\t})\r\n\t\t\t\t.catch((e) => {\r\n\t\t\t\t\tsetImageUrl('noimage'+Math.floor(Math.random()*100))\r\n\t\t\t\t})\r\n\t\t}\r\n\t}, [comment, post.postId, setImageUrl])\r\n\r\n\tconst updateComment = (e) => {\r\n\t\t//댓글 수정\r\n\t\tconst textarea = document.querySelector(`#comment_${post.postId}_${comment.commentId} textarea`)\r\n\t\tif (!update) {\r\n\t\t\tupdate = true\r\n\t\t\ttextarea.classList.add('updateMode')\r\n\t\t\ttextarea.readOnly = false\r\n\t\t\ttextarea.focus()\r\n\t\t} else if (window.confirm('댓글을 수정하시겠습니까?')) {\r\n\t\t\tupdate = false\r\n\t\t\ttextarea.classList.remove('updateMode')\r\n\t\t\ttextarea.readOnly = true\r\n\r\n\t\t\tlet url = process.env.REACT_APP_URL + `/comments/${post.postId}/${comment.commentId}`\r\n\t\t\t//url = process.env.REACT_APP_LOCAL_URL+`/comments/${post.postId}/${comment.commentId}`\r\n\r\n\t\t\tAxios.patch(url, {\r\n\t\t\t\t//댓글 수정\r\n\t\t\t\twithCredentials: true, //CORS\r\n\t\t\t\tdata: {\r\n\t\t\t\t\tcontent: textarea.value,\r\n\t\t\t\t},\r\n\t\t\t})\r\n\t\t\t\t.then((res) => {\r\n\t\t\t\t\tconsole.log(`${comment.commentId}번 댓글 수정 성공`)\r\n\t\t\t\t\trefreshComment() //포스트 다시 불러오기\r\n\t\t\t\t})\r\n\t\t\t\t.catch((e) => alert(e)) //실패\r\n\t\t}\r\n\t}\r\n\r\n\tconst deleteComment = (e) => {\r\n\t\tif (window.confirm('삭제 후에는 복구가 불가합니다. 정말로 댓글을 삭제하시겠습니까?')) {\r\n\t\t\tlet url = process.env.REACT_APP_URL + `/comments/delete/${post.postId}/${comment.commentId}`\r\n\t\t\t//url = process.env.REACT_APP_LOCAL_URL+`/comments/delete/${post.postId}/${comment.commentId}`\r\n\r\n\t\t\tAxios.patch(url, {\r\n\t\t\t\t//포스트 삭제\r\n\t\t\t\twithCredentials: true, //CORS\r\n\t\t\t})\r\n\t\t\t\t.then((res) => {\r\n\t\t\t\t\tconsole.log(`${comment.commentId}번 댓글 삭제 성공`)\r\n\t\t\t\t\trefreshComment() //포스트 다시 불러오기\r\n\t\t\t\t})\r\n\t\t\t\t.catch((e) => alert(e)) //실패\r\n\t\t}\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className=\"commentWrapper\" id={`comment_${post.postId}_${comment.commentId}`}>\r\n\t\t\t<div className=\"comment\">\r\n\t\t\t\t<div className=\"commentProfile\">\r\n\t\t\t\t\t{!comment.username ? (\r\n\t\t\t\t\t\t<img alt=\"PROFILE\" src={process.env.PUBLIC_URL + '/images/noavatar.png'} />\r\n\t\t\t\t\t) : (\r\n\t\t\t\t\t\t<img\r\n\t\t\t\t\t\t\talt=\"PROFILE\"\r\n\t\t\t\t\t\t\tsrc={imageUrl}\r\n\t\t\t\t\t\t\tonError={(e) => {\r\n\t\t\t\t\t\t\t\te.target.src = process.env.PUBLIC_URL + '/images/dog' + (Math.floor(Math.random() * (3 - 1 + 1)) + 1) + '.png'\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"commentContent\">\r\n\t\t\t\t\t{comment.username === store.login.username ? (\r\n\t\t\t\t\t\t<span className=\"commentUsername\" style={{ fontWeight: 'bold' }}>\r\n\t\t\t\t\t\t\t{comment.username}\r\n\t\t\t\t\t\t</span>\r\n\t\t\t\t\t) : (\r\n\t\t\t\t\t\t<span className=\"commentUsername\">{comment.username}</span>\r\n\t\t\t\t\t)}\r\n\t\t\t\t\t<span className=\"commentDate\">\r\n\t\t\t\t\t\t{' '}\r\n\t\t\t\t\t\t- {date} {comment.updated && '(수정됨)'}\r\n\t\t\t\t\t</span>\r\n\t\t\t\t\t<textarea readOnly onChange={store.resizeTextarea} />\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t{((comment.username && comment.username === store.login.username) || store.login.username === 'imki123') && (\r\n\t\t\t\t<div className=\"commentButtons\">\r\n\t\t\t\t\t<button className=\"commentButton\" onClick={updateComment}>\r\n\t\t\t\t\t\t수정\r\n\t\t\t\t\t</button>\r\n\t\t\t\t\t<button className=\"commentButton\" style={{ background: 'red' }} onClick={deleteComment}>\r\n\t\t\t\t\t\t삭제\r\n\t\t\t\t\t</button>\r\n\t\t\t\t</div>\r\n\t\t\t)}\r\n\t\t</div>\r\n\t)\r\n}\r\nexport default React.memo(Comment)\r\n","// components/Meta\r\n/* eslint-disable no-undefined */\r\nimport React from 'react'\r\nimport { Helmet } from 'react-helmet'\r\n\r\nconst locales = {\r\n  en: 'en_US',\r\n  ko: 'ko_KR',\r\n}\r\n\r\nconst Meta = ({ data }) => {\r\n  const lang = locales[data.locale] || locales['en']\r\n  const title = data.title\r\n  const description = data.description\r\n  const image = data.image !== undefined && `${data.image}`\r\n  const canonical = data.canonical === undefined ? null : `https://imki123.github.io/${data.canonical}`\r\n  const type = data.type === undefined ? 'website' : data.type\r\n  const width = data.image && (data.width || 1200)\r\n  const height = data.image && (data.height || 630)\r\n\r\n  return (\r\n    <Helmet titleTemplate=\"%s\">\r\n      <html lang={lang} />\r\n      <title>{title}</title>\r\n      <meta name=\"description\" content={description} />\r\n      {canonical ? <link rel=\"canonical\" href={canonical} /> : null}\r\n      {image ? <link rel=\"image_src\" href={image} /> : null}\r\n      {image ? <meta itemprop=\"image\" content={image} /> : null}\r\n\r\n      <meta property=\"og:site_name\" content=\"임기의 코딩 블로그\" />\r\n      <meta property=\"og:title\" content={title} />\r\n      {description ? <meta property=\"og:description\" content={description} /> : null}\r\n      {canonical ? <meta property=\"og:url\" content={canonical} /> : null}\r\n      <meta property=\"og:locale\" content={locales[lang]} />\r\n      <meta property=\"og:type\" content={type} />\r\n      {image ? <meta property=\"og:image\" content={image} /> : null}\r\n      {width ? <meta property=\"og:image:width\" content={width} /> : null}\r\n      {height ? <meta property=\"og:image:height\" content={height} /> : null}\r\n      <meta property=\"fb:pages\" content=\"임기의 코딩 블로그\" />\r\n\r\n      {/* change type of twitter if there is no image? */}\r\n      <meta name=\"twitter:card\" content=\"summary_large_image\" />\r\n      <meta name=\"twitter:title\" content={title} />\r\n      {description ? <meta name=\"twitter:description\" content={description} /> : null}\r\n      {image ? <meta name=\"twitter:image\" content={image} /> : null}\r\n      <meta name=\"twitter:site\" content=\"@임기의 코딩 블로그\" />\r\n      {canonical ? <link rel=\"alternate\" href={canonical} hreflang={lang} /> : null}\r\n    </Helmet>\r\n  )\r\n}\r\n\r\nexport default Meta\r\n","import React from 'react'\r\nimport './PostList.css'\r\nimport { Link } from 'react-router-dom'\r\n\r\nfunction PostList(props) {\r\n\tconst { list, no } = props\r\n\tlet date = list.publishedDate.substring(0, 10).replace('T', ' ')\r\n\r\n\treturn (\r\n\t\t<Link to={`/posts/${list.postId}`}>\r\n\t\t\t<div className=\"postList no-drag\">\r\n\t\t\t\t<div className=\"postListTags\">\r\n\t\t\t\t\t<span className=\"postTags\">\r\n\t\t\t\t\t\tTag : {list.tags[0]}{list.tags[1] ? `, ${list.tags[1]}` : ''}\r\n\t\t\t\t\t</span>\r\n\t\t\t\t\t<span className=\"postDate\">\r\n\t\t\t\t\t{list.views ? list.views : 0}, {date}\r\n\t\t\t\t\t</span>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"postListHeader\">\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<span className=\"postId\">{no}.</span>\r\n\t\t\t\t\t\t<span className=\"postTitle\">{list.title}</span>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"postBody\">{list.text}</div>\r\n\t\t\t</div>\r\n\t\t</Link>\r\n\t)\r\n}\r\nexport default React.memo(PostList)\r\n","import React from 'react'\r\nimport './Recents.css'\r\n\r\nimport PostList from './PostList'\r\n\r\nfunction Recents(props) {\r\n\tconst {title, list} = props\r\n\treturn (\r\n\t\t<div className=\"post recents\">\r\n            <div className=\"postListTitle\">{title}</div>\r\n            {list && list.map((i, idx) => <PostList no={idx+1} list={i} key={i.postId} />)}\r\n\t\t</div>\r\n\t)\r\n}\r\nexport default React.memo(Recents)\r\n","import Axios from 'axios'\r\nimport React, { useEffect, useState } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { AppContext } from '../App'\r\nimport './CommentLists.css'\r\nimport Meta from './Meta'\r\n\r\nfunction CommentLists(props) {\r\n  const store = React.useContext(AppContext)\r\n  const { list, location } = props\r\n  const [comments, setComments] = useState()\r\n  const [commentCnt, setCommentCnt] = useState(10)\r\n  const [recentAll, setRecentAll] = useState('')\r\n\r\n  useEffect(() => {\r\n    if (list) setComments(list) //props로 받은 list가 있으면 comments에 저장\r\n\r\n    if (location && (location.pathname === '/comments' || location.pathname === '/comments/')) {\r\n      //전체리스트면 Axios로 comments 가져옴\r\n      setRecentAll('recentAll')\r\n      let url = process.env.REACT_APP_URL + '/comments/recentAll'\r\n      //url = process.env.REACT_APP_LOCAL_URL + '/comments/recentAll'\r\n      Axios.get(url)\r\n        .then((res) => {\r\n          //console.log('comments:', res.data)\r\n          setComments(res.data)\r\n          setCommentCnt(20)\r\n          if (!res.data) {\r\n            setComments('')\r\n          }\r\n        })\r\n        .catch((res) => {\r\n          setComments('')\r\n          //console.log(res)\r\n        })\r\n    }\r\n  }, [location, list])\r\n\r\n  useEffect(() => {\r\n    if (store) store.setReady(false)\r\n    if (comments) {\r\n      store.setReady(true)\r\n    } else if (comments === '') {\r\n      store.setReady(true)\r\n    }\r\n  })\r\n\r\n  //댓글 10개 더보기\r\n  const more = (e) => {\r\n    setCommentCnt(commentCnt + 10)\r\n  }\r\n\r\n  return (\r\n    <div className={`post recents recentComment ${recentAll}`}>\r\n      {location && (location.pathname === '/comments' || location.pathname === '/comments/') && (\r\n        <Meta\r\n          data={{\r\n            title: '최근 댓글 목록',\r\n            description: comments && comments.reduce((a, b) => a + ' / ' + b.content, ''),\r\n            canonical: `comments`\r\n          }}\r\n        />\r\n      )}\r\n      <div className=\"postListTitle\">최신 댓글 {list && <Link to=\"/comments\">더보기</Link>}</div>\r\n      {comments &&\r\n        comments.map((i, idx) => (\r\n          <div key={i.title + idx}>\r\n            {idx < commentCnt && (\r\n              <Link to={`/posts/${i.postId}/#comments`}>\r\n                <div className=\"postList no-drag\">\r\n                  <div className=\"postListHeader\">\r\n                    <div>\r\n                      <span className=\"postId\">{idx + 1}.</span>\r\n                      <span className=\"username\">{i.username}</span>\r\n                    </div>\r\n                    <span className=\"postDate\">{i.publishedDate && i.publishedDate.substring(0, 19).replace('T', ' ')}</span>\r\n                  </div>\r\n                  <div className=\"postBody\">{i.content}</div>\r\n                  <div className=\"postTitle\">{i.title}</div>\r\n                </div>\r\n              </Link>\r\n            )}\r\n          </div>\r\n        ))}\r\n      {comments && comments.length > commentCnt && (\r\n        <div className=\"more\">\r\n          <span className=\"moreButton\" onClick={more}>\r\n            댓글 더보기\r\n          </span>\r\n        </div>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\nexport default React.memo(CommentLists)\r\n","/* eslint-disable jsx-a11y/accessible-emoji */\r\nimport React from 'react'\r\nimport './Emoji.css'\r\nimport { CopyToClipboard } from 'react-copy-to-clipboard'\r\n\r\nfunction Emoji(props) {\r\n  const { emojis } = props\r\n  let splited = emojis.split(',')\r\n\r\n  const copied = (e) => {\r\n    let emoji = e.target\r\n    emoji.style.background = 'blue'\r\n    setTimeout(function () {\r\n      emoji.style.background = 'unset'\r\n    }, 1000)\r\n  }\r\n\r\n  return (\r\n    <span className=\"Emoji\">\r\n      {splited &&\r\n        splited.map((i, idx) => (\r\n          <CopyToClipboard key={idx} options={{ format: 'text/plain' }} text={i}>\r\n            <span onClick={copied}>{i}</span>\r\n          </CopyToClipboard>\r\n        ))}\r\n      <span\r\n        className=\"EmojiLink\"\r\n        onClick={() => {\r\n          window.open('https://copy.emojiall.com/ko/')\r\n        }}\r\n      >\r\n        [이모지🔗]\r\n      </span>\r\n    </span>\r\n  )\r\n}\r\nexport default React.memo(Emoji)\r\n","/* eslint-disable jsx-a11y/accessible-emoji */\r\nimport React, { useEffect, useState } from 'react'\r\nimport './Post.css'\r\nimport { Link } from 'react-router-dom'\r\nimport { useQuill } from 'react-quilljs'\r\nimport Comment from './Comment'\r\nimport { AppContext } from '../App'\r\nimport RefreshIcon from '@material-ui/icons/Refresh'\r\nimport Axios from 'axios'\r\nimport Meta from './Meta'\r\nimport Recents from './Recents'\r\nimport CommentLists from './CommentLists'\r\nimport Emoji from './Emoji'\r\n\r\nfunction Post({ match, location, history }) {\r\n  const store = React.useContext(AppContext)\r\n  let { postId } = match.params\r\n  const [post, setPost] = useState(false)\r\n  const [postBody, setPostBody] = useState()\r\n  const [comments, setComments] = useState([])\r\n  const [commentCnt, setCommentCnt] = useState(3)\r\n\r\n  const [recents, setRecents] = useState([])\r\n  const [popular, setPopular] = useState([])\r\n  const [recentComments, setRecentComments] = useState([])\r\n\r\n  const modules = { syntax: true }\r\n  const formats = ['bold', 'italic', 'underline', 'strike', 'code-block', 'blockquote', 'size', 'header', 'align', 'color', 'background', 'indent', 'list', 'link', 'image', 'video', 'clean']\r\n  const { quill, quillRef } = useQuill({ modules, formats, readOnly: true })\r\n\r\n  useEffect(() => {\r\n    setPost(false)\r\n    setPostBody(false)\r\n    //포스트 가져오기\r\n    let id = 1\r\n    if (postId) id = postId\r\n    let url = process.env.REACT_APP_URL + '/posts/' + id\r\n    //url = process.env.REACT_APP_LOCAL_URL + '/posts/' + id\r\n    Axios.get(url, {\r\n      withCredentials: true,\r\n    })\r\n      .then((res) => {\r\n        setComments(res.data.comments)\r\n        setPost(res.data)\r\n      })\r\n      .catch((e) => {\r\n        alert('찾으시는 페이지가 없습니다.\\n' + e)\r\n        history.go(-1)\r\n      }) //실패\r\n\r\n    //포스트바디 가져오기\r\n    url = process.env.REACT_APP_URL + '/posts/postBody/' + id\r\n    //url = process.env.REACT_APP_LOCAL_URL + '/posts/postBody/' + id\r\n    Axios.get(url)\r\n      .then((res) => {\r\n        setPostBody(res.data.body)\r\n\r\n        if (location.hash) {\r\n          //hash가 있으면 해당 엘리먼트로 스크롤\r\n          setTimeout(function () {\r\n            //postBody가 로드된 이후에 스크롤이 되야해서 0.01초 타임아웃 추가..\r\n            const content = document.querySelector('#content')\r\n            const elem = document.querySelector(location.hash)\r\n            if (content && elem) {\r\n              let contentScroll = content.scrollTop\r\n              let elemTop = elem.offsetTop\r\n              let dif = (elemTop - contentScroll) / 100\r\n              let frame\r\n              //프레임이 혹시라도 안멈출 수 있어서 1초 후에 강제로 종료함\r\n              setTimeout(function () {\r\n                clearInterval(frame)\r\n              }, 1000)\r\n              if (elemTop > contentScroll) {\r\n                frame = setInterval(function () {\r\n                  //인터벌\r\n                  if (content.scrollTop + dif >= elemTop || content.scrollTop >= content.scrollHeight - content.clientHeight) {\r\n                    clearInterval(frame)\r\n                  } else {\r\n                    content.scrollTop += dif\r\n                  }\r\n                }, 10)\r\n              } else {\r\n                frame = setInterval(function () {\r\n                  if (content.scrollTop <= elemTop) {\r\n                    clearInterval(frame)\r\n                  } else {\r\n                    content.scrollTop += dif\r\n                  }\r\n                }, 10)\r\n              }\r\n            }\r\n          }, 10)\r\n        }\r\n      })\r\n      .catch((e) => {\r\n        console.log(e)\r\n      }) //실패\r\n\r\n    //홈일경우 recents, popular, recentComments 가져옴\r\n    if (location.pathname === '/') {\r\n      url = process.env.REACT_APP_URL + '/posts/popular'\r\n      //url = process.env.REACT_APP_LOCAL_URL + '/posts/popular'\r\n      Axios.get(url).then((res) => {\r\n        setPopular(res.data)\r\n      })\r\n\r\n      url = process.env.REACT_APP_URL + '/posts/recents'\r\n      //url = process.env.REACT_APP_LOCAL_URL + '/posts/recents'\r\n      Axios.get(url).then((res) => {\r\n        setRecents(res.data)\r\n      })\r\n\r\n      url = process.env.REACT_APP_URL + '/comments/recent'\r\n      //url = process.env.REACT_APP_LOCAL_URL + '/comments/recent'\r\n      Axios.get(url).then((res) => {\r\n        setRecentComments(res.data)\r\n      })\r\n    }\r\n  }, [location, postId, history])\r\n\r\n  //포스트 바디가 준비되면 quill에 포스트 바디를 그리고\r\n  //포스트 바디가 없으면 포스트가 있으면 quill에 포스트 텍스트를 그리기.\r\n  useEffect(() => {\r\n    if (quill) {\r\n      if (postBody) {\r\n        quill.setContents(postBody)\r\n      } else if (post) {\r\n        quill.setText(post.text)\r\n      }\r\n    }\r\n  }, [quill, postBody, post])\r\n\r\n  //포스트가 준비되면 화면 보이기\r\n  useEffect(() => {\r\n    store.setReady(false)\r\n    if (post) {\r\n      store.setReady(true)\r\n\r\n      //태그 찾아서 activeListManual 적용\r\n      let tags\r\n      if (post.tags[1]) {\r\n        tags = document.querySelectorAll(`a[href=\"/tags/${post.tags[1]}\"]`)\r\n      } else if (post.tags[0]) {\r\n        tags = document.querySelectorAll(`a[href=\"/tags/${post.tags[0]}\"]`)\r\n      }\r\n      if (tags) {\r\n        for (let i of tags) {\r\n          i.classList.add('activeListManual')\r\n        }\r\n      }\r\n    }\r\n  })\r\n\r\n  const deletePost = (e) => {\r\n    if (window.confirm('글 삭제 시 복구가 불가합니다. 해당 글을 정말로 삭제하시겠습니까?')) {\r\n      const postId = e.target.id\r\n      let url = process.env.REACT_APP_URL + '/posts/' + postId\r\n      //url = process.env.REACT_APP_LOCAL_URL+'/posts/'+postId\r\n\r\n      Axios.delete(url, {\r\n        //글 삭제\r\n        withCredentials: true, //CORS\r\n      })\r\n        .then((res) => {\r\n          console.log(`${postId}번 글 삭제 성공`)\r\n          history.go(-1)\r\n        })\r\n        .catch((e) => alert(e)) //실패\r\n    }\r\n  }\r\n\r\n  const postComment = (e) => {\r\n    const comment = document.querySelector(`.commentContent textarea`) //댓글 텍스트\r\n    if (comment && comment.value !== '' && window.confirm('댓글을 작성하시겠습니까?')) {\r\n      let url = process.env.REACT_APP_URL + '/comments/' + post.postId\r\n      //url = process.env.REACT_APP_LOCAL_URL+'/comments/'+post.postId\r\n\r\n      Axios.patch(url, {\r\n        //댓글 작성\r\n        withCredentials: true, //CORS\r\n        data: {\r\n          username: store.login.username,\r\n          content: comment.value,\r\n        },\r\n      })\r\n        .then((res) => {\r\n          console.log(`${post.postId} 댓글 추가 성공`)\r\n          refreshComment(null, setCommentCnt(res.data.comments.length)) //포스트 다시 불러오고 댓글 끝까지 보이기\r\n          comment.value = ''\r\n        })\r\n        .catch((e) => alert(e)) //실패\r\n    }\r\n  }\r\n\r\n  const refreshComment = (e, func) => {\r\n    //댓글 가져오기\r\n    let url = process.env.REACT_APP_URL + '/comments/' + post.postId\r\n    //url = process.env.REACT_APP_LOCAL_URL+'/comments/'+post.postId\r\n\r\n    let svg //refresh 아이콘\r\n    if (e && e.target) svg = e.target.querySelector('svg')\r\n    if (svg) svg.classList.add('refreshing') //refresh 애니메이션 시작\r\n\r\n    Axios.get(url, {\r\n      withCredentials: true,\r\n    }) //댓글 새로고치기\r\n      .then((res) => {\r\n        console.log(`${post.postId} 댓글 새로고침`)\r\n        setComments(res.data) //댓글 저장\r\n        if (svg) svg.classList.remove('refreshing') //refresh 애니메이션 끝\r\n\r\n        if (func) func() //파라미터에 함수가 있으면 함수 실행\r\n      })\r\n      .catch((e) => {\r\n        //실패\r\n        if (svg) svg.classList.remove('refreshing') //refresh 애니메이션 끝\r\n        console.log(e)\r\n      })\r\n  }\r\n\r\n  //댓글 10개 더보기\r\n  const more = (e) => {\r\n    setCommentCnt(commentCnt + 10)\r\n  }\r\n\r\n  //댓글 더보기, 댓글 새로고침 하면 리사이즈\r\n  useEffect(() => {\r\n    store.resizeTextarea()\r\n  }, [commentCnt, store, comments])\r\n\r\n  return (\r\n    <>\r\n      <div className=\"post\">\r\n        {location.pathname === '/' ? (\r\n          <Meta\r\n            data={{\r\n              title: '임기의 코딩 블로그',\r\n              description: post.text,\r\n              canonical: '',\r\n            }}\r\n          />\r\n        ) : (\r\n          <Meta data={{ title: post.title, description: post.text, canonical: `posts/${post.postId}`}} />\r\n        )}\r\n        {/* 태그 */}\r\n        <div className=\"nav\">\r\n          <div>\r\n            <span>Tag : </span>\r\n            {post.tags &&\r\n              post.tags.map((i, idx) =>\r\n                idx === 0 ? (\r\n                  <span key={i}>\r\n                    <Link to={i === 'home' ? '/' : `/tags/${i}`}>{i}</Link>\r\n                  </span>\r\n                ) : (\r\n                  <span key={i}>\r\n                    , <Link to={`/tags/${i}`}>{i}</Link>\r\n                  </span>\r\n                ),\r\n              )}\r\n          </div>\r\n          <div>\r\n            {/* 조회수 */}\r\n            {\r\n              /* post.postId !== 1 &&  */ <span>\r\n                조회수: {post.views ? post.views + 1 : 1}\r\n                {', '}\r\n              </span>\r\n            }\r\n            {/* 게시일자 */}\r\n            {post && post.publishedDate.substring(0, 16).replace('T', ' ')}\r\n          </div>\r\n        </div>\r\n\r\n        {/* 글 수정 삭제 버튼 */}\r\n        {store.login && store.login.username === 'imki123' && (\r\n          <div className=\"postButtons\">\r\n            <Link to={`/quill/${post.postId}`} className=\"hover no-drag\">\r\n              수정\r\n            </Link>\r\n            &nbsp;\r\n            <button onClick={deletePost} id={post.postId} style={{ background: 'red' }}>\r\n              삭제\r\n            </button>\r\n          </div>\r\n        )}\r\n\r\n        <h2 className=\"postTitle\">{post.title}</h2>\r\n        <div className=\"postContent\">\r\n          {/* 본문 */}\r\n          <div id=\"editor\">\r\n            <div ref={quillRef} />\r\n          </div>\r\n          <div className=\"hiddenText\">{post.text}</div>\r\n\r\n          {/* 글 수정 삭제 버튼 */}\r\n          {store.login && store.login.username === 'imki123' && (\r\n            <div className=\"postButtons\">\r\n              <Link to={`/quill/${post.postId}`} className=\"hover no-drag\">\r\n                수정\r\n              </Link>\r\n              &nbsp;\r\n              <button onClick={deletePost} id={post.postId} style={{ background: 'red' }}>\r\n                삭제\r\n              </button>\r\n            </div>\r\n          )}\r\n        </div>\r\n\r\n        {/* 댓글 작성*/}\r\n        {location.pathname !== '/' && (\r\n          <>\r\n            <div className=\"EmojiDiv\">\r\n                <Emoji emojis={'😄,🤣,🥰,😍,😝,😭,👍,🐕,🐈,☀,🌙,⭐,☁,🌧,💧,♥,❤,💕'} />\r\n            </div>\r\n            <div className=\"writeComment\">\r\n              <div className=\"commentProfile\">\r\n                {!store.login ? (\r\n                  <img alt=\"PROFILE\" src={process.env.PUBLIC_URL + '/images/noavatar.png'} />\r\n                ) : (\r\n                  <img\r\n                    alt=\"PROFILE\"\r\n                    src={store.login.imageUrl}\r\n                    onError={(e) => {\r\n                      e.target.src = process.env.PUBLIC_URL + '/images/dog' + (Math.floor(Math.random() * (3 - 1 + 1)) + 1) + '.png'\r\n                    }}\r\n                  />\r\n                )}\r\n              </div>\r\n              <div className=\"commentContent\">\r\n                {store.login ? (\r\n                  <span className=\"commentUsername\">{store.login.username}</span>\r\n                ) : (\r\n                  <button\r\n                    className=\"loginButton\"\r\n                    onClick={() => {\r\n                      history.push('/login')\r\n                    }}\r\n                  >\r\n                    로그인\r\n                  </button>\r\n                )}\r\n                {store.login ? <textarea onChange={store.resizeTextarea} placeholder=\" 댓글을 남겨주세요 😄\" /> : <textarea readOnly placeholder=\" 로그인 후에 댓글을 남겨주세요 😄\" />}\r\n              </div>\r\n            </div>\r\n            <div className=\"commentButtons\">\r\n              {store.login && (\r\n                <button className=\"commentButton\" onClick={postComment}>\r\n                  댓글작성\r\n                </button>\r\n              )}\r\n            </div>\r\n          </>\r\n        )}\r\n\r\n        {/* 댓글 목록 */}\r\n        {comments && comments.length > 0 && (\r\n          <div id=\"comments\">\r\n            <div className=\"commentTitle\">\r\n              <div className=\"commentCnt\">댓글 {comments.length}개</div>\r\n              <span className=\"commentRefresh\" onClick={refreshComment}>\r\n                댓글 새로고침 <RefreshIcon />\r\n              </span>\r\n            </div>\r\n            {comments.map((i, idx) => idx < commentCnt && <Comment post={post} comment={i} key={i.commentId} refreshComment={refreshComment} />)}\r\n            {comments.length > commentCnt && (\r\n              <div className=\"more\">\r\n                <span className=\"moreButton\" onClick={more}>\r\n                  댓글 더보기\r\n                </span>\r\n              </div>\r\n            )}\r\n          </div>\r\n        )}\r\n      </div>\r\n      {location.pathname === '/' && (\r\n        <div className=\"homeLists\">\r\n          <Recents title=\"최신글\" list={recents} />\r\n          <Recents title=\"인기글\" list={popular} />\r\n          <CommentLists list={recentComments} />\r\n        </div>\r\n      )}\r\n    </>\r\n  )\r\n}\r\nexport default React.memo(Post)\r\n","import React, { useEffect } from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { AppContext } from '../App'\r\nimport './NotFoundPage.css'\r\n\r\nfunction NotFoundPage() {\r\n\tconst store = React.useContext(AppContext)\r\n\tconst history = useHistory()\r\n\tuseEffect(() => {\r\n\t\t//console.log(`Not found page! https://imki123.github.io/`)\r\n\t\tstore.setReady(true)\r\n\t})\r\n\r\n\tconst goBack = e => {\r\n\t\thistory.go(-1)\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className=\"notFound\">\r\n\t\t\t<div className=\"title\">Not Found Page</div>\r\n\t\t\t<div className=\"goHome\">\r\n\t\t\t\t<span onClick={goBack}>Go back</span>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\nexport default React.memo(NotFoundPage)\r\n","import React, { useState, useEffect } from 'react'\r\nimport './Login.css'\r\nimport { Link } from 'react-router-dom'\r\nimport { AppContext } from '../App'\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert'\r\nimport Meta from './Meta'\r\n\r\nfunction Login({ history, match, location }) {\r\n  const store = React.useContext(AppContext)\r\n  let browser = ''\r\n  const agent = navigator.userAgent.toLowerCase()\r\n  if (agent.indexOf('chrome') > -1) browser = 'chrome'\r\n  else if (agent.indexOf('safari') > -1) browser = 'safari'\r\n\r\n  const [checkUsername, setCheckUsername] = useState('')\r\n  const [checkPassword, setCheckPassword] = useState('')\r\n  const [checkPasswordConfirm, setCheckPasswordConfirm] = useState('')\r\n  const [buttonName, setButtonName] = useState('로그인')\r\n  const [userinfo, setUserinfo] = useState()\r\n\r\n  useEffect(() => {\r\n    //로그인화면에서 로그인은 안되어있는데 유저정보가 있으면 로그인 처리\r\n    const userinfoElem = document.querySelector('#userinfo')\r\n    if (location.pathname === '/login' || location.pathname === '/login/' || location.pathname === '/register' || location.pathname === '/register/') {\r\n      if (!store.login) {\r\n        let frame = setInterval(function () {\r\n          console.log('유저정보 체크')\r\n          if (userinfoElem && userinfoElem.value) {\r\n            //userinfo가 있으면 로그인 처리\r\n            //새로고침되거나, 로그인 버튼을 누르면 userinfo를 가져옴\r\n            clearInterval(frame) //userinfo 있으면 로그인 체크 중지\r\n            let user = JSON.parse(userinfoElem.value)\r\n\r\n            if (user.host === 'naver') {\r\n              let email = user.email\r\n              let username\r\n              if (email) {\r\n                username = email.substring(0, email.indexOf('@')) + '_n'\r\n                if (username === 'popping2606_n') username = 'imki123' //내아이디\r\n                console.log('네이버 로그인 성공:', username)\r\n                user = {\r\n                  username: username,\r\n                  email: email,\r\n                  imageUrl: user.profile_image,\r\n                  host: user.host,\r\n                }\r\n              } else {\r\n                console.log('이메일 정보 없음. 로그아웃.')\r\n                alert('이메일이 없으면 로그인이 불가해요. 이메일 동의 부탁드려요 😄')\r\n                //네이버 로그아웃\r\n                const naverLogout = document.querySelector('#naverLogout')\r\n                if (naverLogout) naverLogout.click()\r\n                userinfoElem.value = ''\r\n                history.replace()\r\n                return\r\n              }\r\n            } else if (user.host === 'kakao') {\r\n              let email = user.email\r\n              let username\r\n              if (email) {\r\n                username = email.substring(0, email.indexOf('@')) + '_k'\r\n                if (username === 'popping2606_k') username = 'imki123' //내아이디\r\n                console.log('카카오 로그인 성공:', username)\r\n                user = {\r\n                  username: username,\r\n                  email: email,\r\n                  imageUrl: user.profile.thumbnail_image_url,\r\n                  host: user.host,\r\n                }\r\n              } else {\r\n                console.log('이메일 정보 없음. 로그아웃.')\r\n                alert('이메일이 없으면 로그인이 불가해요. 이메일 동의 부탁드려요 😄')\r\n                //카카오 로그아웃\r\n                const kakaoLogout = document.querySelector('#kakaoLogout')\r\n                if (kakaoLogout) kakaoLogout.click()\r\n                userinfoElem.value = ''\r\n                history.replace()\r\n                return\r\n              }\r\n            } else {\r\n              let email = user.email\r\n              let username = email.substring(0, email.indexOf('@')) + '_g'\r\n              if (username === 'popping2606_g') username = 'imki123' //내아이디\r\n              console.log('구글 로그인 성공:', username)\r\n              user = {\r\n                username: username,\r\n                email: email,\r\n                name: user.name,\r\n                imageUrl: user.imageUrl,\r\n                host: user.host,\r\n              }\r\n            }\r\n            //console.log(user)\r\n\r\n            let url = process.env.REACT_APP_URL + '/auth/oauth'\r\n            //url = process.env.REACT_APP_LOCAL_URL + '/auth/oauth'\r\n            //로그인 성공시 토큰에 name, email, imageUrl 저장\r\n            fetch(url, {\r\n              mode: 'cors',\r\n              method: 'POST',\r\n              credentials: 'include',\r\n              headers: { 'Content-Type': 'application/json' },\r\n              body: JSON.stringify(user),\r\n            })\r\n              .then((res) => {\r\n                if (res.status === 200 || res.status === 201) {\r\n                  //성공하면 아래 then 작동\r\n                  res.json().then((res) => {\r\n                    alert(res.username + '님 환영합니다 😄')\r\n                    setUserinfo(res)\r\n                    //로그인 시 홈으로 이동\r\n                    history.replace('/')\r\n                    //history.go(-1) //뒤로가기\r\n                  })\r\n                } else {\r\n                  let message = '로그인에 실패했습니다 :('\r\n                  if (res.status === 401) {\r\n                    message += '\\n로그인 정보를 확인해주세요.'\r\n                  }\r\n                  console.log(message)\r\n                }\r\n              })\r\n              .catch((e) => console.error(e))\r\n          }\r\n        }, 1000)\r\n      }\r\n    } else if (location.pathname === '/loginStatus' || location.pathname === '/loginStatus/') {\r\n      if (userinfoElem && !userinfoElem.value) {\r\n        setUserinfo(false)\r\n      }\r\n    }\r\n  }, [store.login, location, history])\r\n\r\n  useEffect(() => {\r\n    //유저인포가 있으면 로그인처리\r\n    if (store) {\r\n      store.setReady(true)\r\n      if (userinfo) {\r\n        store.setLogin(userinfo)\r\n      }\r\n    }\r\n  })\r\n\r\n  useEffect(() => {\r\n    //이미 로그인이 되어있다면 스테이터스로 이동\r\n    if (location.pathname === '/login' || location.pathname === '/login/') {\r\n      if (store.login) {\r\n        history.replace('/loginStatus')\r\n      }\r\n    }\r\n\r\n    //로그인이 안되어있으면 로그인으로 이동\r\n    if (location.pathname === '/loginStatus' || location.pathname === '/loginStatus/') {\r\n      //console.log(store.login)\r\n      if (!store.login) {\r\n        setTimeout(function () {\r\n          if (!store.login) {\r\n            history.replace('/login')\r\n          }\r\n        }, 1000)\r\n      }\r\n    }\r\n    if (location.pathname.indexOf('register') > -1) {\r\n      setButtonName('회원가입')\r\n    } else if (location.pathname.indexOf('withdraw') > -1) {\r\n      setButtonName('회원탈퇴')\r\n    } else {\r\n      setButtonName('로그인')\r\n    }\r\n  }, [location, store.login, history])\r\n\r\n  const changeUsername = (e) => {\r\n    const pattern = /[^a-zA-Z0-9ㄱ-ㅎㅏ-ㅣ가-힣_]/g\r\n    const value = (e.target.value = e.target.value.replace(/\\s/g, '_').replace(pattern, ''))\r\n    if (value.length < 3) {\r\n      //3글자 이상\r\n      setCheckUsername('- 3자 이상 입력해주세요')\r\n    } else if (value.length > 20) {\r\n      //20글자 이하\r\n      setCheckUsername('- 20자 이하로 입력해주세요')\r\n    } else {\r\n      setCheckUsername('')\r\n    }\r\n  }\r\n  const changePassword = (e) => {\r\n    const { value } = e.target\r\n    const passwordConfirm = document.querySelector('[name=passwordConfirm]')\r\n\r\n    //비밀번호가 변경되면 비밀번호 확인은 초기화\r\n    if (passwordConfirm) {\r\n      passwordConfirm.value = ''\r\n      setCheckPasswordConfirm('')\r\n    }\r\n\r\n    if (value.length < 6) {\r\n      //6글자 이상\r\n      setCheckPassword('- 6자 이상 입력해주세요')\r\n    } else if (value.length > 20) {\r\n      //20글자 이하\r\n      setCheckPassword('- 20자 이하로 입력해주세요')\r\n    } else {\r\n      setCheckPassword('')\r\n    }\r\n  }\r\n  const changePasswordConfirm = (e) => {\r\n    const { value } = e.target\r\n    const password = document.querySelector('[name=password]')\r\n\r\n    if (value !== password.value && value.length >= 1) {\r\n      //password와 같으면\r\n      setCheckPasswordConfirm('- 비밀번호가 일치하지 않습니다')\r\n    } else {\r\n      setCheckPasswordConfirm('')\r\n    }\r\n  }\r\n  const clickButton = (e) => {\r\n    e.preventDefault()\r\n    let url = process.env.REACT_APP_URL + '/auth'\r\n    //url = process.env.REACT_APP_LOCAL_URL+'/auth'\r\n\r\n    const pattern = /[^a-zA-Z0-9가-힣_]/g\r\n    let username = document.querySelector('[name=username]')\r\n    if (username) username = username.value = username.value.replace(pattern, '')\r\n    let password = document.querySelector('[name=password]')\r\n    if (password) password = password.value\r\n\r\n    if (checkUsername === '' && password.length >= 1 && checkPassword === '' && checkPasswordConfirm === '') {\r\n      //입력폼에 이상이 없으면 fetch submit\r\n      if (buttonName === '회원가입') {\r\n        url += '/register'\r\n        fetch(url, {\r\n          mode: 'cors',\r\n          method: 'POST',\r\n          credentials: 'include',\r\n          headers: { 'Content-Type': 'application/json' },\r\n          body: JSON.stringify({\r\n            username: username,\r\n            password: password,\r\n          }),\r\n        })\r\n          .then((res) => {\r\n            if (res.status === 200 || res.status === 201) {\r\n              //성공하면 아래 then 작동\r\n              res.json().then((res) => {\r\n                alert(res.username + '님의 회원가입에 성공했습니다 😄')\r\n                history.go(-1)\r\n              })\r\n            } else {\r\n              let message = '회원가입에 실패했습니다 :('\r\n              if (res.status === 409) {\r\n                message += '\\n이미 존재하는 아이디입니다.'\r\n              }\r\n              if (res.status === 400) {\r\n                message += '\\n아이디나 비밀번호를 확인해주세요.'\r\n              }\r\n              alert(message)\r\n            }\r\n          })\r\n          .catch((e) => console.error(e))\r\n      } else if (buttonName === '회원탈퇴') {\r\n        if (window.confirm('계정 탈퇴시 복구할 수 없습니다. 정말로 탈퇴하시겠습니까?')) {\r\n          url += '/withdraw'\r\n          fetch(url, {\r\n            mode: 'cors',\r\n            method: 'DELETE',\r\n            credentials: 'include',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify({\r\n              username: store.login.username,\r\n              password: password,\r\n            }),\r\n          })\r\n            .then((res) => {\r\n              if (res.status === 200) {\r\n                //삭제하면 Ok\r\n                alert('계정이 탈퇴되었습니다. 또 들러 주세요 😄')\r\n                history.push('/')\r\n              } else {\r\n                let message = '탈퇴에 실패했습니다 :('\r\n                if (res.status === 204) {\r\n                  message += '\\n존재하지 않는 아이디입니다.'\r\n                }\r\n                if (res.status === 401) {\r\n                  message += '\\n비밀번호를 확인해주세요.'\r\n                }\r\n                alert(message)\r\n              }\r\n            })\r\n            .catch((e) => console.error(e))\r\n        }\r\n      } else {\r\n        //로그인\r\n        url += '/login'\r\n        fetch(url, {\r\n          mode: 'cors',\r\n          method: 'POST',\r\n          credentials: 'include',\r\n          headers: { 'Content-Type': 'application/json' },\r\n          body: JSON.stringify({\r\n            username: username,\r\n            password: password,\r\n          }),\r\n        })\r\n          .then((res) => {\r\n            if (res.status === 200 || res.status === 201) {\r\n              //성공하면 아래 then 작동\r\n              res.json().then((res) => {\r\n                store.setLogin(res)\r\n                alert(res.username + '님 환영합니다 😄')\r\n                history.go(-1)\r\n              })\r\n            } else {\r\n              let message = '로그인에 실패했습니다 :('\r\n              if (res.status === 401) {\r\n                message += '\\n로그인 정보를 확인해주세요.'\r\n              }\r\n              alert(message)\r\n            }\r\n          })\r\n          .catch((e) => console.error(e))\r\n      }\r\n    } else {\r\n      alert('입력 정보를 확인해주세요.')\r\n    }\r\n  }\r\n\r\n  const naverLogin = (e) => {\r\n    const naverIdLogin = document.querySelector('#naverIdLogin')\r\n    if (naverIdLogin) {\r\n      console.log('네이버 로그인 요청')\r\n      naverIdLogin.firstChild.click()\r\n    }\r\n  }\r\n  const kakaoLogin = (e) => {\r\n    const kakaoLogin = document.querySelector('#kakaoLogin')\r\n    if (kakaoLogin) {\r\n      console.log('카카오 로그인 요청')\r\n      kakaoLogin.click()\r\n    }\r\n  }\r\n  const googleLogin = (e) => {\r\n    const googleLogin = document.querySelector('#googleLogin')\r\n    if (googleLogin) {\r\n      console.log('구글 로그인 요청')\r\n      googleLogin.firstChild.firstChild.click()\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div id=\"background\">\r\n      <div id=\"loginWrapper\">\r\n        <Meta\r\n          data={{\r\n            title: '임기의 코딩 블로그',\r\n            description: '네이버, 카카오, 구글 계정으로 로그인 해보세요!',\r\n            canonical: `login`\r\n          }}\r\n        />\r\n        {location.pathname.indexOf('/loginStatus') > -1 ? (\r\n          <>\r\n            {store.login ? (\r\n              <div className=\"center\">\r\n                {store.login.username}님은 현재 <span style={{ color: 'green' }}>로그인</span> 되어있습니다 😄\r\n                <br />\r\n                <span style={{ fontSize: '0.8rem' }}>(로그인은 최대 일주일간 유지됩니다.)</span>\r\n              </div>\r\n            ) : (\r\n              <div className=\"login center\">\r\n                재 로그인이 필요합니다\r\n                <Link to=\"/login\" className=\"loginLink\">\r\n                  로그인\r\n                </Link>\r\n              </div>\r\n            )}\r\n          </>\r\n        ) : (\r\n          <>\r\n            {(buttonName === '로그인' || buttonName === '회원가입') && (\r\n              <div className=\"oAuth\">\r\n                <div className=\"login\">\r\n                  {/* 네이버 로그인 */}\r\n                  <div className=\"naverLogin no-drag\" onClick={naverLogin}>\r\n                    <img alt=\"\" src={process.env.PUBLIC_URL + '/images/naver.png'} />\r\n                    Log in with Naver\r\n                  </div>\r\n                  {/* 카카오 로그인 */}\r\n                  <div className=\"naverLogin kakaoLogin no-drag\" onClick={kakaoLogin}>\r\n                    <img alt=\"\" src={process.env.PUBLIC_URL + '/images/kakao.png'} />\r\n                    Log in with Kakao\r\n                  </div>\r\n                  {/* 구글 로그인 */}\r\n                  <div className=\"naverLogin googleLogin no-drag\" onClick={googleLogin}>\r\n                    <img alt=\"\" src={process.env.PUBLIC_URL + '/images/google.png'} />\r\n                    Log in with Google\r\n                  </div>\r\n                  <div className=\"googleWarning\">\r\n                    구글 로그인은 <span style={{ color: 'red' }}>인앱 브라우저(카카오톡 등)</span>에서 지원되지 않습니다. 오류 발생 시 더보기(\r\n                    <MoreVertIcon />, <img alt=\"\" src={process.env.PUBLIC_URL + '/images/share.png'} />\r\n                    )를 눌러서 <span>다른 브라우저(Chrome, Safari 등)</span>에서 실행해주세요.\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            )}\r\n            <form className=\"login\">\r\n              <div className=\"text\">아이디</div>\r\n              {buttonName === '회원탈퇴' ? <div>{store.login.username}</div> : <input name=\"username\" onChange={changeUsername} />}\r\n\r\n              <div className=\"check\">{checkUsername}</div>\r\n\r\n              <div className=\"text\">비밀번호</div>\r\n              <input name=\"password\" type=\"password\" onChange={changePassword} autoComplete=\"currnet-password\" />\r\n              <div className=\"check\">{checkPassword}</div>\r\n\r\n              {buttonName === '회원가입' && (\r\n                <>\r\n                  <div className=\"text\">비밀번호 확인</div>\r\n                  <input name=\"passwordConfirm\" type=\"password\" onChange={changePasswordConfirm} autoComplete=\"currnet-password\" />\r\n                  <div className=\"check\" id=\"checkPasswordConfirm\">\r\n                    {checkPasswordConfirm}\r\n                  </div>\r\n                </>\r\n              )}\r\n\r\n              {/* 버튼 */}\r\n              {buttonName === '회원탈퇴' ? (\r\n                <button style={{ background: 'red' }} onClick={clickButton}>\r\n                  {buttonName}\r\n                </button>\r\n              ) : (\r\n                <button onClick={clickButton}>{buttonName}</button>\r\n              )}\r\n\r\n              {/* 로그인 or 회원가입 */}\r\n              {buttonName === '로그인' && (\r\n                <div className=\"loginLink\">\r\n                  <Link to=\"/register\">회원가입</Link>\r\n                </div>\r\n              )}\r\n              {buttonName === '회원가입' && (\r\n                <div className=\"loginLink\">\r\n                  <Link to=\"/login\" className=\"loginLink\">\r\n                    로그인\r\n                  </Link>\r\n                </div>\r\n              )}\r\n\r\n              {browser === 'safari' && (\r\n                <div className=\"text\" style={{ fontSize: '0.8rem', textAlign: 'center' }}>\r\n                  (Safari의 설정을 변경해야 로그인이 가능합니다.)\r\n                  <br />\r\n                  설정 → Safari → 개인 정보 보호 및 보안 → <br />\r\n                  크로스 사이트 추적방지 OFF, 모든 쿠키 차단 OFF)\r\n                </div>\r\n              )}\r\n            </form>\r\n          </>\r\n        )}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\nexport default React.memo(Login)\r\n","/* eslint-disable jsx-a11y/accessible-emoji */\r\nimport React, { useEffect, useState } from 'react'\r\nimport './Quill.css'\r\nimport 'quill/dist/quill.snow.css'\r\nimport { useQuill } from 'react-quilljs'\r\nimport imageCompress from 'quill-image-compress'\r\nimport { AppContext } from '../App'\r\nimport Axios from 'axios'\r\nimport Emoji from './Emoji'\r\n\r\nfunction Quill({ match, location, history }) {\r\n  const store = React.useContext(AppContext)\r\n  let { postId } = match.params\r\n  const [post, setPost] = useState()\r\n  const [ready, setReady] = useState()\r\n  const [subMenus, setSubMenus] = useState()\r\n\r\n  const modules = {\r\n    toolbar: [\r\n      ['bold', 'italic', 'underline', 'strike'],\r\n      [{ size: ['small', false, 'large', 'huge'] }, { header: 1 }, { header: 2 }],\r\n      [{ align: [] }],\r\n      [{ color: [] }, { background: [] }],\r\n      [{ indent: '-1' }, { indent: '+1' }],\r\n      [{ list: 'ordered' }, { list: 'bullet' }],\r\n      ['code-block', 'blockquote'],\r\n      ['link', 'image', 'video'],\r\n      ['clean'],\r\n    ],\r\n    syntax: true,\r\n    imageCompress: {\r\n      quality: 0.7, // default\r\n      maxWidth: 1000, // default 1000\r\n      maxHeight: 1000, // default 1000\r\n      imageType: 'image/jpeg', // default\r\n      debug: true, // default\r\n    },\r\n  }\r\n  const formats = ['bold', 'italic', 'underline', 'strike', 'code-block', 'blockquote', 'size', 'header', 'align', 'color', 'background', 'indent', 'list', 'link', 'image', 'video', 'clean']\r\n\r\n  const { quill, quillRef, Quill } = useQuill({ modules, formats })\r\n  if (Quill && !quill) {\r\n    // For execute this line only once.\r\n    Quill.register('modules/imageCompress', imageCompress)\r\n  }\r\n\r\n  useEffect(() => {\r\n    setReady(false)\r\n    //포스트 불러오기 axios\r\n    if (postId !== undefined && Number(postId) >= 1 && quill) {\r\n      //postId가 없으면 포스트 내용 가져오지 않기\r\n      let url = process.env.REACT_APP_URL + '/posts/' + postId\r\n      //url = process.env.REACT_APP_LOCAL_URL+'/posts/' + postId\r\n\r\n      Axios.get(url, {\r\n        withCredentials: true,\r\n      }) //포스트 불러오기\r\n        .then((res) => {\r\n          let title = document.querySelector('[name=title]')\r\n          title.value = res.data.title\r\n\r\n          const tags = document.querySelectorAll('[type=radio]')\r\n          for (let i of tags) {\r\n            //체크 초기화\r\n            i.checked = false\r\n          }\r\n          if (res.data.tags) {\r\n            //체크박스 체크\r\n            const mainMenu = document.getElementById(res.data.tags[0])\r\n            if (mainMenu) mainMenu.checked = true\r\n            for (let i of store.menus) {\r\n              if (i.name === res.data.tags[0]) {\r\n                //선택된 메인메뉴의 서브메뉴를 그리기\r\n                setSubMenus(i.subMenus)\r\n              }\r\n            }\r\n          }\r\n\r\n          //포스트바디 가져오기\r\n          url = process.env.REACT_APP_URL + '/posts/postBody/' + postId\r\n          //url = process.env.REACT_APP_LOCAL_URL + '/posts/postBody/' + postId\r\n          Axios.get(url)\r\n            .then((res2) => {\r\n              if (typeof res2.data.body === 'string') quill.setText(res2.data.body)\r\n              //body가 string이면 setText\r\n              else quill.setContents(res2.data.body) //body가 string이 아니면 setContents : Delta\r\n              setPost({\r\n                ...res.data,\r\n                body: res2.data.body,\r\n              })\r\n            })\r\n            .catch((e) => {\r\n              alert(e)\r\n              setReady(true)\r\n            }) //실패\r\n        })\r\n        .catch((e) => {\r\n          alert(e)\r\n          setReady(true)\r\n        }) //실패\r\n    } else {\r\n      setReady(true)\r\n    }\r\n  }, [location, quill, postId, store.menus])\r\n\r\n  useEffect(() => {\r\n    if (subMenus && post) {\r\n      const subMenu = document.getElementById(post.tags[1])\r\n      if (subMenu) subMenu.checked = true\r\n    }\r\n    const newSubMenu = document.querySelector('[name=newSubMenu]')\r\n    if (newSubMenu) newSubMenu.value = ''\r\n  }, [subMenus, post])\r\n\r\n  useEffect(() => {\r\n    store.setReady(false)\r\n    if (post || ready) {\r\n      store.setReady(true)\r\n    }\r\n  })\r\n\r\n  //글 작성 or 수정\r\n  const clickPost = (e) => {\r\n    if (!store.login || (store.login && store.login.username !== 'imki123')) {\r\n      alert('글 작성은 블로그 주인만 가능합니다 ^^;')\r\n      return\r\n    }\r\n    if (!window.confirm('글을 게시하시겠습니까?')) {\r\n      return\r\n    }\r\n    //제목, 내용, 태그가 있는지 검사\r\n    let title = document.querySelector('[name=title]')\r\n    const content = quill.getContents()\r\n    const text = quill.getText()\r\n    const mainMenu = document.querySelector('[name=mainMenu]:checked')\r\n    let tags = []\r\n    const subMenu = document.querySelector('[name=subMenu]:checked')\r\n    const newMainMenu = document.querySelector('[name=newMainMenu]')\r\n    const newSubMenu = document.querySelector('[name=newSubMenu]')\r\n\r\n    if (mainMenu) {\r\n      tags[0] = mainMenu.value\r\n    }\r\n    if (newMainMenu.value !== '') {\r\n      tags[0] = newMainMenu.value\r\n    }\r\n    if (subMenu) {\r\n      if (subMenu.value !== '') tags[1] = subMenu.value //체크 된 서브메뉴 추가\r\n    }\r\n    if (newSubMenu.value !== '') {\r\n      tags[1] = newSubMenu.value\r\n    }\r\n\r\n    if (title.value.length === 0) {\r\n      alert('제목을 입력해주세요.')\r\n      return\r\n    } else if (quill.getLength() === 1) {\r\n      alert('내용을 입력해주세요.')\r\n      return\r\n    } else if (tags.length < 1 && newMainMenu.value === '') {\r\n      alert('메인메뉴를 1개 선택해주세요.')\r\n      return\r\n    }\r\n\r\n    //url에 POST 또는 PATCH 요청\r\n    let url = process.env.REACT_APP_URL + '/posts'\r\n    //url = process.env.REACT_APP_LOCAL_URL + '/posts'\r\n    let method = 'POST',\r\n      message = '글 작성 성공'\r\n    if (e.target.id === 'PATCH') {\r\n      if (postId !== undefined && Number(postId) >= 1) {\r\n        url += '/' + postId\r\n        method = 'PATCH'\r\n        message = '글 수정 성공'\r\n      } else {\r\n        console.log('postId 비정상, 글 수정 실패')\r\n        return\r\n      }\r\n    }\r\n\r\n    Axios(url, {\r\n      //포스트 작성, 수정 (최대 10mb. koa-bodyparser에서 설정.)\r\n      method: method,\r\n      withCredentials: true, //CORS\r\n      data: {\r\n        title: title.value,\r\n        body: content,\r\n        text: text,\r\n        tags: tags,\r\n      },\r\n    })\r\n      .then((res) => {\r\n        alert(message) //성공\r\n        postId = res.data.postId\r\n        if (postId > 1) {\r\n          history.push(`/posts/${postId}`) //수정 성공하면 해당 글로 이동함\r\n        } else {\r\n          history.push(`/posts/1`) //인사말은 홈으로 이동\r\n        }\r\n      })\r\n      .catch((e) => alert(e)) //실패\r\n  }\r\n\r\n  // 화면 리사이즈시 editor 아래 마진 변경\r\n  useEffect(() => {\r\n    const editor = document.querySelector('#editor')\r\n    const toolbar = document.querySelector('.ql-toolbar')\r\n    if (editor && toolbar) {\r\n      editor.style.marginBottom = toolbar.clientHeight + 10 + 'px'\r\n    }\r\n    window.removeEventListener('resize', function () {})\r\n    window.addEventListener('resize', function () {\r\n      if (editor && toolbar) {\r\n        editor.style.marginBottom = toolbar.clientHeight + 10 + 'px'\r\n      }\r\n    })\r\n  }, [location])\r\n\r\n  //메인메뉴 추가시 라디오박스 체크 해제, 띄어쓰기를 _로 변경\r\n  const changeMainMenu = (e) => {\r\n    if (store.menus) {\r\n      for (let i of store.menus) {\r\n        if (i.name === e.target.value) {\r\n          setSubMenus(i.subMenus)\r\n        }\r\n      }\r\n    }\r\n\r\n    if (e.target.type !== 'radio') {\r\n      //인풋박스 입력하면 라디오 체크 해제\r\n      e.target.value = e.target.value.replace(/\\s/g, '_')\r\n      const mainMenu = document.querySelector('[name=mainMenu]:checked')\r\n      if (mainMenu) mainMenu.checked = false\r\n    }\r\n  }\r\n  //서브메뉴 추가시 라디오박스 체크 해제, 띄어쓰기를 _로 변경\r\n  const changeSubMenu = (e) => {\r\n    if (e.target.type !== 'radio') {\r\n      //인풋박스 입력하면 라디오 체크 해제\r\n      e.target.value = e.target.value.replace(/\\s/g, '_')\r\n      const subMenu = document.querySelector('[name=subMenu]:checked')\r\n      if (subMenu) subMenu.checked = false\r\n    } else {\r\n      const newSubMenu = document.querySelector('[name=newSubMenu]')\r\n      if (newSubMenu) newSubMenu.value = ''\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"quill\">\r\n      <div className=\"quillTitle\">\r\n        <input name=\"title\" placeholder=\"제목\" />\r\n      </div>\r\n      <div id=\"editor\">\r\n        <div ref={quillRef} />\r\n        <div id=\"tags\">\r\n          <div id=\"tagsTitle\">\r\n            tags\r\n            {postId !== undefined && Number(postId) >= 1 ? (\r\n              <button className=\"editorButton no-drag\" onClick={clickPost} id=\"PATCH\">\r\n                글 수정\r\n              </button>\r\n            ) : (\r\n              <button className=\"editorButton no-drag\" onClick={clickPost}>\r\n                새글 작성\r\n              </button>\r\n            )}\r\n            <Emoji emojis={'😄,🤣,🥰,😍,😝,😭,👍,🐕,🐈,☀,🌙,⭐,☁,🌧,💧,♥,❤,💕'} />\r\n          </div>\r\n          <div>\r\n            메인메뉴:\r\n            {store.menus &&\r\n              store.menus.map((i) => (\r\n                <label key={i.name}>\r\n                  <input type=\"radio\" name=\"mainMenu\" value={i.name} id={i.name} onClick={changeMainMenu} />\r\n                  {i.name}\r\n                </label>\r\n              ))}\r\n            <input name=\"newMainMenu\" placeholder=\"메인메뉴 추가\" onChange={changeMainMenu} autoComplete=\"off\"></input>\r\n          </div>\r\n          <div>\r\n            서브메뉴:\r\n            <label>\r\n              <input type=\"radio\" name=\"subMenu\" value=\"\" onClick={changeSubMenu} /> 선택안함\r\n            </label>\r\n            {subMenus &&\r\n              subMenus.map((i) => (\r\n                <label key={i.name}>\r\n                  <input type=\"radio\" name=\"subMenu\" value={i.name} id={i.name} onClick={changeSubMenu} /> {i.name}\r\n                </label>\r\n              ))}\r\n            <input name=\"newSubMenu\" placeholder=\"서브메뉴 추가\" autoComplete=\"off\" onChange={changeSubMenu}></input>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\nexport default React.memo(Quill)\r\n","import React, { useEffect } from 'react'\r\nimport './Paging.css'\r\nimport { NavLink, useLocation } from 'react-router-dom'\r\nimport queryString from 'query-string'\r\n\r\nfunction Paging(props) {\r\n  const { postCount } = props\r\n  const location = useLocation()\r\n  const search = queryString.parse(location.search)\r\n  let paging = null\r\n  const pages = []\r\n  let page = 1\r\n  if (postCount) {\r\n    page = parseInt(search.page) || 1 //페이지를 숫자로 변환. 없다면 1\r\n    if (page < 1) page = 1\r\n    const startPost = postCount - (page - 1) * 10\r\n    paging = {\r\n      page: page,\r\n      lastPage: Math.ceil(postCount / 10),\r\n      postCount: postCount,\r\n      startPost: startPost,\r\n    }\r\n\r\n    for (let i = 0; i < paging.lastPage; i++) {\r\n      pages.push(i + 1)\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n\t\tconst links = document.querySelectorAll('.paging a')\r\n    for (let i = 0; i < links.length; i++) {\r\n      if (parseInt(links[i].innerHTML) === page) {\r\n        links[i].className = 'activePage'\r\n      } else {\r\n        links[i].className = 'inactivePage'\r\n      }\r\n    }\r\n  })\r\n\r\n  return (\r\n    <div className=\"paging\">\r\n      {pages.map((p, idx) => (\r\n        <NavLink path={location.pathname} to={`${location.pathname}?page=${p}`} className=\"inactivePage\" key={idx}>\r\n          {p}\r\n        </NavLink>\r\n      ))}\r\n    </div>\r\n  )\r\n}\r\nexport default React.memo(Paging)\r\n","import Axios from 'axios'\r\nimport React, { useEffect, useState } from 'react'\r\nimport { AppContext } from '../App'\r\nimport Paging from './Paging'\r\nimport PostList from './PostList'\r\n\r\nimport './Tags.css'\r\nimport Meta from './Meta';\r\nimport queryString from 'query-string';\r\n\r\nfunction Tags({ match, location, history }) {\r\n\tconst store = React.useContext(AppContext)\r\n\tconst { tag } = match.params\r\n\tconst [lists, setLists] = useState([])\r\n\tconst [titles, setTitles] = useState('')\r\n\tconst [postCount, setPostCount] = useState(0)\r\n\tconst [page, setPage] = useState(1)\r\n\tuseEffect(() => {\r\n\t\tsetLists([])\r\n\t\tconst search = queryString.parse(location.search)\r\n\t\tlet pageNum = parseInt(search.page) || 1 //페이지를 숫자로 변환. 없다면 1\r\n\t\tif (pageNum < 1) pageNum = 1\r\n\t\tsetPage(pageNum)\r\n\t\t\r\n\r\n\t\tlet url = process.env.REACT_APP_URL + '/posts/tag/' + tag + location.search\r\n\t\t//url = process.env.REACT_APP_LOCAL_URL + '/posts/tag/' + tag + location.search\r\n\r\n\t\tAxios.get(url, {\r\n\t\t\twithCredentials: true,\r\n\t\t})\r\n\t\t\t.then((res) => {\r\n\t\t\t\tif(res.data.list.length < 1){\r\n\t\t\t\t\talert('찾으시는 페이지가 없습니다.')\r\n\t\t\t\t\thistory.go(-1)\r\n\t\t\t\t}else{\r\n\t\t\t\t\tsetLists(res.data.list)\r\n\t\t\t\t\tlet tempTitles = ''\r\n\t\t\t\t\tfor(let i of res.data.list){\r\n\t\t\t\t\t\ttempTitles += ' '+i.title\r\n\t\t\t\t\t}\r\n\t\t\t\t\tsetTitles(tempTitles)\r\n\t\t\t\t\tsetPostCount(res.data.postCount)\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\t.catch((e) => console.log(e)) //실패\r\n\t},[tag, location, history])\r\n\t\r\n\tuseEffect(() => {\r\n\t\tstore.setReady(false)\r\n\t\tif(lists){\r\n\t\t\tstore.setReady(true)\r\n\t\t}\r\n\t})\r\n\r\n\treturn (\r\n\t\t<div className=\"postListWrapper\">\r\n\t\t\t<Meta data={{ title: tag+' 목록', description: titles, canonical: `tags/${tag}`}} />\r\n\t\t\t<div className=\"postListTitle\">{tag.substring(0,1).toUpperCase() + tag.substring(1)+' 목록'}</div>\r\n\t\t\t{lists && lists.map((i, idx) => <PostList no={postCount - idx - ((page-1)*10)} list={i} key={i.postId} />)}\r\n\t\t\t{<Paging postCount={postCount} />}\r\n\t\t</div>\r\n\t)\r\n}\r\nexport default React.memo(Tags)\r\n","import React, { useEffect } from 'react'\r\nimport AddCircleOutlineIcon from '@material-ui/icons/AddCircleOutline'\r\nimport ArrowUpwardIcon from '@material-ui/icons/ArrowUpward'\r\nimport './Content.css'\r\nimport { Link, Route, useLocation, Switch, useHistory } from 'react-router-dom'\r\nimport { AppContext } from '../App'\r\n\r\nimport Post from './Post'\r\nimport NotFoundPage from './NotFoundPage'\r\nimport Login from './Login'\r\nimport Quill from './Quill'\r\nimport Tags from './Tags'\r\nimport CommentLists from './CommentLists'\r\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\n\r\nfunction Content(props) {\r\n\tconst store = React.useContext(AppContext)\r\n\tconst location = useLocation() //hash 사용\r\n\tconst history = useHistory()\r\n\r\n\tuseEffect(() => {\r\n\t\tconst resize = () => {\r\n\t\t\tstore.resizeTextarea()\r\n\t\t}\r\n\r\n\t\twindow.addEventListener('resize', resize)\r\n\t\tconst loading = document.querySelector('#loading')\r\n\t\tconst views = document.querySelectorAll('.post')\r\n\t\tif (store.ready) {\r\n\t\t\tif (loading) loading.style.display = 'none'\r\n\t\t\tif (views) {\r\n\t\t\t\tfor(let i of views){\r\n\t\t\t\t\ti.style.display = 'block'\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tsetTimeout(function () {\r\n\t\t\t\tstore.resizeTextarea()\r\n\t\t\t}, 10)\r\n\t\t} else {\r\n\t\t\tif (loading) loading.style.display = 'flex'\r\n\t\t\tif (views) {\r\n\t\t\t\tfor(let i of views){\r\n\t\t\t\t\ti.style.display = 'none'\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn window.removeEventListener('resize', resize)\r\n\t}, [location.hash, store])\r\n\r\n\tconst scrollUp = (e) => {\r\n\t\t// content의 스크롤을 가장 위로\r\n\t\tconst content = document.querySelector('#content')\r\n\t\tlet contentScroll = content.scrollTop\r\n\t\tlet dif = contentScroll / 50\r\n\t\tconst frame = setInterval(function () {\r\n\t\t\tif (content.scrollTop <= 0) {\r\n\t\t\t\tclearInterval(frame)\r\n\t\t\t} else {\r\n\t\t\t\tcontent.scrollTop -= dif\r\n\t\t\t}\r\n\t\t}, 10)\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div id=\"content\" className=\"slideMenu\">\r\n\t\t\t{/* FABs */}\r\n\t\t\t{store.login && store.login.username === 'imki123' && (\r\n\t\t\t\t<Link id=\"postFAB\" className=\"hover FAB\" to=\"/quill\">\r\n\t\t\t\t\t<AddCircleOutlineIcon />\r\n\t\t\t\t</Link>\r\n\t\t\t)}\r\n\t\t\t<div id=\"scrollFAB\" className=\"hover FAB\" onClick={scrollUp}>\r\n\t\t\t\t<ArrowUpwardIcon />\r\n\t\t\t</div>\r\n\t\t\t<div id=\"backFAB\" className=\"hover FAB\" onClick={()=>{history.go(-1)}}>\r\n\t\t\t\t<ArrowBackIcon/>\r\n\t\t\t</div>\r\n\t\t\t<div id=\"menuFAB\" className=\"hover FAB\" onClick={store.slideMenu}>\r\n\t\t\t\t<MenuIcon/>\r\n\t\t\t</div>\r\n\t\t\t\r\n\r\n\t\t\t{/* 로딩 */}\r\n\t\t\t<div id=\"loading\">\r\n\t\t\t\t<img alt=\"Loading\" src={process.env.PUBLIC_URL + '/images/loading.gif'} />\r\n\t\t\t</div>\r\n\r\n\t\t\t<Switch>\r\n\t\t\t\t<Route path={['/login', '/register', '/loginStatus', '/withdraw']} component={Login} />\r\n\t\t\t\t<Route path=\"/quill/:postId?\" component={Quill} />\r\n\t\t\t\t<Route path=\"/tags/:tag\" component={Tags} />\r\n\t\t\t\t<Route path=\"/comments\" component={CommentLists} />\r\n\t\t\t\t<Route path=\"/\" exact component={Post} />\r\n\t\t\t\t<Route path=\"/posts/:postId\" component={Post} />\r\n\t\t\t\t<Route path=\"/NotFoundPage\" component={NotFoundPage} />\r\n\t\t\t\t<Route path=\"*\" component={NotFoundPage} />\r\n\t\t\t</Switch>\r\n\r\n\t\t\t{/* 텍스트 에어리어 높이 조정을 위한 안보이는 가짜 텍스트에어리어 */}\r\n\t\t\t<textarea disabled id=\"fakeTextarea\" />\r\n\t\t</div>\r\n\t)\r\n}\r\nexport default React.memo(Content)\r\n","import React from 'react'\r\nimport './Setting.css'\r\nimport { Link } from 'react-router-dom'\r\nimport { AppContext } from '../App'\r\n\r\nfunction Setting(props) {\r\n  const store = React.useContext(AppContext)\r\n\r\n  const closeSetting = (e) => {\r\n    const settingWrapper = document.querySelector('#settingWrapper')\r\n    e.stopPropagation()\r\n    setTimeout(function () {\r\n      settingWrapper.style.display = 'none'\r\n    }, 200)\r\n  }\r\n\r\n  const logout = (e) => {\r\n    if (window.confirm('로그아웃 하시겠습니까?')) {\r\n      let url = process.env.REACT_APP_URL + '/auth/logout'\r\n      //url = process.env.REACT_APP_LOCAL_URL + '/auth/logout'\r\n\r\n      fetch(url, {\r\n        mode: 'cors',\r\n        method: 'POST',\r\n        credentials: 'include',\r\n      })\r\n        .then((res) => {\r\n          if (res.status === 204) {\r\n            //로그아웃 하면 204\r\n            console.log('로그아웃 성공')\r\n            store.setLogin(false)\r\n\r\n            //유저정보 지우기\r\n            const userinfo = document.querySelector('#userinfo')\r\n            if (userinfo) userinfo.value = ''\r\n\r\n            //네이버 로그아웃\r\n            const naverIdLogout = document.querySelector('#naverIdLogout')\r\n            if (naverIdLogout) naverIdLogout.click()\r\n\r\n            //카카오 로그아웃\r\n            const kakaoLogout = document.querySelector('#kakaoLogout')\r\n            if (kakaoLogout) kakaoLogout.click()\r\n\r\n            //구글 로그아웃\r\n            const googleLogout = document.querySelector('#googleLogout')\r\n            if (googleLogout) googleLogout.click()\r\n          } else {\r\n            console.log('로그아웃 실패')\r\n          }\r\n        })\r\n        .catch((e) => console.error(e))\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div id=\"settingWrapper\" onClick={closeSetting}>\r\n      <div id=\"setting\">\r\n        <div id=\"settingListWrapper\">\r\n          {store.login ? (\r\n            <Link className=\"settingList\" to=\"/loginStatus\">\r\n              {store.login.username}\r\n            </Link>\r\n          ) : (\r\n            <Link className=\"settingList\" to=\"/login\">\r\n              로그인\r\n            </Link>\r\n          )}\r\n          {store.login && (\r\n            <div onClick={logout} className=\"settingList\">\r\n              로그아웃\r\n            </div>\r\n          )}\r\n          {!store.login && (\r\n            <Link className=\"settingList\" to=\"/register\">\r\n              회원가입\r\n            </Link>\r\n          )}\r\n          {store.login && !store.login.oAuth && (\r\n            <Link className=\"settingList\" to=\"/withdraw\">\r\n              회원탈퇴\r\n            </Link>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\nexport default React.memo(Setting)\r\n","import React, { createContext, useEffect, useState } from 'react'\r\nimport './App.css'\r\nimport { useLocation } from 'react-router-dom'\r\n\r\nimport Header from './components/Header'\r\nimport Body from './components/Body'\r\nimport Guide from './components/Guide'\r\nimport Content from './components/Content'\r\nimport Setting from './components/Setting'\r\nimport Axios from 'axios'\r\nimport Meta from './components/Meta'\r\n\r\nconst AppContext = createContext()\r\n\r\nfunction App() {\r\n\tconst location = useLocation() //페이지 경로 변경 감지\r\n\tconst [ready, setReady] = useState(false)\r\n\tconst [login, setLogin] = useState(false)\r\n\tconst [menus, setMenus] = useState([\r\n\t\t{ name: 'home', count: 1, order: 1 },\r\n\t\t{ name: 'programming', order: 2 },\r\n\t\t{ name: 'article', order: 3 },\r\n\t])\r\n\r\n\tconst resizeTextarea = (e) => {\r\n\t\t//텍스트에어리어를 찾아서 크기를 글자 높이에 맞게 변경하기\r\n\t\t//textarea 높이 조정\r\n\t\tconst fake = document.querySelector('#fakeTextarea')\r\n\t\tlet textareas = []\r\n\t\tif (e && e.target) {\r\n\t\t\ttextareas.push(e.target)\r\n\t\t} else {\r\n\t\t\ttextareas = document.querySelectorAll('textarea')\r\n\t\t}\r\n\r\n\t\tif (textareas && fake) {\r\n\t\t\tfor (let i = 0; i < textareas.length; i++) {\r\n\t\t\t\tfake.style.height = '1px'\r\n\t\t\t\tfake.style.width = textareas[i].clientWidth + 'px'\r\n\t\t\t\tfake.value = textareas[i].value\r\n\t\t\t\ttextareas[i].style.height = 5 + fake.scrollHeight + 'px'\r\n\t\t\t}\r\n\t\t\tfake.value = ''\r\n\t\t\tfake.style.height = '0px'\r\n\t\t}\r\n\t}\r\n\r\n\tconst slideMenu = () => {\r\n\t\t//메뉴버튼 클릭 시 메뉴 보이기 & 숨기기\r\n\t\tconst body = document.querySelector('#body')\r\n\t\tconst guideWrapper = document.querySelector('#guideWrapper')\r\n\t\tconst content = document.querySelector('#content')\r\n\r\n\t\tif (!guideWrapper.style.left) {\r\n\t\t\t//스타일 속성이 없으면 초기값 지정\r\n\t\t\tif (body.clientWidth < 500) {\r\n\t\t\t\tguideWrapper.style.left = '-312px' //모바일\r\n\t\t\t} else {\r\n\t\t\t\tguideWrapper.style.left = '0px' //PC\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (guideWrapper.style.left && guideWrapper.style.left.replace('px', '') > -100) {\r\n\t\t\t//메뉴 닫기\r\n\t\t\tguideWrapper.parentNode.style.width = '0' // 회색 0\r\n\t\t\tcontent.style.width = 'calc(100% - 16px)' //콘텐트 100% - 16px\r\n\t\t\tguideWrapper.style.left = '-312px' // 메뉴 왼쪽으로\r\n\t\t} else {\r\n\t\t\t//메뉴 열기\r\n\t\t\tguideWrapper.style.left = '0px' // 메뉴 0\r\n\t\t\tif (body.clientWidth < 500) {\r\n\t\t\t\t//모바일\r\n\t\t\t\tguideWrapper.parentNode.style.width = '100%' // 회색 100%\r\n\t\t\t} else {\r\n\t\t\t\t//PC\r\n\t\t\t\tcontent.style.width = `calc(100% - 312px - 16px)`\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t//모바일에서 회색부분 클릭 시 메뉴 닫기\r\n\tconst closeMenuMobile = (e) => {\r\n\t\tconst body = document.querySelector('#body')\r\n\t\tconst guideWrapper = document.querySelector('#guideWrapper')\r\n\t\tconst content = document.querySelector('#content')\r\n\r\n\t\tguideWrapper.parentNode.style.width = '0' // 회색 0\r\n\t\tif (body.clientWidth < 500) {\r\n\t\t\t//모바일\r\n\t\t\tguideWrapper.style.left = '-312px' // 메뉴 0\r\n\t\t\tcontent.style.width = 'calc(100% - 16px)'\r\n\t\t} else {\r\n\t\t\tcontent.style.width = 'calc(100% - 312px - 16px)'\r\n\t\t}\r\n\t}\r\n\tconst checkToken = (func) => {\r\n\t\t//로그인 되어있는지 토큰 체크하기\r\n\t\tlet url = process.env.REACT_APP_URL + '/auth/check'\r\n\t\t//url = process.env.REACT_APP_LOCAL_URL+'/auth/check'\r\n\t\tAxios.get(url, { withCredentials: true })\r\n\t\t\t.then((res) => {\r\n\t\t\t\tif (res.data) {\r\n\t\t\t\t\t//console.log('토큰 체크 성공')\r\n\t\t\t\t\tsetLogin(res.data)\r\n\t\t\t\t} else {\r\n\t\t\t\t\t//console.log('토큰 없음') //res.status===204(No Content)\r\n\t\t\t\t\tsetLogin(false)\r\n\t\t\t\t}\r\n\t\t\t\tif (func) func()\r\n\t\t\t})\r\n\t\t\t.catch((e) => {\r\n\t\t\t\t//실패\r\n\t\t\t\tif (func) func()\r\n\t\t\t})\r\n\t}\r\n\r\n\t//useContext 이용하여 하위 컴포넌트에 상태 전달\r\n\tconst store = {\r\n\t\tready,\r\n\t\tsetReady,\r\n\t\tlogin,\r\n\t\tsetLogin,\r\n\t\tmenus,\r\n\t\tsetMenus,\r\n\t\tresizeTextarea,\r\n\t\tslideMenu,\r\n\t\tcloseMenuMobile,\r\n\t\tcheckToken,\r\n\t}\r\n\r\n\t// 포스트에서 태그 정보를 가져와서 메뉴에 표시함, Quill의 태그목록에 표시\r\n\tuseEffect(() => {\r\n\t\tlet url = process.env.REACT_APP_URL + '/menus'\r\n\t\t//url = process.env.REACT_APP_LOCAL_URL+'/menus'\r\n\r\n\t\tAxios.get(url, {\r\n\t\t\twithCredentials: true,\r\n\t\t}) //메뉴 태그 가져오기\r\n\t\t\t.then((res) => {\r\n\t\t\t\tsetMenus(res.data)\r\n\t\t\t})\r\n\t\t\t.catch((e) => console.log(e)) //실패\r\n\r\n\t\t//페이지 이동할 때 activeListManual 스타일을 모두 지움\r\n\t\tconst tags = document.querySelectorAll('.activeListManual')\r\n\t\tif(tags){\r\n\t\t\tfor(let i of tags){\r\n\t\t\t\ti.classList.remove('activeListManual')\r\n\t\t\t}\r\n\t\t}\r\n\t}, [location.pathname])\r\n\r\n\t//주소 변경될 때, 토큰 체크하고 포스트 조회하기\r\n\tuseEffect(() => {\r\n\t\tcheckToken()\r\n\t}, [location.pathname, location.search])\r\n\r\n\treturn (\r\n\t\t<AppContext.Provider value={store}>\r\n\t\t\t<div id=\"app\">\r\n\t\t\t\t<Meta\r\n\t\t\t\t\tdata={{\r\n\t\t\t\t\t\ttitle: '임기의 코딩 블로그',\r\n\t\t\t\t\t\timage: process.env.PUBLIC_URL + '/images/imcat_800x400.png',\r\n\t\t\t\t\t}}\r\n\t\t\t\t/>\r\n\t\t\t\t<Header />\r\n\t\t\t\t<Setting />\r\n\t\t\t\t<Body>\r\n\t\t\t\t\t<Guide />\r\n\t\t\t\t\t<Content />\r\n\t\t\t\t</Body>\r\n\t\t\t</div>\r\n\t\t</AppContext.Provider>\r\n\t)\r\n}\r\nexport { AppContext }\r\nexport default React.memo(App)\r\n","import React from 'react'\r\nimport ReactDOM, { hydrate } from 'react-dom'\r\nimport { BrowserRouter } from 'react-router-dom'\r\nimport App from './App'\r\n\r\nconst rootElement = document.getElementById('root')\r\n\r\nif (rootElement.hasChildNodes()) {\r\n\thydrate(\r\n\t\t<BrowserRouter basename={process.env.PUBLIC_URL}>\r\n\t\t\t<App />\r\n\t\t</BrowserRouter>,\r\n\t\trootElement,\r\n\t)\r\n} else {\r\n\tReactDOM.render(\r\n\t\t<BrowserRouter basename={process.env.PUBLIC_URL}>\r\n\t\t\t<App />\r\n\t\t</BrowserRouter>,\r\n\t\tdocument.getElementById('root'),\r\n\t)\r\n}\r\n"],"sourceRoot":""}