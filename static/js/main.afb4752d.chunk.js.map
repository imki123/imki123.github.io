{"version":3,"sources":["components/Header.js","components/Body.js","components/Menus.js","components/Guide.js","components/Comment.js","components/Meta.js","components/PostList.js","components/Recents.js","components/CommentLists.js","components/Post.js","components/NotFoundPage.js","components/Login.js","components/Quill.js","components/Paging.js","components/Tags.js","components/Content.js","components/Setting.js","App.js","index.js"],"names":["React","memo","props","store","useContext","AppContext","id","className","onClick","slideMenu","alt","src","to","closeMenuMobile","setting","document","querySelector","style","display","login","imageUrl","Math","floor","random","onError","e","target","children","menus","map","i","key","name","exact","activeClassName","substring","toUpperCase","count","subMenus","length","j","title","href","preventDefault","window","open","comment","post","refreshComment","useState","setImageUrl","update","date","publishedDate","replace","useEffect","postId","commentId","value","content","username","Axios","process","withCredentials","data","then","res","catch","fontWeight","updated","readOnly","onChange","resizeTextarea","textarea","confirm","classList","remove","url","patch","console","log","alert","add","focus","background","locales","en","ko","Meta","lang","locale","description","image","undefined","canonical","type","width","height","Helmet","titleTemplate","rel","itemprop","property","hreflang","list","no","views","text","idx","location","comments","setComments","commentCnt","setCommentCnt","recentAll","setRecentAll","pathname","get","setReady","match","history","params","setPost","postBody","setPostBody","recents","setRecents","popular","setPopular","recentComments","setRecentComments","useQuill","modules","syntax","formats","quill","quillRef","go","body","hash","setTimeout","elem","frame","contentScroll","scrollTop","elemTop","offsetTop","dif","clearInterval","setInterval","scrollHeight","clientHeight","setContents","setText","tags","querySelectorAll","deletePost","delete","func","svg","copied","emoji","ref","push","placeholder","useHistory","clientId","indexOf","browser","agent","navigator","userAgent","toLowerCase","checkUsername","setCheckUsername","checkPassword","setCheckPassword","checkPasswordConfirm","setCheckPasswordConfirm","buttonName","setButtonName","userinfo","setUserinfo","userinfoElem","user","JSON","parse","host","email","profile_image","kakaoLogout","click","profile","thumbnail_image_url","fetch","mode","method","credentials","headers","stringify","status","json","message","error","setLogin","clickButton","password","path","naverIdLogin","firstChild","kakaoLogin","buttonText","onSuccess","profileObj","onFailure","cookiePolicy","isSignedIn","color","passwordConfirm","autoComplete","fontSize","textAlign","ready","setSubMenus","toolbar","size","header","align","indent","imageCompress","quality","maxWidth","maxHeight","imageType","debug","Quill","register","Number","checked","mainMenu","getElementById","res2","subMenu","newSubMenu","clickPost","getContents","getText","newMainMenu","getLength","editor","marginBottom","removeEventListener","addEventListener","changeMainMenu","changeSubMenu","postCount","useLocation","search","queryString","paging","pages","page","startPost","lastPage","ceil","links","innerHTML","p","tag","lists","setLists","resize","loading","component","Login","Tags","CommentLists","Post","NotFoundPage","disabled","settingWrapper","stopPropagation","naverIdLogout","icon","oAuth","createContext","order","setMenus","checkToken","fake","textareas","clientWidth","guideWrapper","left","parentNode","Provider","rootElement","hasChildNodes","hydrate","basename","ReactDOM","render"],"mappings":"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","file":"static/js/main.afb4752d.chunk.js","sourcesContent":["import React from 'react'\r\nimport './Header.css'\r\nimport { Link } from 'react-router-dom'\r\nimport { AppContext } from '../App'\r\n\r\nfunction Header(props) {\r\n\tconst store = React.useContext(AppContext)\r\n\r\n\tconst toggleSetting = () => {\r\n\t\tconst setting = document.querySelector('#settingWrapper')\r\n\t\tif (setting) {\r\n\t\t\tif (setting.style.display === 'block') {\r\n\t\t\t\tsetting.style.display = 'none'\r\n\t\t\t} else {\r\n\t\t\t\tsetting.style.display = 'block'\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div id=\"headerWrapper\">\r\n\t\t\t<div id=\"header\">\r\n\t\t\t\t<div className=\"hover\" onClick={store.slideMenu}>\r\n\t\t\t\t\t<img id=\"menu\" alt=\"MENU\" src={process.env.PUBLIC_URL + '/images/guide_icon.png'} />\r\n\t\t\t\t</div>\r\n\t\t\t\t<Link to=\"/\">\r\n\t\t\t\t\t<div id=\"title\" className=\"hover\" onClick={store.closeMenuMobile}>\r\n\t\t\t\t\t\t<img id=\"logo\" alt=\"logo\" src={process.env.PUBLIC_URL + '/images/imcat_64.png'} />\r\n\t\t\t\t\t\t임기의 코딩 블로그 😄\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</Link>\r\n\t\t\t\t<div className=\"hover\" onClick={toggleSetting}>\r\n\t\t\t\t\t{!store.login ? (\r\n\t\t\t\t\t\t<img className=\"profile\" alt=\"PROFILE\" src={process.env.PUBLIC_URL + '/images/noavatar.png'} />\r\n\t\t\t\t\t) : (\r\n\t\t\t\t\t\t<img\r\n\t\t\t\t\t\t\tclassName=\"profile\"\r\n\t\t\t\t\t\t\talt=\"PROFILE\"\r\n\t\t\t\t\t\t\tsrc={store.login.imageUrl ? store.login.imageUrl : 'noimage'+Math.floor(Math.random()*100)}\r\n\t\t\t\t\t\t\tonError={(e) => {\r\n\t\t\t\t\t\t\t\te.target.src = process.env.PUBLIC_URL + '/images/dog' + (Math.floor(Math.random() * (3 - 1 + 1)) + 1) + '.png'\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\nexport default React.memo(Header)\r\n","import React from 'react'\r\nimport './Body.css'\r\n\r\nfunction Body(props) {\r\n\treturn(\r\n        <div id=\"body\">\r\n            {props.children}\r\n        </div>\r\n    ) \r\n}\r\nexport default React.memo(Body)\r\n","import React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\nimport './Menus.css'\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore'\r\n\r\nfunction Menus(props) {\r\n\tconst { menus } = props\r\n\r\n\t//menu정보를 받아서 링크 메뉴 생성하기\r\n\t//menu { name: string, cnt: number, Object{ name: string, cnt: number}, Object{...}}\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{menus &&\r\n\t\t\t\tmenus.map((i) => (\r\n\t\t\t\t\t<div key={i.name}>\r\n\t\t\t\t\t\t<NavLink exact to={i.name === 'home' ? '/' : `/tags/${i.name}`} className=\"list\" activeClassName=\"activeList\">\r\n\t\t\t\t\t\t\t<span className=\"menuName\">{i.name.substring(0, 1).toUpperCase() + i.name.substring(1)}</span>\r\n\t\t\t\t\t\t\t<span className=\"menuOptions\">\r\n\t\t\t\t\t\t\t\t<span className=\"menuCnt\">{i.count}</span>\r\n\t\t\t\t\t\t\t\t<span className=\"menuExpandIcon\">{i.subMenus && i.subMenus.length >= 1 && <ExpandMoreIcon />}</span>\r\n\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t</NavLink>\r\n\t\t\t\t\t\t{i.subMenus && i.subMenus.length > 0 && i.subMenus.map((j) => (\r\n\t\t\t\t\t\t\t<NavLink exact to={`/tags/${j.name}`} className=\"list subList\" activeClassName=\"activeList\" key={j.name}>\r\n                            <span className=\"menuName\">{j.name.substring(0, 1).toUpperCase() + j.name.substring(1)}</span>\r\n                            <span className=\"menuOptions\">\r\n                                <span className=\"menuCnt\">{j.count}</span>\r\n                            </span>\r\n                        </NavLink>\r\n\t\t\t\t\t\t))}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t))}\r\n\t\t</>\r\n\t)\r\n}\r\nexport default React.memo(Menus)\r\n","import React from 'react'\r\nimport './Guide.css'\r\nimport { AppContext } from '../App'\r\nimport Menus from './Menus'\r\nimport OpenInNewIcon from '@material-ui/icons/OpenInNew'\r\n\r\nfunction Guide(props) {\r\n\tconst store = React.useContext(AppContext)\r\n\r\n\treturn (\r\n\t\t<div id=\"guideBack\" onClick={store.closeMenuMobile}>\r\n\t\t\t<div id=\"guideWrapper\" className=\"slideMenu\">\r\n\t\t\t\t<div id=\"avatar\">\r\n\t\t\t\t\t<img alt=\"avatar\" src={process.env.PUBLIC_URL + '/images/avatar.png'} title=\"Hello 😄\" />\r\n\t\t\t\t\t<div id=\"name\">Im kiyoung</div>\r\n\t\t\t\t\t<div id=\"nickName\">imki123</div>\r\n\t\t\t\t\t<div id=\"github\">\r\n\t\t\t\t\t\t<a href=\"https://github.com/imki123\">\r\n\t\t\t\t\t\t\t<img alt=\"github\" src={process.env.PUBLIC_URL + '/images/GitHub-Mark-32px.png'} /> <span>https://github.com/imki123</span>\r\n\t\t\t\t\t\t</a>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div id=\"introduction\">A web programmer who dreams of becoming a wise developer.</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"menus\">\r\n\t\t\t\t\t<Menus menus={store.menus} />\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"menus\">\r\n\t\t\t\t\t<a href=\"https://imki123.github.io/catbook\" className=\"list\"\r\n                        onClick={e => {e.preventDefault(); window.open(\"https://imki123.github.io/catbook\")}}>\r\n\t\t\t\t\t\t<div className=\"menuLink\">\r\n\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t<img alt=\"catbook\" src={process.env.PUBLIC_URL + '/images/catbook_64.png'} />\r\n\t\t\t\t\t\t\t\tCatbook\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<OpenInNewIcon />\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</a>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\nexport default React.memo(Guide)\r\n","import React, { useEffect, useState } from 'react'\r\nimport './Comment.css'\r\nimport { AppContext } from '../App'\r\nimport Axios from 'axios'\r\n\r\nfunction Comment(props) {\r\n\tconst store = React.useContext(AppContext)\r\n\tconst { comment, post, refreshComment } = props\r\n\tconst [ imageUrl, setImageUrl ] = useState('noimage')\r\n\tlet update = false\r\n\tlet date = comment.publishedDate.substring(0, 16).replace('T', ' ')\r\n\tuseEffect(() => {\r\n\t\tconst textarea = document.querySelector(`#comment_${post.postId}_${comment.commentId} textarea`)\r\n\t\ttextarea.value = comment.content\r\n\r\n\t\t//댓글 프로필 이미지 가져오기\r\n\t\tif (comment.username) {\r\n\t\t\tlet url = process.env.REACT_APP_URL + '/auth/user'\r\n\t\t\t//url = process.env.REACT_APP_LOCAL_URL + '/auth/user'\r\n\t\t\tAxios.post(url, {\r\n\t\t\t\twithCredentials: true, //CORS\r\n\t\t\t\tdata: {\r\n\t\t\t\t\tusername: comment.username,\r\n\t\t\t\t},\r\n\t\t\t})\r\n\t\t\t\t.then((res) => {\r\n\t\t\t\t\tif(!res.data.imageUrl) setImageUrl('noimage'+Math.floor(Math.random()*100))\r\n\t\t\t\t\telse setImageUrl(res.data.imageUrl)\r\n\t\t\t\t})\r\n\t\t\t\t.catch((e) => {\r\n\t\t\t\t\tsetImageUrl('noimage'+Math.floor(Math.random()*100))\r\n\t\t\t\t})\r\n\t\t}\r\n\t}, [comment, post.postId, setImageUrl])\r\n\r\n\tconst updateComment = (e) => {\r\n\t\t//댓글 수정\r\n\t\tconst textarea = document.querySelector(`#comment_${post.postId}_${comment.commentId} textarea`)\r\n\t\tif (!update) {\r\n\t\t\tupdate = true\r\n\t\t\ttextarea.classList.add('updateMode')\r\n\t\t\ttextarea.readOnly = false\r\n\t\t\ttextarea.focus()\r\n\t\t} else if (window.confirm('댓글을 수정하시겠습니까?')) {\r\n\t\t\tupdate = false\r\n\t\t\ttextarea.classList.remove('updateMode')\r\n\t\t\ttextarea.readOnly = true\r\n\r\n\t\t\tlet url = process.env.REACT_APP_URL + `/comments/${post.postId}/${comment.commentId}`\r\n\t\t\t//url = process.env.REACT_APP_LOCAL_URL+`/comments/${post.postId}/${comment.commentId}`\r\n\r\n\t\t\tAxios.patch(url, {\r\n\t\t\t\t//댓글 수정\r\n\t\t\t\twithCredentials: true, //CORS\r\n\t\t\t\tdata: {\r\n\t\t\t\t\tcontent: textarea.value,\r\n\t\t\t\t},\r\n\t\t\t})\r\n\t\t\t\t.then((res) => {\r\n\t\t\t\t\tconsole.log(`${comment.commentId}번 댓글 수정 성공`)\r\n\t\t\t\t\trefreshComment() //포스트 다시 불러오기\r\n\t\t\t\t})\r\n\t\t\t\t.catch((e) => alert(e)) //실패\r\n\t\t}\r\n\t}\r\n\r\n\tconst deleteComment = (e) => {\r\n\t\tif (window.confirm('삭제 후에는 복구가 불가합니다. 정말로 댓글을 삭제하시겠습니까?')) {\r\n\t\t\tlet url = process.env.REACT_APP_URL + `/comments/delete/${post.postId}/${comment.commentId}`\r\n\t\t\t//url = process.env.REACT_APP_LOCAL_URL+`/comments/delete/${post.postId}/${comment.commentId}`\r\n\r\n\t\t\tAxios.patch(url, {\r\n\t\t\t\t//포스트 삭제\r\n\t\t\t\twithCredentials: true, //CORS\r\n\t\t\t})\r\n\t\t\t\t.then((res) => {\r\n\t\t\t\t\tconsole.log(`${comment.commentId}번 댓글 삭제 성공`)\r\n\t\t\t\t\trefreshComment() //포스트 다시 불러오기\r\n\t\t\t\t})\r\n\t\t\t\t.catch((e) => alert(e)) //실패\r\n\t\t}\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className=\"commentWrapper\" id={`comment_${post.postId}_${comment.commentId}`}>\r\n\t\t\t<div className=\"comment\">\r\n\t\t\t\t<div className=\"commentProfile\">\r\n\t\t\t\t\t{!comment.username ? (\r\n\t\t\t\t\t\t<img alt=\"PROFILE\" src={process.env.PUBLIC_URL + '/images/noavatar.png'} />\r\n\t\t\t\t\t) : (\r\n\t\t\t\t\t\t<img\r\n\t\t\t\t\t\t\talt=\"PROFILE\"\r\n\t\t\t\t\t\t\tsrc={imageUrl}\r\n\t\t\t\t\t\t\tonError={(e) => {\r\n\t\t\t\t\t\t\t\te.target.src = process.env.PUBLIC_URL + '/images/dog' + (Math.floor(Math.random() * (3 - 1 + 1)) + 1) + '.png'\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"commentContent\">\r\n\t\t\t\t\t{comment.username === store.login.username ? (\r\n\t\t\t\t\t\t<span className=\"commentUsername\" style={{ fontWeight: 'bold' }}>\r\n\t\t\t\t\t\t\t{comment.username}\r\n\t\t\t\t\t\t</span>\r\n\t\t\t\t\t) : (\r\n\t\t\t\t\t\t<span className=\"commentUsername\">{comment.username}</span>\r\n\t\t\t\t\t)}\r\n\t\t\t\t\t<span className=\"commentDate\">\r\n\t\t\t\t\t\t{' '}\r\n\t\t\t\t\t\t- {date} {comment.updated && '(수정됨)'}\r\n\t\t\t\t\t</span>\r\n\t\t\t\t\t<textarea readOnly onChange={store.resizeTextarea} />\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t{((comment.username && comment.username === store.login.username) || store.login.username === 'imki123') && (\r\n\t\t\t\t<div className=\"commentButtons\">\r\n\t\t\t\t\t<button className=\"commentButton\" onClick={updateComment}>\r\n\t\t\t\t\t\t수정\r\n\t\t\t\t\t</button>\r\n\t\t\t\t\t<button className=\"commentButton\" style={{ background: 'red' }} onClick={deleteComment}>\r\n\t\t\t\t\t\t삭제\r\n\t\t\t\t\t</button>\r\n\t\t\t\t</div>\r\n\t\t\t)}\r\n\t\t</div>\r\n\t)\r\n}\r\nexport default React.memo(Comment)\r\n","// components/Meta\r\n/* eslint-disable no-undefined */\r\nimport React from 'react'\r\nimport { Helmet } from 'react-helmet'\r\n\r\nconst locales = {\r\n\ten: 'en_US',\r\n\tko: 'ko_KR',\r\n}\r\n\r\nconst Meta = ({ data }) => {\r\n\tconst lang = locales[data.locale] || locales['en']\r\n\tconst title = data.title\r\n\tconst description = data.description\r\n\tconst image = data.image !== undefined && `${data.image}`\r\n\tconst canonical = `https://imki123.github.io/${data.canonical}`\r\n\tconst type = data.type === undefined ? 'website' : data.type\r\n\tconst width = data.image && (data.width || 1200)\r\n\tconst height = data.image && (data.height || 630)\r\n\r\n\treturn (\r\n\t\t<Helmet titleTemplate=\"%s\">\r\n\t\t\t<html lang={lang} />\r\n\t\t\t<title>{title}</title>\r\n\t\t\t<meta name=\"description\" content={description} />\r\n\t\t\t{canonical ? <link rel=\"canonical\" href={canonical} /> : null}\r\n\t\t\t{image ? <link rel=\"image_src\" href={image} /> : null}\r\n\t\t\t{image ? <meta itemprop=\"image\" content={image} /> : null}\r\n\r\n\t\t\t<meta property=\"og:site_name\" content=\"YOUR WEB SITE\" />\r\n\t\t\t<meta property=\"og:title\" content={title} />\r\n\t\t\t{description ? <meta property=\"og:description\" content={description} /> : null}\r\n\t\t\t{canonical ? <meta property=\"og:url\" content={canonical} /> : null}\r\n\t\t\t<meta property=\"og:locale\" content={locales[lang]} />\r\n\t\t\t<meta property=\"og:type\" content={type} />\r\n\t\t\t{image ? <meta property=\"og:image\" content={image} /> : null}\r\n\t\t\t{width ? <meta property=\"og:image:width\" content={width} /> : null}\r\n\t\t\t{height ? <meta property=\"og:image:height\" content={height} /> : null}\r\n\t\t\t<meta property=\"fb:pages\" content=\"YOUR WEB SITE\" />\r\n\r\n\t\t\t{/* change type of twitter if there is no image? */}\r\n\t\t\t<meta name=\"twitter:card\" content=\"summary_large_image\" />\r\n\t\t\t<meta name=\"twitter:title\" content={title} />\r\n\t\t\t{description ? <meta name=\"twitter:description\" content={description} /> : null}\r\n\t\t\t{image ? <meta name=\"twitter:image\" content={image} /> : null}\r\n\t\t\t<meta name=\"twitter:site\" content=\"@YOURWEBSITE\" />\r\n\t\t\t{canonical ? <link rel=\"alternate\" href={data.canonical} hreflang={lang} /> : null}\r\n\t\t</Helmet>\r\n\t)\r\n}\r\n\r\nexport default Meta","import React from 'react'\r\nimport './PostList.css'\r\nimport { Link } from 'react-router-dom'\r\n\r\nfunction PostList(props) {\r\n\tconst { list, no } = props\r\n\tlet date = list.publishedDate.substring(0, 10).replace('T', ' ')\r\n\r\n\treturn (\r\n\t\t<Link to={`/posts/${list.postId}`}>\r\n\t\t\t<div className=\"postList no-drag\">\r\n\t\t\t\t<div className=\"postListHeader\">\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<span className=\"postId\">{no}.</span>\r\n\t\t\t\t\t\t<span className=\"postTitle\">{list.title}</span>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<span className=\"postDate\">\r\n\t\t\t\t\t\t{list.views ? list.views : 0}, {date}\r\n\t\t\t\t\t</span>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"postBody\">{list.text}</div>\r\n\t\t\t</div>\r\n\t\t</Link>\r\n\t)\r\n}\r\nexport default React.memo(PostList)\r\n","import React from 'react'\r\nimport './Recents.css'\r\n\r\nimport PostList from './PostList'\r\n\r\nfunction Recents(props) {\r\n\tconst {title, list} = props\r\n\treturn (\r\n\t\t<div className=\"post recents\">\r\n            <div className=\"postListTitle\">{title}</div>\r\n            {list && list.map((i, idx) => <PostList no={idx+1} list={i} key={i.postId} />)}\r\n\t\t</div>\r\n\t)\r\n}\r\nexport default React.memo(Recents)\r\n","import Axios from 'axios'\r\nimport React, { useEffect, useState } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { AppContext } from '../App'\r\nimport './CommentLists.css'\r\n\r\nfunction CommentLists(props) {\r\n\tconst store = React.useContext(AppContext)\r\n\tconst { list, location } = props\r\n\tconst [comments, setComments] = useState()\r\n\tconst [commentCnt, setCommentCnt] = useState(10)\r\n\tconst [recentAll, setRecentAll] = useState('')\r\n\r\n\tuseEffect(() => {\r\n\t\tif (list) setComments(list) //props로 받은 list가 있으면 comments에 저장\r\n\r\n\t\tif (location && location.pathname === '/comments') {\r\n\t\t\t//전체리스트면 Axios로 comments 가져옴\r\n\t\t\tsetRecentAll('recentAll')\r\n\t\t\tlet url = process.env.REACT_APP_URL + '/comments/recentAll'\r\n\t\t\t//url = process.env.REACT_APP_LOCAL_URL + '/comments/recentAll'\r\n\t\t\tAxios.get(url)\r\n\t\t\t\t.then((res) => {\r\n\t\t\t\t\t//console.log(res.data)\r\n\t\t\t\t\tsetComments(res.data)\r\n\t\t\t\t})\r\n\t\t\t\t.catch((res) => {\r\n\t\t\t\t\tsetComments('')\r\n\t\t\t\t\t//console.log(res)\r\n\t\t\t\t})\r\n\t\t}\r\n\t}, [location, list])\r\n\r\n\tuseEffect(() => {\r\n\t\tif(store) store.setReady(false)\r\n\t\tif (comments) {\r\n\t\t\tstore.setReady(true)\r\n\t\t} else if (comments === '') store.setReady(true)\r\n\t})\r\n\r\n\t//댓글 10개 더보기\r\n\tconst more = (e) => {\r\n\t\tsetCommentCnt(commentCnt + 10)\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className={`post recents recentComment ${recentAll}`}>\r\n\t\t\t<div className=\"postListTitle\">최신 댓글 {list && <Link to=\"/comments\">더보기</Link>}</div>\r\n\t\t\t{comments &&\r\n\t\t\t\tcomments.map((i, idx) => (\r\n\t\t\t\t\t<div key={i.title + idx}>\r\n\t\t\t\t\t\t{idx < commentCnt && (\r\n\t\t\t\t\t\t\t<Link to={`/posts/${i.postId}/#comments`}>\r\n\t\t\t\t\t\t\t\t<div className=\"postList no-drag\">\r\n\t\t\t\t\t\t\t\t\t<div className=\"postListHeader\">\r\n\t\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t\t<span className=\"postId\">{idx + 1}.</span>\r\n\t\t\t\t\t\t\t\t\t\t\t<span className=\"username\">{i.username}</span>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t<span className=\"postDate\">{i.publishedDate && i.publishedDate.substring(0, 19).replace('T', ' ')}</span>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<div className=\"postBody\">{i.content}</div>\r\n\t\t\t\t\t\t\t\t\t<div className=\"postTitle\">{i.title}</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t))}\r\n\t\t\t{comments && comments.length > commentCnt && (\r\n\t\t\t\t<div className=\"more\">\r\n\t\t\t\t\t<span className=\"moreButton\" onClick={more}>\r\n\t\t\t\t\t\t댓글 더보기\r\n\t\t\t\t\t</span>\r\n\t\t\t\t</div>\r\n\t\t\t)}\r\n\t\t</div>\r\n\t)\r\n}\r\nexport default React.memo(CommentLists)\r\n","/* eslint-disable jsx-a11y/accessible-emoji */\r\nimport React, { useEffect, useState } from 'react'\r\nimport './Post.css'\r\nimport { Link } from 'react-router-dom'\r\nimport { useQuill } from 'react-quilljs'\r\nimport Comment from './Comment'\r\nimport { AppContext } from '../App'\r\nimport RefreshIcon from '@material-ui/icons/Refresh'\r\nimport Axios from 'axios'\r\nimport Meta from './Meta'\r\nimport Recents from './Recents'\r\nimport CommentLists from './CommentLists'\r\nimport CopyToClipboard from 'react-copy-to-clipboard'\r\n\r\nfunction Post({ match, location, history }) {\r\n  const store = React.useContext(AppContext)\r\n  let { postId } = match.params\r\n  const [post, setPost] = useState(false)\r\n  const [postBody, setPostBody] = useState()\r\n  const [comments, setComments] = useState([])\r\n  const [commentCnt, setCommentCnt] = useState(3)\r\n\r\n  const [recents, setRecents] = useState([])\r\n  const [popular, setPopular] = useState([])\r\n  const [recentComments, setRecentComments] = useState([])\r\n\r\n  const modules = { syntax: true }\r\n  const formats = ['bold', 'italic', 'underline', 'strike', 'code-block', 'blockquote', 'size', 'header', 'align', 'color', 'background', 'indent', 'list', 'link', 'image', 'video', 'clean']\r\n  const { quill, quillRef } = useQuill({ modules, formats, readOnly: true })\r\n\r\n  useEffect(() => {\r\n    setPost(false)\r\n    setPostBody(false)\r\n    //포스트 가져오기\r\n    let id = 1\r\n    if (postId) id = postId\r\n    let url = process.env.REACT_APP_URL + '/posts/' + id\r\n    //url = process.env.REACT_APP_LOCAL_URL + '/posts/' + id\r\n    Axios.get(url, {\r\n      withCredentials: true,\r\n    })\r\n      .then((res) => {\r\n        setComments(res.data.comments)\r\n        setPost(res.data)\r\n      })\r\n      .catch((e) => {\r\n        alert('찾으시는 페이지가 없습니다.\\n' + e)\r\n        history.go(-1)\r\n      }) //실패\r\n\r\n    //포스트바디 가져오기\r\n    url = process.env.REACT_APP_URL + '/posts/postBody/' + id\r\n    //url = process.env.REACT_APP_LOCAL_URL + '/posts/postBody/' + id\r\n    Axios.get(url)\r\n      .then((res) => {\r\n        setPostBody(res.data.body)\r\n\r\n        if (location.hash) {\r\n          //hash가 있으면 해당 엘리먼트로 스크롤\r\n          setTimeout(function () {\r\n            //postBody가 로드된 이후에 스크롤이 되야해서 0.01초 타임아웃 추가..\r\n            const content = document.querySelector('#content')\r\n            const elem = document.querySelector(location.hash)\r\n            if (content && elem) {\r\n              let contentScroll = content.scrollTop\r\n              let elemTop = elem.offsetTop\r\n              let dif = (elemTop - contentScroll) / 100\r\n              let frame\r\n              //프레임이 혹시라도 안멈출 수 있어서 1초 후에 강제로 종료함\r\n              setTimeout(function () {\r\n                clearInterval(frame)\r\n              }, 1000)\r\n              if (elemTop > contentScroll) {\r\n                frame = setInterval(function () {\r\n                  //인터벌\r\n                  if (content.scrollTop + dif >= elemTop || content.scrollTop >= content.scrollHeight - content.clientHeight) {\r\n                    clearInterval(frame)\r\n                  } else {\r\n                    content.scrollTop += dif\r\n                  }\r\n                }, 10)\r\n              } else {\r\n                frame = setInterval(function () {\r\n                  if (content.scrollTop <= elemTop) {\r\n                    clearInterval(frame)\r\n                  } else {\r\n                    content.scrollTop += dif\r\n                  }\r\n                }, 10)\r\n              }\r\n            }\r\n          }, 10)\r\n        }\r\n      })\r\n      .catch((e) => {\r\n        console.log(e)\r\n      }) //실패\r\n\r\n    //홈일경우 recents, popular, recentComments 가져옴\r\n    if (location.pathname === '/') {\r\n      url = process.env.REACT_APP_URL + '/posts/popular'\r\n      //url = process.env.REACT_APP_LOCAL_URL + '/posts/popular'\r\n      Axios.get(url).then((res) => {\r\n        setPopular(res.data)\r\n      })\r\n\r\n      url = process.env.REACT_APP_URL + '/posts/recents'\r\n      //url = process.env.REACT_APP_LOCAL_URL + '/posts/recents'\r\n      Axios.get(url).then((res) => {\r\n        setRecents(res.data)\r\n      })\r\n\r\n      url = process.env.REACT_APP_URL + '/comments/recent'\r\n      //url = process.env.REACT_APP_LOCAL_URL + '/comments/recent'\r\n      Axios.get(url).then((res) => {\r\n        setRecentComments(res.data)\r\n      })\r\n    }\r\n  }, [location, postId, history])\r\n\r\n  //포스트 바디가 준비되면 quill에 포스트 바디를 그리고\r\n  //포스트 바디가 없으면 포스트가 있으면 quill에 포스트 텍스트를 그리기.\r\n  useEffect(() => {\r\n    if (quill) {\r\n      if (postBody) {\r\n        quill.setContents(postBody)\r\n      } else if (post) {\r\n        quill.setText(post.text)\r\n      }\r\n    }\r\n  }, [quill, postBody, post])\r\n\r\n  //포스트가 준비되면 화면 보이기\r\n  useEffect(() => {\r\n    store.setReady(false)\r\n    if (post) {\r\n      store.setReady(true)\r\n\r\n      //태그 찾아서 activeListManual 적용\r\n      let tags\r\n      if (post.tags[1]) {\r\n        tags = document.querySelectorAll(`a[href=\"/tags/${post.tags[1]}\"]`)\r\n      } else if (post.tags[0]) {\r\n        tags = document.querySelectorAll(`a[href=\"/tags/${post.tags[0]}\"]`)\r\n      }\r\n      if (tags) {\r\n        for (let i of tags) {\r\n          i.classList.add('activeListManual')\r\n        }\r\n      }\r\n    }\r\n  })\r\n\r\n  const deletePost = (e) => {\r\n    if (window.confirm('글 삭제 시 복구가 불가합니다. 해당 글을 정말로 삭제하시겠습니까?')) {\r\n      const postId = e.target.id\r\n      let url = process.env.REACT_APP_URL + '/posts/' + postId\r\n      //url = process.env.REACT_APP_LOCAL_URL+'/posts/'+postId\r\n\r\n      Axios.delete(url, {\r\n        //글 삭제\r\n        withCredentials: true, //CORS\r\n      })\r\n        .then((res) => {\r\n          console.log(`${postId}번 글 삭제 성공`)\r\n          history.go(-1)\r\n        })\r\n        .catch((e) => alert(e)) //실패\r\n    }\r\n  }\r\n\r\n  const postComment = (e) => {\r\n    const comment = document.querySelector(`.commentContent textarea`) //댓글 텍스트\r\n    if (comment && comment.value !== '' && window.confirm('댓글을 작성하시겠습니까?')) {\r\n      let url = process.env.REACT_APP_URL + '/comments/' + post.postId\r\n      //url = process.env.REACT_APP_LOCAL_URL+'/comments/'+post.postId\r\n\r\n      Axios.patch(url, {\r\n        //댓글 작성\r\n        withCredentials: true, //CORS\r\n        data: {\r\n          username: store.login.username,\r\n          content: comment.value,\r\n        },\r\n      })\r\n        .then((res) => {\r\n          console.log(`${post.postId} 댓글 추가 성공`)\r\n          refreshComment(null, setCommentCnt(res.data.comments.length)) //포스트 다시 불러오고 댓글 끝까지 보이기\r\n          comment.value = ''\r\n        })\r\n        .catch((e) => alert(e)) //실패\r\n    }\r\n  }\r\n\r\n  const refreshComment = (e, func) => {\r\n    //댓글 가져오기\r\n    let url = process.env.REACT_APP_URL + '/comments/' + post.postId\r\n    //url = process.env.REACT_APP_LOCAL_URL+'/comments/'+post.postId\r\n\r\n    let svg //refresh 아이콘\r\n    if (e && e.target) svg = e.target.querySelector('svg')\r\n    if (svg) svg.classList.add('refreshing') //refresh 애니메이션 시작\r\n\r\n    Axios.get(url, {\r\n      withCredentials: true,\r\n    }) //댓글 새로고치기\r\n      .then((res) => {\r\n        console.log(`${post.postId} 댓글 새로고침`)\r\n        setComments(res.data) //댓글 저장\r\n        if (svg) svg.classList.remove('refreshing') //refresh 애니메이션 끝\r\n\r\n        if (func) func() //파라미터에 함수가 있으면 함수 실행\r\n      })\r\n      .catch((e) => {\r\n        //실패\r\n        if (svg) svg.classList.remove('refreshing') //refresh 애니메이션 끝\r\n        console.log(e)\r\n      })\r\n  }\r\n\r\n  //댓글 10개 더보기\r\n  const more = (e) => {\r\n    setCommentCnt(commentCnt + 10)\r\n  }\r\n\r\n  //댓글 더보기, 댓글 새로고침 하면 리사이즈\r\n  useEffect(() => {\r\n    store.resizeTextarea()\r\n  }, [commentCnt, store, comments])\r\n\r\n\tconst copied = e => {\r\n\t\t//console.log(e.target)\r\n\t\tlet emoji = e.target\r\n\t\temoji.style.background = 'blue'\r\n\t\tsetTimeout(function(){\r\n\t\t\temoji.style.background = 'unset'\r\n\t\t}, 1000)\r\n\t}\r\n\r\n  return (\r\n    <>\r\n      <div className=\"post\">\r\n        {location.pathname === '/' ? (\r\n          <Meta\r\n            data={{\r\n              title: '임기의 코딩 블로그 😄',\r\n              description: 'imki123의 임기의 코딩 블로그입니다 😄',\r\n            }}\r\n          />\r\n        ) : (\r\n          <Meta data={{ title: post.title, description: post.text, locale: 'ko' }} />\r\n        )}\r\n        {/* 태그 */}\r\n        <div className=\"nav\">\r\n          <div>\r\n            <span>Tag : </span>\r\n            {post.tags &&\r\n              post.tags.map((i, idx) =>\r\n                idx === 0 ? (\r\n                  <span key={i}>\r\n                    <Link to={i === 'home' ? '/' : `/tags/${i}`}>{i}</Link>\r\n                  </span>\r\n                ) : (\r\n                  <span key={i}>\r\n                    , <Link to={`/tags/${i}`}>{i}</Link>\r\n                  </span>\r\n                ),\r\n              )}\r\n          </div>\r\n          <div>\r\n            {/* 조회수 */}\r\n            {\r\n              /* post.postId !== 1 &&  */ <span>\r\n                조회수: {post.views ? post.views + 1 : 1}\r\n                {', '}\r\n              </span>\r\n            }\r\n            {/* 게시일자 */}\r\n            {post && post.publishedDate.substring(0, 16).replace('T', ' ')}\r\n          </div>\r\n        </div>\r\n\r\n        {/* 글 수정 삭제 버튼 */}\r\n        {store.login && store.login.username === 'imki123' && (\r\n          <div className=\"postButtons\">\r\n            <Link to={`/quill/${post.postId}`} className=\"hover no-drag\">\r\n              수정\r\n            </Link>\r\n            &nbsp;\r\n            <button onClick={deletePost} id={post.postId} style={{ background: 'red' }}>\r\n              삭제\r\n            </button>\r\n          </div>\r\n        )}\r\n\r\n        <h2 className=\"postTitle\">{post.title}</h2>\r\n        <div className=\"postContent\">\r\n          {/* 본문 */}\r\n          <div id=\"editor\">\r\n            <div ref={quillRef} />\r\n          </div>\r\n          <div className=\"hiddenText\">{post.text}</div>\r\n\r\n          {/* 글 수정 삭제 버튼 */}\r\n          {store.login && store.login.username === 'imki123' && (\r\n            <div className=\"postButtons\">\r\n              <Link to={`/quill/${post.postId}`} className=\"hover no-drag\">\r\n                수정\r\n              </Link>\r\n              &nbsp;\r\n              <button onClick={deletePost} id={post.postId} style={{ background: 'red' }}>\r\n                삭제\r\n              </button>\r\n            </div>\r\n          )}\r\n        </div>\r\n\r\n        {/* 댓글 작성*/}\r\n        {location.pathname !== '/' && (\r\n          <>\r\n            <div className=\"EmojiDiv\">\r\n              <span className=\"Emoji\">\r\n                <CopyToClipboard text={\"😄\"}><span onClick={copied}>😄</span></CopyToClipboard>\r\n                <CopyToClipboard text={\"🤣\"}><span onClick={copied}>🤣</span></CopyToClipboard>\r\n                <CopyToClipboard text={\"🥰\"}><span onClick={copied}>🥰</span></CopyToClipboard>\r\n                <CopyToClipboard text={\"😍\"}><span onClick={copied}>😍</span></CopyToClipboard>\r\n                <CopyToClipboard text={\"😝\"}><span onClick={copied}>😝</span></CopyToClipboard>\r\n                <CopyToClipboard text={\"😭\"}><span onClick={copied}>😭</span></CopyToClipboard>\r\n                <CopyToClipboard text={\"👍\"}><span onClick={copied}>👍</span></CopyToClipboard>\r\n                <CopyToClipboard text={\"🐕\"}><span onClick={copied}>🐕</span></CopyToClipboard>\r\n                <CopyToClipboard text={\"🐈\"}><span onClick={copied}>🐈</span></CopyToClipboard>\r\n                <CopyToClipboard text={\"☀\"}><span onClick={copied}>☀</span></CopyToClipboard>\r\n                <CopyToClipboard text={\"🌙\"}><span onClick={copied}>🌙</span></CopyToClipboard>\r\n                <CopyToClipboard text={\"⭐\"}><span onClick={copied}>⭐</span></CopyToClipboard>\r\n                <CopyToClipboard text={\"☁\"}><span onClick={copied}>☁</span></CopyToClipboard>\r\n                <CopyToClipboard text={\"🌧\"}><span onClick={copied}>🌧</span></CopyToClipboard>\r\n                <CopyToClipboard text={\"💧\"}><span onClick={copied}>💧</span></CopyToClipboard>\r\n                <CopyToClipboard text={\"♥\"}><span onClick={copied}>♥</span></CopyToClipboard>\r\n                <CopyToClipboard text={\"❤\"}><span onClick={copied}>❤</span></CopyToClipboard>\r\n                <CopyToClipboard text={\"💕\"}><span onClick={copied}>💕</span></CopyToClipboard>\r\n              </span>\r\n              <span\r\n                className=\"EmojiLink\"\r\n                onClick={() => {\r\n                  window.open('https://copy.emojiall.com/ko/')\r\n                }}\r\n              >\r\n                [이모지🔗]\r\n              </span>\r\n            </div>\r\n            <div className=\"writeComment\">\r\n              <div className=\"commentProfile\">\r\n                {!store.login ? (\r\n                  <img alt=\"PROFILE\" src={process.env.PUBLIC_URL + '/images/noavatar.png'} />\r\n                ) : (\r\n                  <img\r\n                    alt=\"PROFILE\"\r\n                    src={store.login.imageUrl}\r\n                    onError={(e) => {\r\n                      e.target.src = process.env.PUBLIC_URL + '/images/dog' + (Math.floor(Math.random() * (3 - 1 + 1)) + 1) + '.png'\r\n                    }}\r\n                  />\r\n                )}\r\n              </div>\r\n              <div className=\"commentContent\">\r\n                {store.login ? (\r\n                  <span className=\"commentUsername\">{store.login.username}</span>\r\n                ) : (\r\n                  <button\r\n                    className=\"loginButton\"\r\n                    onClick={() => {\r\n                      history.push('/login')\r\n                    }}\r\n                  >\r\n                    로그인\r\n                  </button>\r\n                )}\r\n                {store.login ? <textarea onChange={store.resizeTextarea} placeholder=\" 댓글을 남겨주세요 😄\" /> : <textarea readOnly placeholder=\" 로그인 후에 댓글을 남겨주세요 😄\" />}\r\n              </div>\r\n            </div>\r\n            <div className=\"commentButtons\">\r\n              {store.login && (\r\n                <button className=\"commentButton\" onClick={postComment}>\r\n                  댓글작성\r\n                </button>\r\n              )}\r\n            </div>\r\n          </>\r\n        )}\r\n\r\n        {/* 댓글 목록 */}\r\n        {comments && comments.length > 0 && (\r\n          <div id=\"comments\">\r\n            <div className=\"commentTitle\">\r\n              <div className=\"commentCnt\">댓글 {comments.length}개</div>\r\n              <span className=\"commentRefresh\" onClick={refreshComment}>\r\n                댓글 새로고침 <RefreshIcon />\r\n              </span>\r\n            </div>\r\n            {comments.map((i, idx) => idx < commentCnt && <Comment post={post} comment={i} key={i.commentId} refreshComment={refreshComment} />)}\r\n            {comments.length > commentCnt && (\r\n              <div className=\"more\">\r\n                <span className=\"moreButton\" onClick={more}>\r\n                  댓글 더보기\r\n                </span>\r\n              </div>\r\n            )}\r\n          </div>\r\n        )}\r\n      </div>\r\n      {location.pathname === '/' && (\r\n        <div className=\"homeLists\">\r\n          <Recents title=\"최신글\" list={recents} />\r\n          <Recents title=\"인기글\" list={popular} />\r\n          <CommentLists list={recentComments} />\r\n        </div>\r\n      )}\r\n    </>\r\n  )\r\n}\r\nexport default React.memo(Post)\r\n","import React, { useEffect } from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { AppContext } from '../App'\r\nimport './NotFoundPage.css'\r\n\r\nfunction NotFoundPage() {\r\n\tconst store = React.useContext(AppContext)\r\n\tconst history = useHistory()\r\n\tuseEffect(() => {\r\n\t\t//console.log(`Not found page! https://imki123.github.io/`)\r\n\t\tstore.setReady(true)\r\n\t})\r\n\r\n\tconst goBack = e => {\r\n\t\thistory.go(-1)\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className=\"notFound\">\r\n\t\t\t<div className=\"title\">Not Found Page</div>\r\n\t\t\t<div className=\"goHome\">\r\n\t\t\t\t<span onClick={goBack}>Go back</span>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\nexport default React.memo(NotFoundPage)\r\n","import React, { useState, useEffect } from 'react'\r\nimport './Login.css'\r\nimport { Switch, Route, Link } from 'react-router-dom'\r\nimport { AppContext } from '../App'\r\nimport GoogleLogin from 'react-google-login'\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert'\r\n\r\nfunction Login({ history, match, location }) {\r\n\tconst href = window.location.href\r\n\tlet clientId\r\n\tif (href.indexOf('localhost') > -1) {\r\n\t\t//로컬\r\n\t\tclientId = '605411712139-7nr29rfs5ihfu9uoev3igr5hpf4ubkle.apps.googleusercontent.com'\r\n\t} else {\r\n\t\t//서버\r\n\t\tclientId = '605411712139-eb3qqicskmkal2i9u26ppdhoq2jt0bd8.apps.googleusercontent.com'\r\n\t}\r\n\tconst store = React.useContext(AppContext)\r\n\tlet browser = ''\r\n\tconst agent = navigator.userAgent.toLowerCase()\r\n\tif (agent.indexOf('chrome') > -1) browser = 'chrome'\r\n\telse if (agent.indexOf('safari') > -1) browser = 'safari'\r\n\r\n\tconst [checkUsername, setCheckUsername] = useState('')\r\n\tconst [checkPassword, setCheckPassword] = useState('')\r\n\tconst [checkPasswordConfirm, setCheckPasswordConfirm] = useState('')\r\n\tconst [buttonName, setButtonName] = useState('로그인')\r\n\tconst [userinfo, setUserinfo] = useState()\r\n\r\n\tuseEffect(() => {\r\n\t\t//로그인화면에서 로그인은 안되어있는데 유저정보가 있으면 로그인 처리\r\n\t\tconst userinfoElem = document.querySelector('#userinfo')\r\n\t\tif (location.pathname === '/login' || location.pathname === '/login/') {\r\n\t\t\tif (!store.login) {\r\n\t\t\t\tlet frame = setInterval(function () {\r\n\t\t\t\t\tconsole.log('유저정보 체크')\r\n\t\t\t\t\tif (userinfoElem && userinfoElem.value) {\r\n\t\t\t\t\t\t//userinfo가 있으면 로그인 처리\r\n\t\t\t\t\t\t//새로고침되거나, 로그인 버튼을 누르면 userinfo를 가져옴\r\n\t\t\t\t\t\tclearInterval(frame) //userinfo 있으면 로그인 체크 중지\r\n\t\t\t\t\t\tlet user = JSON.parse(userinfoElem.value)\r\n\r\n\t\t\t\t\t\tif (user.host === 'naver') {\r\n\t\t\t\t\t\t\tlet email = user.email\r\n\t\t\t\t\t\t\tlet username = email.substring(0, email.indexOf('@')) + '_n'\r\n\t\t\t\t\t\t\tif (username === 'popping2606_n') username = 'imki123' //내아이디\r\n\t\t\t\t\t\t\tconsole.log('네이버 로그인 성공:', username)\r\n\t\t\t\t\t\t\tuser = {\r\n\t\t\t\t\t\t\t\tusername: username,\r\n\t\t\t\t\t\t\t\temail: email,\r\n\t\t\t\t\t\t\t\timageUrl: user.profile_image,\r\n\t\t\t\t\t\t\t\thost: user.host,\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tlet email = user.email\r\n\t\t\t\t\t\t\tlet username\r\n\t\t\t\t\t\t\tif (email) {\r\n\t\t\t\t\t\t\t\tusername = email.substring(0, email.indexOf('@')) + '_k'\r\n\t\t\t\t\t\t\t\tif (username === 'popping2606_k') username = 'imki123' //내아이디\r\n\t\t\t\t\t\t\t\tconsole.log('카카오 로그인 성공:', username)\r\n\t\t\t\t\t\t\t\tuser = {\r\n\t\t\t\t\t\t\t\t\tusername: username,\r\n\t\t\t\t\t\t\t\t\temail: email,\r\n\t\t\t\t\t\t\t\t\timageUrl: user.profile.thumbnail_image_url,\r\n\t\t\t\t\t\t\t\t\thost: user.host,\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tconsole.log('이메일 정보 없음. 로그아웃.')\r\n\t\t\t\t\t\t\t\talert('이메일이 없으면 로그인이 불가해요. 이메일 동의 부탁드려요 😄')\r\n\t\t\t\t\t\t\t\t//카카오 로그아웃\r\n\t\t\t\t\t\t\t\tconst kakaoLogout = document.querySelector('#kakaoLogout')\r\n\t\t\t\t\t\t\t\tif (kakaoLogout) kakaoLogout.click()\r\n\t\t\t\t\t\t\t\tuserinfoElem.value = ''\r\n\t\t\t\t\t\t\t\thistory.replace()\r\n\t\t\t\t\t\t\t\treturn\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t//console.log(user)\r\n\r\n\t\t\t\t\t\tlet url = process.env.REACT_APP_URL + '/auth/oauth'\r\n\t\t\t\t\t\t//url = process.env.REACT_APP_LOCAL_URL + '/auth/oauth'\r\n\t\t\t\t\t\t//로그인 성공시 토큰에 name, email, imageUrl 저장\r\n\t\t\t\t\t\tfetch(url, {\r\n\t\t\t\t\t\t\tmode: 'cors',\r\n\t\t\t\t\t\t\tmethod: 'POST',\r\n\t\t\t\t\t\t\tcredentials: 'include',\r\n\t\t\t\t\t\t\theaders: { 'Content-Type': 'application/json' },\r\n\t\t\t\t\t\t\tbody: JSON.stringify(user),\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t.then((res) => {\r\n\t\t\t\t\t\t\t\tif (res.status === 200 || res.status === 201) {\r\n\t\t\t\t\t\t\t\t\t//성공하면 아래 then 작동\r\n\t\t\t\t\t\t\t\t\tres.json().then((res) => {\r\n\t\t\t\t\t\t\t\t\t\talert(res.username + '님 환영합니다 😄')\r\n\t\t\t\t\t\t\t\t\t\t//로그인 시 홈으로 이동\r\n\t\t\t\t\t\t\t\t\t\thistory.replace('/')\r\n\t\t\t\t\t\t\t\t\t\t//history.go(-1) //뒤로가기\r\n\t\t\t\t\t\t\t\t\t\tsetUserinfo(res)\r\n\t\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\tlet message = '로그인에 실패했습니다 :('\r\n\t\t\t\t\t\t\t\t\tif (res.status === 401) {\r\n\t\t\t\t\t\t\t\t\t\tmessage += '\\n로그인 정보를 확인해주세요.'\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tconsole.log(message)\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t.catch((e) => console.error(e))\r\n\t\t\t\t\t}\r\n\t\t\t\t}, 1000)\r\n\t\t\t}\r\n\t\t} else if (location.pathname === '/loginStatus' || location.pathname === '/loginStatus/') {\r\n\t\t\tif (userinfoElem && !userinfoElem.value) {\r\n\t\t\t\tsetUserinfo(false)\r\n\t\t\t}\r\n\t\t}\r\n\t}, [store.login, location, history])\r\n\r\n\tuseEffect(() => {\r\n\t\t//유저인포가 있으면 로그인처리\r\n\t\tif (store) {\r\n\t\t\tstore.setReady(true)\r\n\t\t\tif (userinfo) {\r\n\t\t\t\tstore.setLogin(userinfo)\r\n\t\t\t}\r\n\t\t}\r\n\t})\r\n\r\n\tuseEffect(() => {\r\n\t\t//이미 로그인이 되어있다면 스테이터스로 이동\r\n\t\tif (location.pathname === '/login' || location.pathname === '/login/') {\r\n\t\t\tif (store.login) {\r\n\t\t\t\thistory.replace('/loginStatus')\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t//로그인이 안되어있으면 로그인으로 이동\r\n\t\tif (location.pathname === '/loginStatus' || location.pathname === '/loginStatus/') {\r\n\t\t\t//console.log(store.login)\r\n\t\t\tif (!store.login) {\r\n\t\t\t\tsetTimeout(function () {\r\n\t\t\t\t\tif (!store.login) {\r\n\t\t\t\t\t\thistory.replace('/login')\r\n\t\t\t\t\t}\r\n\t\t\t\t}, 1000)\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (location.pathname.indexOf('register') > -1) {\r\n\t\t\tsetButtonName('회원가입')\r\n\t\t} else if (location.pathname.indexOf('withdraw') > -1) {\r\n\t\t\tsetButtonName('회원탈퇴')\r\n\t\t} else {\r\n\t\t\tsetButtonName('로그인')\r\n\t\t}\r\n\t}, [location, store.login, history])\r\n\r\n\tconst changeUsername = (e) => {\r\n\t\tconst pattern = /[^a-zA-Z0-9ㄱ-ㅎㅏ-ㅣ가-힣_]/g\r\n\t\tconst value = (e.target.value = e.target.value.replace(/\\s/g, '_').replace(pattern, ''))\r\n\t\tif (value.length < 3) {\r\n\t\t\t//3글자 이상\r\n\t\t\tsetCheckUsername('- 3자 이상 입력해주세요')\r\n\t\t} else if (value.length > 20) {\r\n\t\t\t//20글자 이하\r\n\t\t\tsetCheckUsername('- 20자 이하로 입력해주세요')\r\n\t\t} else {\r\n\t\t\tsetCheckUsername('')\r\n\t\t}\r\n\t}\r\n\tconst changePassword = (e) => {\r\n\t\tconst { value } = e.target\r\n\t\tconst passwordConfirm = document.querySelector('[name=passwordConfirm]')\r\n\r\n\t\t//비밀번호가 변경되면 비밀번호 확인은 초기화\r\n\t\tif (passwordConfirm) {\r\n\t\t\tpasswordConfirm.value = ''\r\n\t\t\tsetCheckPasswordConfirm('')\r\n\t\t}\r\n\r\n\t\tif (value.length < 6) {\r\n\t\t\t//6글자 이상\r\n\t\t\tsetCheckPassword('- 6자 이상 입력해주세요')\r\n\t\t} else if (value.length > 20) {\r\n\t\t\t//20글자 이하\r\n\t\t\tsetCheckPassword('- 20자 이하로 입력해주세요')\r\n\t\t} else {\r\n\t\t\tsetCheckPassword('')\r\n\t\t}\r\n\t}\r\n\tconst changePasswordConfirm = (e) => {\r\n\t\tconst { value } = e.target\r\n\t\tconst password = document.querySelector('[name=password]')\r\n\r\n\t\tif (value !== password.value && value.length >= 1) {\r\n\t\t\t//password와 같으면\r\n\t\t\tsetCheckPasswordConfirm('- 비밀번호가 일치하지 않습니다')\r\n\t\t} else {\r\n\t\t\tsetCheckPasswordConfirm('')\r\n\t\t}\r\n\t}\r\n\tconst clickButton = (e) => {\r\n\t\te.preventDefault()\r\n\t\tlet url = process.env.REACT_APP_URL + '/auth'\r\n\t\t//url = process.env.REACT_APP_LOCAL_URL+'/auth'\r\n\r\n\t\tconst pattern = /[^a-zA-Z0-9가-힣_]/g\r\n\t\tlet username = document.querySelector('[name=username]')\r\n\t\tif (username) username = username.value = username.value.replace(pattern, '')\r\n\t\tlet password = document.querySelector('[name=password]')\r\n\t\tif (password) password = password.value\r\n\r\n\t\tif (checkUsername === '' && password.length >= 1 && checkPassword === '' && checkPasswordConfirm === '') {\r\n\t\t\t//입력폼에 이상이 없으면 fetch submit\r\n\t\t\tif (buttonName === '회원가입') {\r\n\t\t\t\turl += '/register'\r\n\t\t\t\tfetch(url, {\r\n\t\t\t\t\tmode: 'cors',\r\n\t\t\t\t\tmethod: 'POST',\r\n\t\t\t\t\tcredentials: 'include',\r\n\t\t\t\t\theaders: { 'Content-Type': 'application/json' },\r\n\t\t\t\t\tbody: JSON.stringify({\r\n\t\t\t\t\t\tusername: username,\r\n\t\t\t\t\t\tpassword: password,\r\n\t\t\t\t\t}),\r\n\t\t\t\t})\r\n\t\t\t\t\t.then((res) => {\r\n\t\t\t\t\t\tif (res.status === 200 || res.status === 201) {\r\n\t\t\t\t\t\t\t//성공하면 아래 then 작동\r\n\t\t\t\t\t\t\tres.json().then((res) => {\r\n\t\t\t\t\t\t\t\talert(res.username + '님의 회원가입에 성공했습니다 😄')\r\n\t\t\t\t\t\t\t\thistory.go(-1)\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tlet message = '회원가입에 실패했습니다 :('\r\n\t\t\t\t\t\t\tif (res.status === 409) {\r\n\t\t\t\t\t\t\t\tmessage += '\\n이미 존재하는 아이디입니다.'\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tif (res.status === 400) {\r\n\t\t\t\t\t\t\t\tmessage += '\\n아이디나 비밀번호를 확인해주세요.'\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\talert(message)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t})\r\n\t\t\t\t\t.catch((e) => console.error(e))\r\n\t\t\t} else if (buttonName === '회원탈퇴') {\r\n\t\t\t\tif (window.confirm('계정 탈퇴시 복구할 수 없습니다. 정말로 탈퇴하시겠습니까?')) {\r\n\t\t\t\t\turl += '/withdraw'\r\n\t\t\t\t\tfetch(url, {\r\n\t\t\t\t\t\tmode: 'cors',\r\n\t\t\t\t\t\tmethod: 'DELETE',\r\n\t\t\t\t\t\tcredentials: 'include',\r\n\t\t\t\t\t\theaders: { 'Content-Type': 'application/json' },\r\n\t\t\t\t\t\tbody: JSON.stringify({\r\n\t\t\t\t\t\t\tusername: store.login.username,\r\n\t\t\t\t\t\t\tpassword: password,\r\n\t\t\t\t\t\t}),\r\n\t\t\t\t\t})\r\n\t\t\t\t\t\t.then((res) => {\r\n\t\t\t\t\t\t\tif (res.status === 200) {\r\n\t\t\t\t\t\t\t\t//삭제하면 Ok\r\n\t\t\t\t\t\t\t\talert('계정이 탈퇴되었습니다. 또 들러 주세요 😄')\r\n\t\t\t\t\t\t\t\thistory.push('/')\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tlet message = '탈퇴에 실패했습니다 :('\r\n\t\t\t\t\t\t\t\tif (res.status === 204) {\r\n\t\t\t\t\t\t\t\t\tmessage += '\\n존재하지 않는 아이디입니다.'\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tif (res.status === 401) {\r\n\t\t\t\t\t\t\t\t\tmessage += '\\n비밀번호를 확인해주세요.'\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\talert(message)\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t\t.catch((e) => console.error(e))\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\t//로그인\r\n\t\t\t\turl += '/login'\r\n\t\t\t\tfetch(url, {\r\n\t\t\t\t\tmode: 'cors',\r\n\t\t\t\t\tmethod: 'POST',\r\n\t\t\t\t\tcredentials: 'include',\r\n\t\t\t\t\theaders: { 'Content-Type': 'application/json' },\r\n\t\t\t\t\tbody: JSON.stringify({\r\n\t\t\t\t\t\tusername: username,\r\n\t\t\t\t\t\tpassword: password,\r\n\t\t\t\t\t}),\r\n\t\t\t\t})\r\n\t\t\t\t\t.then((res) => {\r\n\t\t\t\t\t\tif (res.status === 200 || res.status === 201) {\r\n\t\t\t\t\t\t\t//성공하면 아래 then 작동\r\n\t\t\t\t\t\t\tres.json().then((res) => {\r\n\t\t\t\t\t\t\t\tstore.setLogin(res)\r\n\t\t\t\t\t\t\t\talert(res.username + '님 환영합니다 😄')\r\n\t\t\t\t\t\t\t\thistory.go(-1)\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tlet message = '로그인에 실패했습니다 :('\r\n\t\t\t\t\t\t\tif (res.status === 401) {\r\n\t\t\t\t\t\t\t\tmessage += '\\n로그인 정보를 확인해주세요.'\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\talert(message)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t})\r\n\t\t\t\t\t.catch((e) => console.error(e))\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\talert('입력 정보를 확인해주세요.')\r\n\t\t}\r\n\t}\r\n\r\n\tconst successGoogle = (res) => {\r\n\t\tconsole.log('구글 로그인 성공')\r\n\t\t//console.log(res)\r\n\t\tlet email = res.profileObj.email\r\n\t\tlet username = email.substring(0, email.indexOf('@')) + '_g'\r\n\t\tif (username === 'popping2606_g') username = 'imki123' //내아이디\r\n\r\n\t\tlet user = {\r\n\t\t\tusername: username,\r\n\t\t\temail: email,\r\n\t\t\timageUrl: res.profileObj.imageUrl,\r\n\t\t}\r\n\t\tlet url = process.env.REACT_APP_URL + '/auth/oauth'\r\n\t\t//url = process.env.REACT_APP_LOCAL_URL + '/auth/oauth'\r\n\t\t//로그인 성공시 토큰에 name, email, imageUrl 저장\r\n\t\tfetch(url, {\r\n\t\t\tmode: 'cors',\r\n\t\t\tmethod: 'POST',\r\n\t\t\tcredentials: 'include',\r\n\t\t\theaders: { 'Content-Type': 'application/json' },\r\n\t\t\tbody: JSON.stringify({\r\n\t\t\t\tusername: user.username,\r\n\t\t\t\temail: user.email,\r\n\t\t\t\timageUrl: user.imageUrl,\r\n\t\t\t}),\r\n\t\t})\r\n\t\t\t.then((res) => {\r\n\t\t\t\tif (res.status === 200 || res.status === 201) {\r\n\t\t\t\t\t//성공하면 아래 then 작동\r\n\t\t\t\t\tres.json().then((res) => {\r\n\t\t\t\t\t\talert(res.username + '님 환영합니다 😄')\r\n\t\t\t\t\t\thistory.go(-1)\r\n\t\t\t\t\t\tstore.setLogin(res)\r\n\t\t\t\t\t})\r\n\t\t\t\t} else {\r\n\t\t\t\t\tlet message = '로그인에 실패했습니다 :('\r\n\t\t\t\t\tif (res.status === 401) {\r\n\t\t\t\t\t\tmessage += '\\n로그인 정보를 확인해주세요.'\r\n\t\t\t\t\t}\r\n\t\t\t\t\tconsole.log(message)\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\t.catch((e) => console.error(e))\r\n\t}\r\n\tconst failureGoogle = (res) => {\r\n\t\tconsole.log('구글 로그인 실패', res)\r\n\t}\r\n\r\n\tconst naverLogin = (e) => {\r\n\t\tconst naverIdLogin = document.querySelector('#naverIdLogin')\r\n\t\tif (naverIdLogin) {\r\n\t\t\tconsole.log('네이버 로그인 요청')\r\n\t\t\tnaverIdLogin.firstChild.click()\r\n\t\t}\r\n\t}\r\n\tconst kakaoLogin = (e) => {\r\n\t\tconst kakaoLogin = document.querySelector('#kakaoLogin')\r\n\t\tif (kakaoLogin) {\r\n\t\t\tconsole.log('카카오 로그인 요청')\r\n\t\t\tkakaoLogin.click()\r\n\t\t}\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div id=\"background\">\r\n\t\t\t<div id=\"loginWrapper\">\r\n\t\t\t\t<Switch>\r\n\t\t\t\t\t<Route path={['/login', '/register', '/withdraw']}>\r\n\t\t\t\t\t\t{(buttonName === '로그인' || buttonName === '회원가입') && (\r\n\t\t\t\t\t\t\t<div className=\"oAuth\">\r\n\t\t\t\t\t\t\t\t<div className=\"login\">\r\n\t\t\t\t\t\t\t\t\t{/* 네이버 로그인 */}\r\n\t\t\t\t\t\t\t\t\t<div className=\"naverLogin no-drag\" onClick={naverLogin}>\r\n\t\t\t\t\t\t\t\t\t\t<img alt=\"\" src={process.env.PUBLIC_URL + '/images/naver.png'} />\r\n\t\t\t\t\t\t\t\t\t\tLog in with Naver\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t{/* 카카오 로그인 */}\r\n\t\t\t\t\t\t\t\t\t<div className=\"naverLogin kakaoLogin no-drag\" onClick={kakaoLogin}>\r\n\t\t\t\t\t\t\t\t\t\t<img alt=\"\" src={process.env.PUBLIC_URL + '/images/kakao.png'} />\r\n\t\t\t\t\t\t\t\t\t\tLog in with Kakao\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t{/* 구글 로그인 */}\r\n\t\t\t\t\t\t\t\t\t<GoogleLogin\r\n\t\t\t\t\t\t\t\t\t\tbuttonText=\"Log in with Google\"\r\n\t\t\t\t\t\t\t\t\t\tclassName=\"googleLogin no-drag\"\r\n\t\t\t\t\t\t\t\t\t\tclientId={clientId}\r\n\t\t\t\t\t\t\t\t\t\tonSuccess={successGoogle}\r\n\t\t\t\t\t\t\t\t\t\tonFailure={failureGoogle}\r\n\t\t\t\t\t\t\t\t\t\tcookiePolicy={'single_host_origin'}\r\n\t\t\t\t\t\t\t\t\t\tisSignedIn={true}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t<div className=\"googleWarning\">\r\n\t\t\t\t\t\t\t\t\t\t구글 로그인은 <span style={{ color: 'red' }}>인앱 브라우저(카카오톡 등)</span>에서 지원되지 않습니다. 오류 발생 시 더보기(\r\n\t\t\t\t\t\t\t\t\t\t<MoreVertIcon />, <img alt=\"\" src={process.env.PUBLIC_URL + '/images/share.png'} />\r\n\t\t\t\t\t\t\t\t\t\t)를 눌러서 <span>다른 브라우저(Chrome, Safari 등)</span>에서 실행해주세요.\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t<form className=\"login\">\r\n\t\t\t\t\t\t\t<div className=\"text\">아이디</div>\r\n\t\t\t\t\t\t\t{buttonName === '회원탈퇴' ? <div>{store.login.username}</div> : <input name=\"username\" onChange={changeUsername} />}\r\n\r\n\t\t\t\t\t\t\t<div className=\"check\">{checkUsername}</div>\r\n\r\n\t\t\t\t\t\t\t<div className=\"text\">비밀번호</div>\r\n\t\t\t\t\t\t\t<input name=\"password\" type=\"password\" onChange={changePassword} autoComplete=\"currnet-password\" />\r\n\t\t\t\t\t\t\t<div className=\"check\">{checkPassword}</div>\r\n\r\n\t\t\t\t\t\t\t{buttonName === '회원가입' && (\r\n\t\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t\t<div className=\"text\">비밀번호 확인</div>\r\n\t\t\t\t\t\t\t\t\t<input name=\"passwordConfirm\" type=\"password\" onChange={changePasswordConfirm} autoComplete=\"currnet-password\" />\r\n\t\t\t\t\t\t\t\t\t<div className=\"check\" id=\"checkPasswordConfirm\">\r\n\t\t\t\t\t\t\t\t\t\t{checkPasswordConfirm}\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t\t)}\r\n\r\n\t\t\t\t\t\t\t{/* 버튼 */}\r\n\t\t\t\t\t\t\t{buttonName === '회원탈퇴' ? (\r\n\t\t\t\t\t\t\t\t<button style={{ background: 'red' }} onClick={clickButton}>\r\n\t\t\t\t\t\t\t\t\t{buttonName}\r\n\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t<button onClick={clickButton}>{buttonName}</button>\r\n\t\t\t\t\t\t\t)}\r\n\r\n\t\t\t\t\t\t\t{/* 로그인 or 회원가입 */}\r\n\t\t\t\t\t\t\t{buttonName === '로그인' && (\r\n\t\t\t\t\t\t\t\t<div className=\"loginLink\">\r\n\t\t\t\t\t\t\t\t\t<Link to=\"/register\">회원가입</Link>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t{buttonName === '회원가입' && (\r\n\t\t\t\t\t\t\t\t<div className=\"loginLink\">\r\n\t\t\t\t\t\t\t\t\t<Link to=\"/login\" className=\"loginLink\">\r\n\t\t\t\t\t\t\t\t\t\t로그인\r\n\t\t\t\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t)}\r\n\r\n\t\t\t\t\t\t\t{browser === 'safari' && (\r\n\t\t\t\t\t\t\t\t<div className=\"text\" style={{ fontSize: '0.8rem', textAlign: 'center' }}>\r\n\t\t\t\t\t\t\t\t\t(Safari의 설정을 변경해야 로그인이 가능합니다.)\r\n\t\t\t\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t\t\t\t설정 → Safari → 개인 정보 보호 및 보안 → <br />\r\n\t\t\t\t\t\t\t\t\t크로스 사이트 추적방지 OFF, 모든 쿠키 차단 OFF)\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t</form>\r\n\t\t\t\t\t</Route>\r\n\t\t\t\t\t<Route path={['/loginStatus']}>\r\n\t\t\t\t\t\t{store.login ? (\r\n\t\t\t\t\t\t\t<div className=\"center\">\r\n\t\t\t\t\t\t\t\t{store.login.username}님은 현재 <span style={{ color: 'green' }}>로그인</span> 되어있습니다 😄\r\n\t\t\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t\t\t<span style={{ fontSize: '0.8rem' }}>(로그인은 최대 일주일간 유지됩니다.)</span>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t<div className=\"login center\">\r\n\t\t\t\t\t\t\t\t재 로그인이 필요합니다\r\n\t\t\t\t\t\t\t\t<Link to=\"/login\" className=\"loginLink\">\r\n\t\t\t\t\t\t\t\t\t로그인\r\n\t\t\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t</Route>\r\n\t\t\t\t</Switch>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\nexport default React.memo(Login)\r\n","/* eslint-disable jsx-a11y/accessible-emoji */\r\nimport React, { useEffect, useState } from 'react'\r\nimport './Quill.css'\r\nimport 'quill/dist/quill.snow.css'\r\nimport { useQuill } from 'react-quilljs'\r\nimport imageCompress from 'quill-image-compress'\r\nimport { AppContext } from '../App'\r\nimport Axios from 'axios'\r\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\r\n\r\n\r\nfunction Quill({ match, location, history }) {\r\n\tconst store = React.useContext(AppContext)\r\n\tlet { postId } = match.params\r\n\tconst [post, setPost] = useState()\r\n\tconst [ready, setReady] = useState()\r\n\tconst [subMenus, setSubMenus] = useState()\r\n\r\n\tconst modules = {\r\n\t\ttoolbar: [\r\n\t\t\t['bold', 'italic', 'underline', 'strike'],\r\n\t\t\t[{ size: ['small', false, 'large', 'huge'] }, { header: 1 }, { header: 2 }],\r\n\t\t\t[{ align: [] }],\r\n\t\t\t[{ color: [] }, { background: [] }],\r\n\t\t\t[{ indent: '-1' }, { indent: '+1' }],\r\n\t\t\t[{ list: 'ordered' }, { list: 'bullet' }],\r\n\t\t\t['code-block', 'blockquote'],\r\n\t\t\t['link', 'image', 'video'],\r\n\t\t\t['clean'],\r\n\t\t],\r\n\t\tsyntax: true,\r\n\t\timageCompress: {\r\n\t\t\tquality: 0.7, // default\r\n\t\t\tmaxWidth: 1000, // default 1000\r\n\t\t\tmaxHeight: 1000, // default 1000\r\n\t\t\timageType: 'image/jpeg', // default\r\n\t\t\tdebug: true, // default\r\n\t\t  }\r\n\t}\r\n\tconst formats = ['bold', 'italic', 'underline', 'strike', 'code-block', 'blockquote', 'size', 'header', 'align', 'color', 'background', 'indent', 'list', 'link', 'image', 'video', 'clean']\r\n\r\n\tconst { quill, quillRef, Quill } = useQuill({ modules, formats })\r\n\tif (Quill && !quill) {\r\n\t\t// For execute this line only once.\r\n\t\tQuill.register('modules/imageCompress', imageCompress)\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\t\tsetReady(false)\r\n\t\t//포스트 불러오기 axios\r\n\t\tif (postId !== undefined && Number(postId) >= 1 && quill) {\r\n\t\t\t//postId가 없으면 포스트 내용 가져오지 않기\r\n\t\t\tlet url = process.env.REACT_APP_URL + '/posts/' + postId\r\n\t\t\t//url = process.env.REACT_APP_LOCAL_URL+'/posts/' + postId\r\n\r\n\t\t\tAxios.get(url, {\r\n\t\t\t\twithCredentials: true,\r\n\t\t\t}) //포스트 불러오기\r\n\t\t\t\t.then((res) => {\r\n\t\t\t\t\tlet title = document.querySelector('[name=title]')\r\n\t\t\t\t\ttitle.value = res.data.title\r\n\r\n\t\t\t\t\tconst tags = document.querySelectorAll('[type=radio]')\r\n\t\t\t\t\tfor (let i of tags) {\r\n\t\t\t\t\t\t//체크 초기화\r\n\t\t\t\t\t\ti.checked = false\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (res.data.tags) {\r\n\t\t\t\t\t\t//체크박스 체크\r\n\t\t\t\t\t\tconst mainMenu = document.getElementById(res.data.tags[0])\r\n\t\t\t\t\t\tif (mainMenu) mainMenu.checked = true\r\n\t\t\t\t\t\tfor (let i of store.menus) {\r\n\t\t\t\t\t\t\tif (i.name === res.data.tags[0]) {\r\n\t\t\t\t\t\t\t\t//선택된 메인메뉴의 서브메뉴를 그리기\r\n\t\t\t\t\t\t\t\tsetSubMenus(i.subMenus)\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t//포스트바디 가져오기\r\n\t\t\t\t\turl = process.env.REACT_APP_URL + '/posts/postBody/' + postId\r\n\t\t\t\t\t//url = process.env.REACT_APP_LOCAL_URL + '/posts/postBody/' + postId\r\n\t\t\t\t\tAxios.get(url)\r\n\t\t\t\t\t\t.then((res2) => {\r\n\t\t\t\t\t\t\tif (typeof res2.data.body === 'string') quill.setText(res2.data.body)\r\n\t\t\t\t\t\t\t//body가 string이면 setText\r\n\t\t\t\t\t\t\telse quill.setContents(res2.data.body) //body가 string이 아니면 setContents : Delta\r\n\t\t\t\t\t\t\tsetPost({\r\n\t\t\t\t\t\t\t\t...res.data,\r\n\t\t\t\t\t\t\t\tbody: res2.data.body,\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t\t.catch((e) => {\r\n\t\t\t\t\t\t\talert(e)\r\n\t\t\t\t\t\t\tsetReady(true)\r\n\t\t\t\t\t\t}) //실패\r\n\t\t\t\t})\r\n\t\t\t\t.catch((e) => {\r\n\t\t\t\t\talert(e)\r\n\t\t\t\t\tsetReady(true)\r\n\t\t\t\t}) //실패\r\n\t\t}else{\r\n\t\t\tsetReady(true)\r\n\t\t}\r\n\t}, [location, quill, postId, store.menus])\r\n\r\n\tuseEffect(() => {\r\n\t\tif (subMenus && post) {\r\n\t\t\tconst subMenu = document.getElementById(post.tags[1])\r\n\t\t\tif (subMenu) subMenu.checked = true\r\n\t\t}\r\n\t\tconst newSubMenu = document.querySelector('[name=newSubMenu]')\r\n\t\tif (newSubMenu) newSubMenu.value = ''\r\n\t}, [subMenus, post])\r\n\r\n\tuseEffect(() => {\r\n\t\tstore.setReady(false)\r\n\t\tif(post || ready){\r\n\t\t\tstore.setReady(true)\r\n\t\t}\r\n\t})\r\n\r\n\t//글 작성 or 수정\r\n\tconst clickPost = (e) => {\r\n\t\tif (!store.login || (store.login && store.login.username !== 'imki123')) {\r\n\t\t\talert('글 작성은 블로그 주인만 가능합니다 ^^;')\r\n\t\t\treturn\r\n\t\t}\r\n\t\tif (!window.confirm('글을 게시하시겠습니까?')) {\r\n\t\t\treturn\r\n\t\t}\r\n\t\t//제목, 내용, 태그가 있는지 검사\r\n\t\tlet title = document.querySelector('[name=title]')\r\n\t\tconst content = quill.getContents()\r\n\t\tconst text = quill.getText()\r\n\t\tconst mainMenu = document.querySelector('[name=mainMenu]:checked')\r\n\t\tlet tags = []\r\n\t\tconst subMenu = document.querySelector('[name=subMenu]:checked')\r\n\t\tconst newMainMenu = document.querySelector('[name=newMainMenu]')\r\n\t\tconst newSubMenu = document.querySelector('[name=newSubMenu]')\r\n\r\n\t\tif (mainMenu) {\r\n\t\t\ttags[0] = mainMenu.value\r\n\t\t}\r\n\t\tif (newMainMenu.value !== '') {\r\n\t\t\ttags[0] = newMainMenu.value\r\n\t\t}\r\n\t\tif (subMenu) {\r\n\t\t\tif (subMenu.value !== '') tags[1] = subMenu.value //체크 된 서브메뉴 추가\r\n\t\t}\r\n\t\tif (newSubMenu.value !== '') {\r\n\t\t\ttags[1] = newSubMenu.value\r\n\t\t}\r\n\r\n\t\tif (title.value.length === 0) {\r\n\t\t\talert('제목을 입력해주세요.')\r\n\t\t\treturn\r\n\t\t} else if (quill.getLength() === 1) {\r\n\t\t\talert('내용을 입력해주세요.')\r\n\t\t\treturn\r\n\t\t} else if (tags.length < 1 && newMainMenu.value === '') {\r\n\t\t\talert('메인메뉴를 1개 선택해주세요.')\r\n\t\t\treturn\r\n\t\t}\r\n\r\n\t\t//url에 POST 또는 PATCH 요청\r\n\t\tlet url = process.env.REACT_APP_URL + '/posts'\r\n\t\t//url = process.env.REACT_APP_LOCAL_URL + '/posts'\r\n\t\tlet method = 'POST',\r\n\t\t\tmessage = '글 작성 성공'\r\n\t\tif (e.target.id === 'PATCH') {\r\n\t\t\tif (postId !== undefined && Number(postId) >= 1) {\r\n\t\t\t\turl += '/' + postId\r\n\t\t\t\tmethod = 'PATCH'\r\n\t\t\t\tmessage = '글 수정 성공'\r\n\t\t\t} else {\r\n\t\t\t\tconsole.log('postId 비정상, 글 수정 실패')\r\n\t\t\t\treturn\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tAxios(url, {\r\n\t\t\t//포스트 작성, 수정 (최대 10mb. koa-bodyparser에서 설정.)\r\n\t\t\tmethod: method,\r\n\t\t\twithCredentials: true, //CORS\r\n\t\t\tdata: {\r\n\t\t\t\ttitle: title.value,\r\n\t\t\t\tbody: content,\r\n\t\t\t\ttext: text,\r\n\t\t\t\ttags: tags,\r\n\t\t\t},\r\n\t\t})\r\n\t\t\t.then((res) => {\r\n\t\t\t\talert(message) //성공\r\n\t\t\t\tpostId = res.data.postId\r\n\t\t\t\tif (postId > 1) {\r\n\t\t\t\t\thistory.push(`/posts/${postId}`) //수정 성공하면 해당 글로 이동함\r\n\t\t\t\t} else {\r\n\t\t\t\t\thistory.push(`/posts/1`) //인사말은 홈으로 이동\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\t.catch((e) => alert(e)) //실패\r\n\t}\r\n\r\n\t// 화면 리사이즈시 editor 아래 마진 변경\r\n\tuseEffect(() => {\r\n\t\tconst editor = document.querySelector('#editor')\r\n\t\tconst toolbar = document.querySelector('.ql-toolbar')\r\n\t\tif (editor && toolbar) {\r\n\t\t\teditor.style.marginBottom = toolbar.clientHeight + 10 + 'px'\r\n\t\t}\r\n\t\twindow.removeEventListener('resize', function () {})\r\n\t\twindow.addEventListener('resize', function () {\r\n\t\t\tif (editor && toolbar) {\r\n\t\t\t\teditor.style.marginBottom = toolbar.clientHeight + 10 + 'px'\r\n\t\t\t}\r\n\t\t})\r\n\t}, [location])\r\n\r\n\t//메인메뉴 추가시 라디오박스 체크 해제, 띄어쓰기를 _로 변경\r\n\tconst changeMainMenu = (e) => {\r\n\t\tif (store.menus) {\r\n\t\t\tfor (let i of store.menus) {\r\n\t\t\t\tif (i.name === e.target.value) {\r\n\t\t\t\t\tsetSubMenus(i.subMenus)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (e.target.type !== 'radio') {\r\n\t\t\t//인풋박스 입력하면 라디오 체크 해제\r\n\t\t\te.target.value = e.target.value.replace(/\\s/g, '_')\r\n\t\t\tconst mainMenu = document.querySelector('[name=mainMenu]:checked')\r\n\t\t\tif (mainMenu) mainMenu.checked = false\r\n\t\t}\r\n\t}\r\n\t//서브메뉴 추가시 라디오박스 체크 해제, 띄어쓰기를 _로 변경\r\n\tconst changeSubMenu = (e) => {\r\n\t\tif (e.target.type !== 'radio') {\r\n\t\t\t//인풋박스 입력하면 라디오 체크 해제\r\n\t\t\te.target.value = e.target.value.replace(/\\s/g, '_')\r\n\t\t\tconst subMenu = document.querySelector('[name=subMenu]:checked')\r\n\t\t\tif (subMenu) subMenu.checked = false\r\n\t\t} else {\r\n\t\t\tconst newSubMenu = document.querySelector('[name=newSubMenu]')\r\n\t\t\tif (newSubMenu) newSubMenu.value = ''\r\n\t\t}\r\n\t}\r\n\tconst copied = e => {\r\n\t\t//console.log(e.target)\r\n\t\tlet emoji = e.target\r\n\t\temoji.style.background = 'blue'\r\n\t\tsetTimeout(function(){\r\n\t\t\temoji.style.background = 'unset'\r\n\t\t}, 1000)\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className=\"quill\">\r\n\t\t\t<div className=\"quillTitle\">\r\n\t\t\t\t<input name=\"title\" placeholder=\"제목\" />\r\n\t\t\t</div>\r\n\t\t\t<div id=\"editor\">\r\n\t\t\t\t<div ref={quillRef} />\r\n\t\t\t\t<div id=\"tags\">\r\n\t\t\t\t\t<div id=\"tagsTitle\">\r\n\t\t\t\t\t\ttags\r\n\t\t\t\t\t\t{postId !== undefined && Number(postId) >= 1 ? (\r\n\t\t\t\t\t\t\t<button className=\"editorButton no-drag\" onClick={clickPost} id=\"PATCH\">\r\n\t\t\t\t\t\t\t\t글 수정\r\n\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t<button className=\"editorButton no-drag\" onClick={clickPost}>\r\n\t\t\t\t\t\t\t\t새글 작성\r\n\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t<span className=\"Emoji\">\r\n                <CopyToClipboard text={\"😄\"}><span onClick={copied}>😄</span></CopyToClipboard>\r\n                <CopyToClipboard text={\"🤣\"}><span onClick={copied}>🤣</span></CopyToClipboard>\r\n                <CopyToClipboard text={\"🥰\"}><span onClick={copied}>🥰</span></CopyToClipboard>\r\n                <CopyToClipboard text={\"😍\"}><span onClick={copied}>😍</span></CopyToClipboard>\r\n                <CopyToClipboard text={\"😝\"}><span onClick={copied}>😝</span></CopyToClipboard>\r\n                <CopyToClipboard text={\"😭\"}><span onClick={copied}>😭</span></CopyToClipboard>\r\n                <CopyToClipboard text={\"👍\"}><span onClick={copied}>👍</span></CopyToClipboard>\r\n                <CopyToClipboard text={\"🐕\"}><span onClick={copied}>🐕</span></CopyToClipboard>\r\n                <CopyToClipboard text={\"🐈\"}><span onClick={copied}>🐈</span></CopyToClipboard>\r\n                <CopyToClipboard text={\"☀\"}><span onClick={copied}>☀</span></CopyToClipboard>\r\n                <CopyToClipboard text={\"🌙\"}><span onClick={copied}>🌙</span></CopyToClipboard>\r\n                <CopyToClipboard text={\"⭐\"}><span onClick={copied}>⭐</span></CopyToClipboard>\r\n                <CopyToClipboard text={\"☁\"}><span onClick={copied}>☁</span></CopyToClipboard>\r\n                <CopyToClipboard text={\"🌧\"}><span onClick={copied}>🌧</span></CopyToClipboard>\r\n                <CopyToClipboard text={\"💧\"}><span onClick={copied}>💧</span></CopyToClipboard>\r\n                <CopyToClipboard text={\"♥\"}><span onClick={copied}>♥</span></CopyToClipboard>\r\n                <CopyToClipboard text={\"❤\"}><span onClick={copied}>❤</span></CopyToClipboard>\r\n                <CopyToClipboard text={\"💕\"}><span onClick={copied}>💕</span></CopyToClipboard>\r\n              </span>\r\n              <span\r\n                className=\"EmojiLink\"\r\n                onClick={() => {\r\n                  window.open('https://copy.emojiall.com/ko/')\r\n                }}\r\n              >\r\n                [이모지🔗]\r\n              </span>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t메인메뉴:\r\n\t\t\t\t\t\t{store.menus &&\r\n\t\t\t\t\t\t\tstore.menus.map((i) => (\r\n\t\t\t\t\t\t\t\t<label key={i.name}>\r\n\t\t\t\t\t\t\t\t\t<input type=\"radio\" name=\"mainMenu\" value={i.name} id={i.name} onClick={changeMainMenu} />\r\n\t\t\t\t\t\t\t\t\t{i.name}\r\n\t\t\t\t\t\t\t\t</label>\r\n\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t<input name=\"newMainMenu\" placeholder=\"메인메뉴 추가\" onChange={changeMainMenu} autoComplete=\"off\"></input>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t서브메뉴:\r\n\t\t\t\t\t\t<label>\r\n\t\t\t\t\t\t\t<input type=\"radio\" name=\"subMenu\" value=\"\" onClick={changeSubMenu} /> 선택안함\r\n\t\t\t\t\t\t</label>\r\n\t\t\t\t\t\t{subMenus &&\r\n\t\t\t\t\t\t\tsubMenus.map((i) => (\r\n\t\t\t\t\t\t\t\t<label key={i.name}>\r\n\t\t\t\t\t\t\t\t\t<input type=\"radio\" name=\"subMenu\" value={i.name} id={i.name} onClick={changeSubMenu} /> {i.name}\r\n\t\t\t\t\t\t\t\t</label>\r\n\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t<input name=\"newSubMenu\" placeholder=\"서브메뉴 추가\" autoComplete=\"off\" onChange={changeSubMenu}></input>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\nexport default React.memo(Quill)\r\n","import React, { useEffect } from 'react'\r\nimport './Paging.css'\r\nimport { NavLink, useLocation } from 'react-router-dom'\r\nimport queryString from 'query-string'\r\n\r\nfunction Paging(props) {\r\n\tconst { postCount } = props\r\n\tconst location = useLocation()\r\n\tconst search = queryString.parse(location.search)\r\n\tlet paging = null\r\n\tconst pages = []\r\n\tif (postCount) {\r\n\t\tconst page = Number(search.page) || 1\r\n\t\tconst startPost = postCount - (page - 1) * 10\r\n\t\tpaging = {\r\n\t\t\tpage: page,\r\n\t\t\tlastPage: Math.ceil(postCount / 10),\r\n\t\t\tpostCount: postCount,\r\n\t\t\tstartPost: startPost,\r\n\t\t}\r\n\r\n\t\tfor (let i = 0; i < paging.lastPage; i++) {\r\n\t\t\tpages.push(i + 1)\r\n\t\t}\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\t\tconst links = document.querySelectorAll('.paging a')\r\n\t\tfor (let i = 0; i < links.length; i++) {\r\n\t\t\tif (links[i].innerHTML === search.page) {\r\n\t\t\t\tlinks[i].className = 'activePage'\r\n\t\t\t} else {\r\n\t\t\t\tlinks[i].className = 'inactivePage'\r\n\t\t\t}\r\n\t\t\tif (search.page === undefined) {\r\n\t\t\t\t//search에 page가 없으면 1을 activePage로 설정\r\n\t\t\t\tif (links[i].innerHTML === '1') {\r\n\t\t\t\t\tlinks[i].className = 'activePage'\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}, [search, postCount])\r\n\r\n\treturn (\r\n\t\t<div className=\"paging\">\r\n\t\t\t{pages.map((p, idx) => (\r\n\t\t\t\t<NavLink path={location.pathname} to={`${location.pathname}?page=${p}`} className=\"inactivePage\" key={idx}>\r\n\t\t\t\t\t{p}\r\n\t\t\t\t</NavLink>\r\n\t\t\t))}\r\n\t\t</div>\r\n\t)\r\n}\r\nexport default React.memo(Paging)\r\n","import Axios from 'axios'\r\nimport React, { useEffect, useState } from 'react'\r\nimport { AppContext } from '../App'\r\nimport Paging from './Paging'\r\nimport PostList from './PostList'\r\n\r\nimport './Tags.css'\r\n\r\nfunction Tags({ match, location, history }) {\r\n\tconst store = React.useContext(AppContext)\r\n\tconst { tag } = match.params\r\n\tconst [lists, setLists] = useState([])\r\n\tuseEffect(() => {\r\n\t\t\r\n\t\tlet url = process.env.REACT_APP_URL + '/posts/tag/' + tag + location.search\r\n\t\t//url = process.env.REACT_APP_LOCAL_URL + '/posts/tag/' + tag + location.search\r\n\r\n\t\tAxios.get(url, {\r\n\t\t\twithCredentials: true,\r\n\t\t})\r\n\t\t\t.then((res) => {\r\n\t\t\t\tif(res.data.list.length < 1){\r\n\t\t\t\t\talert('찾으시는 페이지가 없습니다.')\r\n\t\t\t\t\thistory.go(-1)\r\n\t\t\t\t}else{\r\n\t\t\t\t\tsetLists(res.data.list)\r\n\t\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\t.catch((e) => console.log(e)) //실패\r\n\t},[tag, location, history])\r\n\t\r\n\tuseEffect(() => {\r\n\t\tstore.setReady(false)\r\n\t\tif(lists){\r\n\t\t\tstore.setReady(true)\r\n\t\t}\r\n\t})\r\n\r\n\treturn (\r\n\t\t<div className=\"postListWrapper\">\r\n\t\t\t<div className=\"postListTitle\">{tag.substring(0,1).toUpperCase() + tag.substring(1)}</div>\r\n\t\t\t{lists && lists.map((i, idx) => <PostList no={lists.length - idx} list={i} key={i.postId} />)}\r\n\t\t\t{<Paging postCount={lists.length} />}\r\n\t\t</div>\r\n\t)\r\n}\r\nexport default React.memo(Tags)\r\n","import React, { useEffect } from 'react'\r\nimport AddCircleOutlineIcon from '@material-ui/icons/AddCircleOutline'\r\nimport ArrowUpwardIcon from '@material-ui/icons/ArrowUpward'\r\nimport './Content.css'\r\nimport { Link, Route, useLocation, Switch } from 'react-router-dom'\r\nimport { AppContext } from '../App'\r\n\r\nimport Post from './Post'\r\nimport NotFoundPage from './NotFoundPage'\r\nimport Login from './Login'\r\nimport Quill from './Quill'\r\nimport Tags from './Tags'\r\nimport CommentLists from './CommentLists'\r\n\r\nfunction Content(props) {\r\n\tconst store = React.useContext(AppContext)\r\n\tconst location = useLocation() //hash 사용\r\n\r\n\tuseEffect(() => {\r\n\t\tconst resize = () => {\r\n\t\t\tstore.resizeTextarea()\r\n\t\t}\r\n\r\n\t\twindow.addEventListener('resize', resize)\r\n\t\tconst loading = document.querySelector('#loading')\r\n\t\tconst views = document.querySelectorAll('.post')\r\n\t\tif (store.ready) {\r\n\t\t\tif (loading) loading.style.display = 'none'\r\n\t\t\tif (views) {\r\n\t\t\t\tfor(let i of views){\r\n\t\t\t\t\ti.style.display = 'block'\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tsetTimeout(function () {\r\n\t\t\t\tstore.resizeTextarea()\r\n\t\t\t}, 10)\r\n\t\t} else {\r\n\t\t\tif (loading) loading.style.display = 'flex'\r\n\t\t\tif (views) {\r\n\t\t\t\tfor(let i of views){\r\n\t\t\t\t\ti.style.display = 'none'\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn window.removeEventListener('resize', resize)\r\n\t}, [location.hash, store])\r\n\r\n\tconst scrollUp = (e) => {\r\n\t\t// content의 스크롤을 가장 위로\r\n\t\tconst content = document.querySelector('#content')\r\n\t\tlet contentScroll = content.scrollTop\r\n\t\tlet dif = contentScroll / 50\r\n\t\tconst frame = setInterval(function () {\r\n\t\t\tif (content.scrollTop <= 0) {\r\n\t\t\t\tclearInterval(frame)\r\n\t\t\t} else {\r\n\t\t\t\tcontent.scrollTop -= dif\r\n\t\t\t}\r\n\t\t}, 10)\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div id=\"content\" className=\"slideMenu\">\r\n\t\t\t{/* FAB */}\r\n\t\t\t{store.login && store.login.username === 'imki123' && (\r\n\t\t\t\t<Link id=\"postFAB\" className=\"hover\" to=\"/quill\">\r\n\t\t\t\t\t<AddCircleOutlineIcon />\r\n\t\t\t\t</Link>\r\n\t\t\t)}\r\n\t\t\t<div id=\"scrollFAB\" className=\"hover\" onClick={scrollUp}>\r\n\t\t\t\t<ArrowUpwardIcon />\r\n\t\t\t</div>\r\n\t\t\t<div id=\"menuFAB\" className=\"hover\" onClick={store.slideMenu}>\r\n\t\t\t\t<img alt=\"MENU\" src={process.env.PUBLIC_URL + '/images/guide_icon.png'} />\r\n\t\t\t</div>\r\n\r\n\t\t\t{/* 로딩 */}\r\n\t\t\t<div id=\"loading\">\r\n\t\t\t\t<img alt=\"Loading\" src={process.env.PUBLIC_URL + '/images/loading.gif'} />\r\n\t\t\t</div>\r\n\r\n\t\t\t<Switch>\r\n\t\t\t\t<Route path={['/login', '/register', '/loginStatus', '/withdraw']} component={Login} />\r\n\t\t\t\t<Route path=\"/quill/:postId?\" component={Quill} />\r\n\t\t\t\t<Route path=\"/tags/:tag\" component={Tags} />\r\n\t\t\t\t<Route path=\"/comments\" component={CommentLists} />\r\n\t\t\t\t<Route path=\"/\" exact component={Post} />\r\n\t\t\t\t<Route path=\"/posts/:postId\" component={Post} />\r\n\t\t\t\t<Route path=\"/NotFoundPage\" component={NotFoundPage} />\r\n\t\t\t\t<Route path=\"*\" component={NotFoundPage} />\r\n\t\t\t</Switch>\r\n\r\n\t\t\t{/* 텍스트 에어리어 높이 조정을 위한 안보이는 가짜 텍스트에어리어 */}\r\n\t\t\t<textarea disabled id=\"fakeTextarea\" />\r\n\t\t</div>\r\n\t)\r\n}\r\nexport default React.memo(Content)\r\n","import React from 'react'\r\nimport './Setting.css'\r\nimport { Link } from 'react-router-dom'\r\nimport { AppContext } from '../App'\r\nimport { GoogleLogout } from 'react-google-login'\r\n\r\nfunction Setting(props) {\r\n\tconst store = React.useContext(AppContext)\r\n\tconst href = window.location.href\r\n\tlet clientId\r\n\tif (href.indexOf('localhost') > -1) {\r\n\t\t//로컬\r\n\t\tclientId = '605411712139-7nr29rfs5ihfu9uoev3igr5hpf4ubkle.apps.googleusercontent.com'\r\n\t} else {\r\n\t\t//서버\r\n\t\tclientId = '605411712139-eb3qqicskmkal2i9u26ppdhoq2jt0bd8.apps.googleusercontent.com'\r\n\t}\r\n\r\n\tconst closeSetting = (e) => {\r\n\t\tconst settingWrapper = document.querySelector('#settingWrapper')\r\n\t\te.stopPropagation()\r\n\t\tsetTimeout(function () {\r\n\t\t\tsettingWrapper.style.display = 'none'\r\n\t\t}, 200)\r\n\t}\r\n\r\n\tconst logout = (e) => {\r\n\t\tif (window.confirm('로그아웃 하시겠습니까?')) {\r\n\t\t\tlet url = process.env.REACT_APP_URL + '/auth/logout'\r\n\t\t\t//url = process.env.REACT_APP_LOCAL_URL + '/auth/logout'\r\n\r\n\t\t\tfetch(url, {\r\n\t\t\t\tmode: 'cors',\r\n\t\t\t\tmethod: 'POST',\r\n\t\t\t\tcredentials: 'include',\r\n\t\t\t})\r\n\t\t\t\t.then((res) => {\r\n\t\t\t\t\tif (res.status === 204) {\r\n\t\t\t\t\t\t//로그아웃 하면 204\r\n\t\t\t\t\t\tconsole.log('로그아웃 성공')\r\n\t\t\t\t\t\tstore.setLogin(false)\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t//유저정보 지우기\r\n\t\t\t\t\t\tconst userinfo = document.querySelector('#userinfo')\r\n\t\t\t\t\t\tif (userinfo) userinfo.value = ''\r\n\r\n\t\t\t\t\t\t//네이버 로그아웃\r\n\t\t\t\t\t\tconst naverIdLogout = document.querySelector('#naverIdLogout')\r\n\t\t\t\t\t\tif (naverIdLogout) naverIdLogout.click()\r\n\r\n\t\t\t\t\t\t//카카오 로그아웃\r\n\t\t\t\t\t\tconst kakaoLogout = document.querySelector('#kakaoLogout')\r\n\t\t\t\t\t\tif (kakaoLogout) kakaoLogout.click()\r\n\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tconsole.log('로그아웃 실패')\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t\t.catch((e) => console.error(e))\r\n\t\t}\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div id=\"settingWrapper\" onClick={closeSetting}>\r\n\t\t\t<div id=\"setting\">\r\n\t\t\t\t<div id=\"settingListWrapper\">\r\n\t\t\t\t\t{store.login ? (\r\n\t\t\t\t\t\t<Link className=\"settingList\" to=\"/loginStatus\">\r\n\t\t\t\t\t\t\t{store.login.username}\r\n\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t) : (\r\n\t\t\t\t\t\t<Link className=\"settingList\" to=\"/login\">\r\n\t\t\t\t\t\t\t로그인\r\n\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t)}\r\n\t\t\t\t\t{store.login && (\r\n\t\t\t\t\t\t<div onClick={logout}>\r\n\t\t\t\t\t\t\t<GoogleLogout\r\n\t\t\t\t\t\t\t\ticon={false}\r\n\t\t\t\t\t\t\t\tbuttonText=\"로그아웃\"\r\n\t\t\t\t\t\t\t\tclassName=\"settingList googleLogout\"\r\n\t\t\t\t\t\t\t\tclientId={clientId}\r\n\t\t\t\t\t\t\t\tonSuccess={(res) => {\r\n\t\t\t\t\t\t\t\t\tconsole.log('logout')\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\tonFailure={(res) => {\r\n\t\t\t\t\t\t\t\t\tconsole.log(res)\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\tcookiePolicy={'single_host_origin'}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t)}\r\n\t\t\t\t\t{!store.login && (\r\n\t\t\t\t\t\t<Link className=\"settingList\" to=\"/register\">\r\n\t\t\t\t\t\t\t회원가입\r\n\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t)}\r\n\t\t\t\t\t{store.login && !store.login.oAuth && (\r\n\t\t\t\t\t\t<Link className=\"settingList\" to=\"/withdraw\">\r\n\t\t\t\t\t\t\t회원탈퇴\r\n\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\nexport default React.memo(Setting)\r\n","import React, { createContext, useEffect, useState } from 'react'\r\nimport './App.css'\r\nimport { useLocation } from 'react-router-dom'\r\n\r\nimport Header from './components/Header'\r\nimport Body from './components/Body'\r\nimport Guide from './components/Guide'\r\nimport Content from './components/Content'\r\nimport Setting from './components/Setting'\r\nimport Axios from 'axios'\r\nimport Meta from './components/Meta'\r\n\r\nconst AppContext = createContext()\r\n\r\nfunction App() {\r\n\tconst location = useLocation() //페이지 경로 변경 감지\r\n\tconst [ready, setReady] = useState(false)\r\n\tconst [login, setLogin] = useState(false)\r\n\tconst [menus, setMenus] = useState([\r\n\t\t{ name: 'home', count: 1, order: 1 },\r\n\t\t{ name: 'programming', order: 2 },\r\n\t\t{ name: 'article', order: 3 },\r\n\t])\r\n\r\n\tconst resizeTextarea = (e) => {\r\n\t\t//텍스트에어리어를 찾아서 크기를 글자 높이에 맞게 변경하기\r\n\t\t//textarea 높이 조정\r\n\t\tconst fake = document.querySelector('#fakeTextarea')\r\n\t\tlet textareas = []\r\n\t\tif (e && e.target) {\r\n\t\t\ttextareas.push(e.target)\r\n\t\t} else {\r\n\t\t\ttextareas = document.querySelectorAll('textarea')\r\n\t\t}\r\n\r\n\t\tif (textareas && fake) {\r\n\t\t\tfor (let i = 0; i < textareas.length; i++) {\r\n\t\t\t\tfake.style.height = '1px'\r\n\t\t\t\tfake.style.width = textareas[i].clientWidth + 'px'\r\n\t\t\t\tfake.value = textareas[i].value\r\n\t\t\t\ttextareas[i].style.height = 5 + fake.scrollHeight + 'px'\r\n\t\t\t}\r\n\t\t\tfake.value = ''\r\n\t\t\tfake.style.height = '0px'\r\n\t\t}\r\n\t}\r\n\r\n\tconst slideMenu = () => {\r\n\t\t//메뉴버튼 클릭 시 메뉴 보이기 & 숨기기\r\n\t\tconst body = document.querySelector('#body')\r\n\t\tconst guideWrapper = document.querySelector('#guideWrapper')\r\n\t\tconst content = document.querySelector('#content')\r\n\r\n\t\tif (!guideWrapper.style.left) {\r\n\t\t\t//스타일 속성이 없으면 초기값 지정\r\n\t\t\tif (body.clientWidth < 500) {\r\n\t\t\t\tguideWrapper.style.left = '-312px' //모바일\r\n\t\t\t} else {\r\n\t\t\t\tguideWrapper.style.left = '0px' //PC\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (guideWrapper.style.left && guideWrapper.style.left.replace('px', '') > -100) {\r\n\t\t\t//메뉴 닫기\r\n\t\t\tguideWrapper.parentNode.style.width = '0' // 회색 0\r\n\t\t\tcontent.style.width = 'calc(100% - 16px)' //콘텐트 100% - 16px\r\n\t\t\tguideWrapper.style.left = '-312px' // 메뉴 왼쪽으로\r\n\t\t} else {\r\n\t\t\t//메뉴 열기\r\n\t\t\tguideWrapper.style.left = '0px' // 메뉴 0\r\n\t\t\tif (body.clientWidth < 500) {\r\n\t\t\t\t//모바일\r\n\t\t\t\tguideWrapper.parentNode.style.width = '100%' // 회색 100%\r\n\t\t\t} else {\r\n\t\t\t\t//PC\r\n\t\t\t\tcontent.style.width = `calc(100% - 312px - 16px)`\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t//모바일에서 회색부분 클릭 시 메뉴 닫기\r\n\tconst closeMenuMobile = (e) => {\r\n\t\tconst body = document.querySelector('#body')\r\n\t\tconst guideWrapper = document.querySelector('#guideWrapper')\r\n\t\tconst content = document.querySelector('#content')\r\n\r\n\t\tguideWrapper.parentNode.style.width = '0' // 회색 0\r\n\t\tif (body.clientWidth < 500) {\r\n\t\t\t//모바일\r\n\t\t\tguideWrapper.style.left = '-312px' // 메뉴 0\r\n\t\t\tcontent.style.width = 'calc(100% - 16px)'\r\n\t\t} else {\r\n\t\t\tcontent.style.width = 'calc(100% - 312px - 16px)'\r\n\t\t}\r\n\t}\r\n\tconst checkToken = (func) => {\r\n\t\t//로그인 되어있는지 토큰 체크하기\r\n\t\tlet url = process.env.REACT_APP_URL + '/auth/check'\r\n\t\t//url = process.env.REACT_APP_LOCAL_URL+'/auth/check'\r\n\t\tAxios.get(url, { withCredentials: true })\r\n\t\t\t.then((res) => {\r\n\t\t\t\tif (res.data) {\r\n\t\t\t\t\t//console.log('토큰 체크 성공')\r\n\t\t\t\t\tsetLogin(res.data)\r\n\t\t\t\t} else {\r\n\t\t\t\t\t//console.log('토큰 없음') //res.status===204(No Content)\r\n\t\t\t\t\tsetLogin(false)\r\n\t\t\t\t}\r\n\t\t\t\tif (func) func()\r\n\t\t\t})\r\n\t\t\t.catch((e) => {\r\n\t\t\t\t//실패\r\n\t\t\t\tif (func) func()\r\n\t\t\t})\r\n\t}\r\n\r\n\t//useContext 이용하여 하위 컴포넌트에 상태 전달\r\n\tconst store = {\r\n\t\tready,\r\n\t\tsetReady,\r\n\t\tlogin,\r\n\t\tsetLogin,\r\n\t\tmenus,\r\n\t\tsetMenus,\r\n\t\tresizeTextarea,\r\n\t\tslideMenu,\r\n\t\tcloseMenuMobile,\r\n\t\tcheckToken,\r\n\t}\r\n\r\n\t// 포스트에서 태그 정보를 가져와서 메뉴에 표시함, Quill의 태그목록에 표시\r\n\tuseEffect(() => {\r\n\t\tlet url = process.env.REACT_APP_URL + '/menus'\r\n\t\t//url = process.env.REACT_APP_LOCAL_URL+'/menus'\r\n\r\n\t\tAxios.get(url, {\r\n\t\t\twithCredentials: true,\r\n\t\t}) //메뉴 태그 가져오기\r\n\t\t\t.then((res) => {\r\n\t\t\t\tsetMenus(res.data)\r\n\t\t\t})\r\n\t\t\t.catch((e) => console.log(e)) //실패\r\n\r\n\t\t//페이지 이동할 때 activeListManual 스타일을 모두 지움\r\n\t\tconst tags = document.querySelectorAll('.activeListManual')\r\n\t\tif(tags){\r\n\t\t\tfor(let i of tags){\r\n\t\t\t\ti.classList.remove('activeListManual')\r\n\t\t\t}\r\n\t\t}\r\n\t}, [location.pathname])\r\n\r\n\t//주소 변경될 때, 토큰 체크하고 포스트 조회하기\r\n\tuseEffect(() => {\r\n\t\tcheckToken()\r\n\t}, [location.pathname, location.search])\r\n\r\n\treturn (\r\n\t\t<AppContext.Provider value={store}>\r\n\t\t\t<div id=\"app\">\r\n\t\t\t\t<Meta\r\n\t\t\t\t\tdata={{\r\n\t\t\t\t\t\ttitle: '임기의 코딩 블로그 😄',\r\n\t\t\t\t\t\tdescription: 'imki123의 임기의 코딩 블로그입니다 😄',\r\n\t\t\t\t\t\timage: process.env.PUBLIC_URL + '/images/imcat_800x400.png',\r\n\t\t\t\t\t}}\r\n\t\t\t\t/>\r\n\t\t\t\t<Header />\r\n\t\t\t\t<Setting />\r\n\t\t\t\t<Body>\r\n\t\t\t\t\t<Guide />\r\n\t\t\t\t\t<Content />\r\n\t\t\t\t</Body>\r\n\t\t\t</div>\r\n\t\t</AppContext.Provider>\r\n\t)\r\n}\r\nexport { AppContext }\r\nexport default React.memo(App)\r\n","import React from 'react'\r\nimport ReactDOM, { hydrate } from 'react-dom'\r\nimport { BrowserRouter } from 'react-router-dom'\r\nimport App from './App'\r\n\r\nconst rootElement = document.getElementById('root')\r\n\r\nif (rootElement.hasChildNodes()) {\r\n\thydrate(\r\n\t\t<BrowserRouter basename={process.env.PUBLIC_URL}>\r\n\t\t\t<App />\r\n\t\t</BrowserRouter>,\r\n\t\trootElement,\r\n\t)\r\n} else {\r\n\tReactDOM.render(\r\n\t\t<BrowserRouter basename={process.env.PUBLIC_URL}>\r\n\t\t\t<App />\r\n\t\t</BrowserRouter>,\r\n\t\tdocument.getElementById('root'),\r\n\t)\r\n}\r\n"],"sourceRoot":""}