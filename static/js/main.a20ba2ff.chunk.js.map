{"version":3,"sources":["components/Header.js","components/Body.js","components/Menu.js","components/Guide.js","components/Comment.js","components/Meta.js","components/Post.js","components/NotFoundPage.js","components/Login.js","components/Quill.js","components/Paging.js","components/PostList.js","components/Tags.js","components/Content.js","components/Setting.js","App.js","index.js"],"names":["React","memo","props","store","useContext","AppContext","id","className","onClick","slideMenu","alt","src","to","setting","document","querySelector","style","display","login","username","Math","floor","random","children","menu","subMenu","keys","Object","i","sort","push","exact","name","activeClassName","substring","toUpperCase","cnt","length","map","key","useState","newMenu","setNewMenu","useEffect","mainMenu","mainMenus","refresh","e","body","guideWrapper","content","clientWidth","parentNode","width","left","title","href","home","programming","article","comment","post","refreshComment","update","date","publishedDate","replace","postId","commentId","value","fontWeight","updated","readOnly","onChange","resizeTextarea","textarea","window","confirm","classList","remove","url","process","Axios","patch","withCredentials","data","then","res","console","log","catch","alert","add","focus","background","locales","en","ko","Meta","lang","locale","description","image","undefined","canonical","type","height","Helmet","titleTemplate","rel","itemprop","property","hreflang","match","params","setPost","ps","setPs","comments","setComments","commentCnt","setCommentCnt","location","useLocation","history","useHistory","useQuill","modules","syntax","formats","quill","quillRef","setReady","pathname","get","go","split","setContents","func","svg","target","discription","text","tags","idx","p","ref","delete","placeholder","browser","agent","navigator","userAgent","toLowerCase","indexOf","checkUsername","setCheckUsername","checkPassword","setCheckPassword","checkPasswordConfirm","setCheckPasswordConfirm","buttonName","setButtonName","clickButton","preventDefault","password","fetch","mode","method","credentials","headers","JSON","stringify","status","json","message","error","setLogin","path","passwordConfirm","autoComplete","fontSize","textAlign","color","toolbar","size","header","align","indent","list","tempMenu","Number","setText","querySelectorAll","checked","tag","clickPost","getContents","getText","checkBoxs","newMainMenu","getLength","editor","marginBottom","clientHeight","removeEventListener","addEventListener","subMenus","postCount","search","queryString","parse","paging","pages","page","startPost","lastPage","ceil","links","innerHTML","no","lists","setLists","resize","loading","ready","hash","setTimeout","elem","contentScroll","scrollTop","elemTop","offsetTop","dif","frame","setInterval","scrollHeight","clearInterval","component","Quill","Tags","Post","NotFoundPage","disabled","settingWrapper","stopPropagation","createContext","posts","setPosts","setHeaders","setRefresh","setMainMenus","setSubMenus","checkToken","fake","textareas","scroll","Provider","rootElement","getElementById","hasChildNodes","hydrate","StrictMode","ReactDOM","render","basename"],"mappings":"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","file":"static/js/main.a20ba2ff.chunk.js","sourcesContent":["import React from 'react'\r\nimport './Header.css'\r\nimport { Link } from 'react-router-dom';\r\nimport { AppContext } from '../App'\r\n\r\nfunction Header(props) {\r\n    const store = React.useContext(AppContext) \r\n\r\n    const toggleSetting = () => {\r\n        const setting = document.querySelector('#settingWrapper')\r\n        if(setting){\r\n            if(setting.style.display === 'block'){\r\n                setting.style.display = 'none'\r\n            }else{\r\n                setting.style.display = 'block'\r\n            } \r\n        }\r\n    }\r\n\r\n\treturn(\r\n        <div id=\"headerWrapper\">\r\n            <div id=\"header\">\r\n                <div className=\"hover\" onClick={store.slideMenu}>\r\n                    <img id=\"menu\" alt=\"MENU\" src={process.env.PUBLIC_URL+'/images/guide_icon.png'}/>\r\n                </div>\r\n                <Link to=\"/\"> \r\n                    <div id=\"title\" className=\"hover\">\r\n                        <img id=\"logo\" alt=\"logo\" src={process.env.PUBLIC_URL+'/images/GitHub-Mark-32px.png'}/> \r\n                        행복한 코딩 블로그 :D\r\n                    </div>\r\n                </Link>\r\n                <div className=\"hover\"  onClick={toggleSetting}>\r\n                {!store.login ? \r\n                    <img className=\"profile\" alt=\"PROFILE\" src={process.env.PUBLIC_URL+'/images/noavatar.png'}/> :\r\n                    store.login.username === 'imki123' ?\r\n                        <img className=\"profile\" alt=\"PROFILE\" src={process.env.PUBLIC_URL+'/images/avatar_small.png'}/> :\r\n                        <img className=\"profile\" alt=\"PROFILE\" \r\n                            src={process.env.PUBLIC_URL+'/images/dog'+(Math.floor(Math.random() * (3 - 1 + 1)) + 1)+'.png'}/>}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    ) \r\n}\r\nexport default React.memo(Header)\r\n","import React from 'react'\r\nimport './Body.css'\r\n\r\nfunction Body(props) {\r\n\treturn(\r\n        <div id=\"body\">\r\n            {props.children}\r\n        </div>\r\n    ) \r\n}\r\nexport default React.memo(Body)\r\n","import React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\nimport './Menu.css'\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\n\r\nfunction Menu(props) {\r\n    const {menu} = props\r\n    const subMenu = []\r\n    if(menu){\r\n        const keys = Object.keys(menu)\r\n        keys.sort()\r\n        for(let i in keys){\r\n            if(keys[i] !== 'cnt' && keys[i] !== 'name'){\r\n                subMenu.push(menu[keys[i]])\r\n            }\r\n        }\r\n    }\r\n\r\n    //menu정보를 받아서 링크 메뉴 생성하기\r\n    //menu { name: string, cnt: number, Object{ name: string, cnt: number}, Object{...}}\r\n\treturn(\r\n        <>\r\n            {menu && \r\n            <NavLink exact to={menu.name === 'home' ? '/' : `/tags/${menu.name}`} className=\"list\" activeClassName=\"activeList\">\r\n                <span className=\"menuName\">{menu.name.substring(0,1).toUpperCase()+menu.name.substring(1)}</span>\r\n                <span className=\"menuOptions\">\r\n                    <span className=\"menuCnt\">{menu.cnt}</span>\r\n                    <span className=\"menuExpandIcon\">{Object.keys(menu).length > 2 && <ExpandMoreIcon/>}</span>\r\n                </span>\r\n            </NavLink>}\r\n            {subMenu.length > 0 && subMenu.map(i => \r\n                <NavLink exact to={`/tags/${i.name}`} className=\"list subList\" activeClassName=\"activeList\" key={i.name}>\r\n                    <span className=\"menuName\">{i.name.substring(0,1).toUpperCase()+i.name.substring(1)}</span>\r\n                    <span className=\"menuOptions\">\r\n                        <span className=\"menuCnt\">{i.cnt}</span>\r\n                    </span>\r\n                </NavLink>\r\n            )}\r\n        </>\r\n    ) \r\n}\r\nexport default React.memo(Menu)\r\n","import React, { useEffect, useState } from 'react'\r\nimport './Guide.css'\r\nimport Menu from './Menu'\r\nimport { AppContext } from '../App'\r\n\r\nfunction Guide(props) {\r\n    const store = React.useContext(AppContext)\r\n    const [newMenu, setNewMenu] = useState([])\r\n    useEffect(() => {\r\n        const mainMenu = []\r\n        for(let i in store.mainMenus){\r\n            if(store.mainMenus[i].name !== 'home' \r\n            && store.mainMenus[i].name !== 'programming' \r\n            && store.mainMenus[i].name !== 'article')\r\n            {\r\n                mainMenu.push(store.mainMenus[i])\r\n            }\r\n        }\r\n        setNewMenu(mainMenu)\r\n    },[store.mainMenus, store.refresh])\r\n    \r\n\r\n    //모바일에서 회색부분 클릭 시 메뉴 닫기\r\n    const closeMenuMobile = e => {\r\n        const body = document.querySelector('#body')\r\n        const guideWrapper = document.querySelector('#guideWrapper')\r\n        const content = document.querySelector('#content')\r\n\r\n        if(body.clientWidth < 500){ //모바일\r\n            guideWrapper.parentNode.style.width = '0' // 회색 0\r\n            guideWrapper.style.left = '-230px' // 메뉴 0\r\n            content.style.width = 'calc(100% - 16px)'\r\n        }\r\n    }\r\n\r\n\treturn(\r\n        <div id=\"guideBack\" onClick={closeMenuMobile}>\r\n            <div id=\"guideWrapper\" className=\"slideMenu\">\r\n                <div id=\"avatar\">\r\n                    <img alt=\"avatar\" src={process.env.PUBLIC_URL+'/images/avatar.png'} title='Hello :D'/>\r\n                    <div id=\"name\">Im kiyoung</div>\r\n                    <div id=\"nickName\">imki123</div>\r\n                    <div id=\"github\">\r\n                        <a href=\"https://github.com/imki123\">\r\n                            <img alt=\"github\" src={process.env.PUBLIC_URL+'/images/GitHub-Mark-32px.png'}\r\n                            /> <span>https://github.com/imki123</span>\r\n                        </a>\r\n                    </div>\r\n                    <div id=\"introduction\">\r\n                        A web programmer who dreams of being a wise developer.\r\n                    </div>\r\n                </div>\r\n                <div id=\"menus\">\r\n                    <Menu menu={store.mainMenus.home}/>\r\n                    <Menu menu={store.mainMenus.programming}/>\r\n                    <Menu menu={store.mainMenus.article}/>\r\n                    {newMenu.map(i => <Menu menu={i} key={i}/>)}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    ) \r\n}\r\nexport default React.memo(Guide)\r\n","import React, { useEffect } from 'react'\r\nimport './Comment.css'\r\nimport { AppContext } from '../App'\r\nimport Axios from 'axios'\r\n\r\nfunction Comment(props) {\r\n    const store = React.useContext(AppContext)\r\n    const {comment, post, refreshComment} = props\r\n    let update = false\r\n    let date = comment.publishedDate.substring(0,16).replace('T',' ')\r\n    useEffect(() => {\r\n        const textarea = document.querySelector(`#comment_${post.postId}_${comment.commentId} textarea`)\r\n        textarea.value = comment.content\r\n    },[comment, post])\r\n\r\n    const updateComment = e => { //댓글 수정\r\n        const textarea = document.querySelector(`#comment_${post.postId}_${comment.commentId} textarea`)\r\n        if(!update){\r\n            update = true\r\n            textarea.classList.add('updateMode')\r\n            textarea.readOnly = false\r\n            textarea.focus()\r\n        }else if(window.confirm('댓글을 수정하시겠습니까?')){\r\n            update = false\r\n            textarea.classList.remove('updateMode')\r\n            textarea.readOnly = true\r\n            \r\n            let url = process.env.REACT_APP_URL+`/comments/${post.postId}/${comment.commentId}`\r\n            //url = process.env.REACT_APP_LOCAL_URL+`/comments/${post.postId}/${comment.commentId}`\r\n\r\n            Axios.patch(url, { //댓글 수정\r\n                withCredentials: true, //CORS\r\n                data: {\r\n                    content: textarea.value,\r\n                }\r\n            })\r\n            .then(res => {\r\n                console.log(`${comment.commentId}번 댓글 수정 성공`)\r\n                refreshComment() //포스트 다시 불러오기\r\n            })\r\n            .catch(e => alert(e)) //실패\r\n        }\r\n    }\r\n\r\n    const deleteComment = e => {\r\n        if(window.confirm('삭제 후에는 복구가 불가합니다. 정말로 댓글을 삭제하시겠습니까?')){\r\n            let url = process.env.REACT_APP_URL+`/comments/delete/${post.postId}/${comment.commentId}`\r\n            //url = process.env.REACT_APP_LOCAL_URL+`/comments/delete/${post.postId}/${comment.commentId}`\r\n\r\n            Axios.patch(url, { //포스트 삭제\r\n                withCredentials: true, //CORS\r\n            })\r\n            .then(res => {\r\n                console.log(`${comment.commentId}번 댓글 삭제 성공`)\r\n                refreshComment() //포스트 다시 불러오기\r\n            })\r\n            .catch(e => alert(e)) //실패\r\n        }\r\n    }\r\n\r\n\treturn(\r\n    <div className=\"commentWrapper\" id={`comment_${post.postId}_${comment.commentId}`}>\r\n        <div className=\"comment\">\r\n            <div className=\"commentProfile\">\r\n                {!comment.username ? \r\n                <img alt=\"PROFILE\" src={process.env.PUBLIC_URL+'/images/noavatar.png'}/> :\r\n                    comment.username === 'imki123' ?\r\n                        <img alt=\"PROFILE\" src={process.env.PUBLIC_URL+'/images/avatar_small.png'}/> :\r\n                        <img alt=\"PROFILE\" \r\n                            src={process.env.PUBLIC_URL+'/images/dog'+(Math.floor(Math.random() * (3 - 1 + 1)) + 1)+'.png'}/>}\r\n            </div>\r\n            <div className=\"commentContent\">\r\n                {comment.username === store.login.username \r\n                ? <span className=\"commentUsername\" style={{fontWeight:'bold'}}>{comment.username}</span>\r\n                : <span className=\"commentUsername\">{comment.username}</span>}\r\n                <span className=\"commentDate\"> - {date} {comment.updated && '(수정됨)'}</span>\r\n                <textarea readOnly onChange={store.resizeTextarea}/>\r\n            </div>\r\n        </div>\r\n        {((comment.username && comment.username === store.login.username) \r\n            || store.login.username === 'imki123')&&\r\n        <div className=\"commentButtons\">\r\n            <button className=\"commentButton\" onClick={updateComment}>수정</button>\r\n            <button className=\"commentButton\" style={{background:'red'}} onClick={deleteComment}>삭제</button>\r\n        </div>}\r\n    </div>\r\n    ) \r\n}\r\nexport default React.memo(Comment)\r\n","// components/Meta\r\n/* eslint-disable no-undefined */\r\nimport React from 'react'\r\nimport { Helmet } from 'react-helmet'\r\n\r\nconst locales = {\r\n\ten: 'en_US',\r\n\tko: 'ko_KR',\r\n}\r\n\r\nconst Meta = ({ data }) => {\r\n\tconst lang = locales[data.locale] || locales['en']\r\n\tconst title = data.title\r\n\tconst description = data.description\r\n\tconst image = data.image !== undefined && `${data.image}`\r\n\tconst canonical = `https://imki123.github.io/${data.canonical}`\r\n\tconst type = data.type === undefined ? 'website' : data.type\r\n\tconst width = data.image && (data.width || 1200)\r\n\tconst height = data.image && (data.height || 630)\r\n\r\n\treturn (\r\n\t\t<Helmet titleTemplate=\"%s\">\r\n\t\t\t<html lang={lang} />\r\n\t\t\t<title>{title}</title>\r\n\t\t\t<meta name=\"description\" content={description} />\r\n\t\t\t{canonical ? <link rel=\"canonical\" href={canonical} /> : null}\r\n\t\t\t{image ? <link rel=\"image_src\" href={image} /> : null}\r\n\t\t\t{image ? <meta itemprop=\"image\" content={image} /> : null}\r\n\r\n\t\t\t<meta property=\"og:site_name\" content=\"YOUR WEB SITE\" />\r\n\t\t\t<meta property=\"og:title\" content={title} />\r\n\t\t\t{description ? <meta property=\"og:description\" content={description} /> : null}\r\n\t\t\t{canonical ? <meta property=\"og:url\" content={canonical} /> : null}\r\n\t\t\t<meta property=\"og:locale\" content={locales[lang]} />\r\n\t\t\t<meta property=\"og:type\" content={type} />\r\n\t\t\t{image ? <meta property=\"og:image\" content={image} /> : null}\r\n\t\t\t{width ? <meta property=\"og:image:width\" content={width} /> : null}\r\n\t\t\t{height ? <meta property=\"og:image:height\" content={height} /> : null}\r\n\t\t\t<meta property=\"fb:pages\" content=\"YOUR WEB SITE\" />\r\n\r\n\t\t\t{/* change type of twitter if there is no image? */}\r\n\t\t\t<meta name=\"twitter:card\" content=\"summary_large_image\" />\r\n\t\t\t<meta name=\"twitter:title\" content={title} />\r\n\t\t\t{description ? <meta name=\"twitter:description\" content={description} /> : null}\r\n\t\t\t{image ? <meta name=\"twitter:image\" content={image} /> : null}\r\n\t\t\t<meta name=\"twitter:site\" content=\"@YOURWEBSITE\" />\r\n\t\t\t{canonical ? <link rel=\"alternate\" href={data.canonical} hreflang={lang} /> : null}\r\n\t\t</Helmet>\r\n\t)\r\n}\r\n\r\nexport default Meta","import React, { useEffect, useState } from 'react'\r\nimport './Post.css'\r\nimport { Link, useHistory, useLocation } from 'react-router-dom'\r\nimport { useQuill } from 'react-quilljs'\r\nimport Comment from './Comment'\r\nimport { AppContext } from '../App'\r\nimport RefreshIcon from '@material-ui/icons/Refresh'\r\nimport Axios from 'axios'\r\nimport Meta from './Meta';\r\n\r\nfunction Post({ match }) {\r\n\tconst store = React.useContext(AppContext)\r\n\tconst { postId } = match.params\r\n\tconst [post, setPost] = useState(false)\r\n\tconst [ps, setPs] = useState([])\r\n\tconst [comments, setComments] = useState([])\r\n\tconst [commentCnt, setCommentCnt] = useState(3)\r\n\r\n\tconst location = useLocation()\r\n\tconst history = useHistory()\r\n\r\n\tconst modules = { syntax: true }\r\n\tconst formats = ['bold', 'italic', 'underline', 'strike', 'code-block', 'blockquote', 'size', 'header', 'align', 'color', 'background', 'indent', 'list', 'link', 'image', 'video', 'clean']\r\n\tconst { quill, quillRef } = useQuill({ modules, formats, readOnly: true })\r\n\r\n\tuseEffect(() => {\r\n\t\t//포스트 가져오기\r\n\t\tstore.setReady(false)\r\n\t\tlet url = process.env.REACT_APP_URL + '/posts/id/' + postId\r\n\t\t//url = process.env.REACT_APP_LOCAL_URL + '/posts/id/' + postId\r\n\r\n\t\tif (location.pathname === '/') {\r\n\t\t\turl = process.env.REACT_APP_URL + '/posts/id/1'\r\n\t\t\t//url = process.env.REACT_APP_LOCAL_URL + '/posts/id/1'\r\n\t\t}\r\n\t\tAxios.get(url, {\r\n\t\t\twithCredentials: true,\r\n\t\t})\r\n\t\t\t.then((res) => {\r\n\t\t\t\tsetPost(res.data)\r\n\t\t\t\tsetComments(res.data.comments)\r\n\t\t\t\tstore.setReady(true)\r\n\t\t\t})\r\n\t\t\t.catch((e) => {\r\n\t\t\t\talert('찾으시는 페이지가 없습니다.\\n' + e)\r\n\t\t\t\thistory.go(-1)\r\n\t\t\t}) //실패\r\n\t}, [location, postId])\r\n\r\n\tuseEffect(() => {\r\n\t\tif (post) {\r\n\t\t\tif (typeof post.body === 'string') {\r\n\t\t\t\tsetPs(post.body.split('\\n')) //텍스트일 경우 문단으로 쪼개기\r\n\t\t\t} else {\r\n\t\t\t\tif (quill) {\r\n\t\t\t\t\tquill.setContents(post.body)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}, [post, quill])\r\n\r\n\tconst deletePost = (e) => {\r\n\t\tif (window.confirm('글 삭제 시 복구가 불가합니다. 해당 글을 정말로 삭제하시겠습니까?')) {\r\n\t\t\tconst postId = e.target.id\r\n\t\t\tlet url = process.env.REACT_APP_URL + '/posts/' + postId\r\n\t\t\t//url = process.env.REACT_APP_LOCAL_URL+'/posts/'+postId\r\n\r\n\t\t\tAxios.delete(url, {\r\n\t\t\t\t//글 삭제\r\n\t\t\t\twithCredentials: true, //CORS\r\n\t\t\t})\r\n\t\t\t\t.then((res) => {\r\n\t\t\t\t\tconsole.log(`${postId}번 글 삭제 성공`)\r\n\t\t\t\t\thistory.go(-1)\r\n\t\t\t\t})\r\n\t\t\t\t.catch((e) => alert(e)) //실패\r\n\t\t}\r\n\t}\r\n\r\n\tconst postComment = (e) => {\r\n\t\tconst comment = document.querySelector(`.commentContent textarea`) //댓글 텍스트\r\n\t\tif (comment && comment.value !== '' && window.confirm('댓글을 작성하시겠습니까?')) {\r\n\t\t\tlet url = process.env.REACT_APP_URL + '/comments/' + post.postId\r\n\t\t\t//url = process.env.REACT_APP_LOCAL_URL+'/comments/'+post.postId\r\n\r\n\t\t\tAxios.patch(url, {\r\n\t\t\t\t//댓글 작성\r\n\t\t\t\twithCredentials: true, //CORS\r\n\t\t\t\tdata: {\r\n\t\t\t\t\tusername: store.login.username,\r\n\t\t\t\t\tcontent: comment.value,\r\n\t\t\t\t},\r\n\t\t\t})\r\n\t\t\t\t.then((res) => {\r\n\t\t\t\t\tconsole.log(`${post.postId} 댓글 추가 성공`)\r\n\t\t\t\t\trefreshComment(null, setCommentCnt(res.data.comments.length)) //포스트 다시 불러오고 댓글 끝까지 보이기\r\n\t\t\t\t})\r\n\t\t\t\t.catch((e) => alert(e)) //실패\r\n\t\t}\r\n\t}\r\n\r\n\tconst refreshComment = (e, func) => {\r\n\t\t//댓글 가져오기\r\n\t\tlet url = process.env.REACT_APP_URL + '/comments/' + post.postId\r\n\t\t//url = process.env.REACT_APP_LOCAL_URL+'/comments/'+post.postId\r\n\r\n\t\tlet svg //refresh 아이콘\r\n\t\tif (e && e.target) svg = e.target.querySelector('svg')\r\n\t\tif (svg) svg.classList.add('refreshing') //refresh 애니메이션 시작\r\n\r\n\t\tAxios.get(url, {\r\n\t\t\twithCredentials: true,\r\n\t\t}) //댓글 새로고치기\r\n\t\t\t.then((res) => {\r\n\t\t\t\tconsole.log(`${post.postId} 댓글 새로고침`)\r\n\t\t\t\tsetComments(res.data) //댓글 저장\r\n\t\t\t\tif (svg) svg.classList.remove('refreshing') //refresh 애니메이션 끝\r\n\r\n\t\t\t\tif (func) func() //파라미터에 함수가 있으면 함수 실행\r\n\t\t\t})\r\n\t\t\t.catch((e) => {\r\n\t\t\t\t//실패\r\n\t\t\t\tif (svg) svg.classList.remove('refreshing') //refresh 애니메이션 끝\r\n\t\t\t\talert(e)\r\n\t\t\t})\r\n\t}\r\n\r\n\t//댓글 10개 더보기\r\n\tconst more = (e) => {\r\n\t\tsetCommentCnt(commentCnt + 10)\r\n\t}\r\n\r\n\t//댓글 더보기, 댓글 새로고침 하면 리사이즈\r\n\tuseEffect(() => {\r\n\t\tstore.resizeTextarea()\r\n\t}, [commentCnt, store, comments])\r\n\r\n\treturn (\r\n\t\t<div className=\"post\">\r\n\t\t\t{location.pathname === '/' \r\n\t\t\t? <Meta data={{\r\n\t\t\t\ttitle: '행복한 코딩 블로그 :D',\r\n\t\t\t\tdiscription: 'imki123의 행복한 코딩 블로그입니다 :D',\r\n\t\t\t\t}}/>\r\n\t\t\t:<Meta data={{title: post.title, discription: post.text, locale: 'ko'}}/>}\r\n\t\t\t{/* 태그 */}\r\n\t\t\t<div className=\"nav\">\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<span>Tag : </span>\r\n\t\t\t\t\t{post.tags &&\r\n\t\t\t\t\t\tpost.tags.map((i, idx) =>\r\n\t\t\t\t\t\t\tidx === 0 ? (\r\n\t\t\t\t\t\t\t\t<span key={i}>\r\n\t\t\t\t\t\t\t\t\t<Link to={i === 'home' ? '/' : `/tags/${i}`}>{i}</Link>\r\n\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t<span key={i}>\r\n\t\t\t\t\t\t\t\t\t, <Link to={`/tags/${i}`}>{i}</Link>\r\n\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t),\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t</div>\r\n\t\t\t\t{post && post.publishedDate.substring(0, 16).replace('T', ' ')}\r\n\t\t\t</div>\r\n\t\t\t<h2 className=\"postTitle\">{post.title}</h2>\r\n\t\t\t<div className=\"postContent\">\r\n\t\t\t\t{/* 본문 */}\r\n\t\t\t\t{typeof post.body === 'string' ? (\r\n\t\t\t\t\tps.map((p, idx) => <p key={idx}>{p}</p>)\r\n\t\t\t\t) : (\r\n\t\t\t\t\t<div id=\"editor\">\r\n\t\t\t\t\t\t<div ref={quillRef} />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t)}\r\n\r\n\t\t\t\t{/* 글 수정 삭제 버튼 */}\r\n\t\t\t\t{store.login && store.login.username === 'imki123' && (\r\n\t\t\t\t\t<div className=\"postButtons\">\r\n\t\t\t\t\t\t<Link to={`/quill/${post.postId}`} className=\"hover no-drag\">\r\n\t\t\t\t\t\t\t수정\r\n\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t&nbsp;\r\n\t\t\t\t\t\t<button onClick={deletePost} id={post.postId} style={{ background: 'red' }}>\r\n\t\t\t\t\t\t\t삭제\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t)}\r\n\t\t\t</div>\r\n\r\n\t\t\t{/* 댓글 작성*/}\r\n\t\t\t<div className=\"writeComment\">\r\n\t\t\t\t<div className=\"commentProfile\">\r\n\t\t\t\t\t{!store.login ? (\r\n\t\t\t\t\t\t<img alt=\"PROFILE\" src={process.env.PUBLIC_URL + '/images/noavatar.png'} />\r\n\t\t\t\t\t) : store.login.username === 'imki123' ? (\r\n\t\t\t\t\t\t<img alt=\"PROFILE\" src={process.env.PUBLIC_URL + '/images/avatar.png'} />\r\n\t\t\t\t\t) : (\r\n\t\t\t\t\t\t<img alt=\"PROFILE\" src={process.env.PUBLIC_URL + '/images/dog' + (Math.floor(Math.random() * (3 - 1 + 1)) + 1) + '.png'} />\r\n\t\t\t\t\t)}\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"commentContent\">\r\n\t\t\t\t\t{store.login ? (\r\n\t\t\t\t\t\t<span className=\"commentUsername\">{store.login.username}</span>\r\n\t\t\t\t\t) : (\r\n\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\tclassName=\"loginButton\"\r\n\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\thistory.push('/login')\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t로그인\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t)}\r\n\t\t\t\t\t{store.login ? <textarea onChange={store.resizeTextarea} placeholder=\" 댓글을 남겨주세요 :D\" /> : <textarea readOnly placeholder=\" 로그인 후에 댓글을 남겨주세요 :D\" />}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"commentButtons\">\r\n\t\t\t\t{store.login && (\r\n\t\t\t\t\t<button className=\"commentButton\" onClick={postComment}>\r\n\t\t\t\t\t\t댓글작성\r\n\t\t\t\t\t</button>\r\n\t\t\t\t)}\r\n\t\t\t</div>\r\n\r\n\t\t\t{/* 댓글 목록 */}\r\n\t\t\t{comments && comments.length > 0 && (\r\n\t\t\t\t<div className=\"comments\">\r\n\t\t\t\t\t<div className=\"commentTitle\">\r\n\t\t\t\t\t\t<div className=\"commentCnt\">댓글 {comments.length}개</div>\r\n\t\t\t\t\t\t<span className=\"commentRefresh\" onClick={refreshComment}>\r\n\t\t\t\t\t\t\t댓글 새로고침 <RefreshIcon />\r\n\t\t\t\t\t\t</span>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t{comments.map((i, idx) => idx < commentCnt && <Comment post={post} comment={i} key={i.commentId} refreshComment={refreshComment} />)}\r\n\t\t\t\t\t{comments.length > commentCnt && (\r\n\t\t\t\t\t\t<div className=\"more\">\r\n\t\t\t\t\t\t\t<span className=\"moreButton\" onClick={more}>\r\n\t\t\t\t\t\t\t\t댓글 더보기\r\n\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</div>\r\n\t\t\t)}\r\n\t\t</div>\r\n\t)\r\n}\r\nexport default React.memo(Post)\r\n","import React, { useEffect } from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { AppContext } from '../App'\r\nimport './NotFoundPage.css'\r\n\r\nfunction NotFoundPage() {\r\n\tconst store = React.useContext(AppContext)\r\n\tconst history = useHistory()\r\n\tuseEffect(() => {\r\n\t\t//console.log(`Not found page! https://imki123.github.io${process.env.PUBLIC_URL}`)\r\n\t\tstore.setReady(true)\r\n\t})\r\n\r\n\tconst goBack = e => {\r\n\t\thistory.go(-1)\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className=\"notFound\">\r\n\t\t\t<div className=\"title\">Not Found Page</div>\r\n\t\t\t<div className=\"goHome\">\r\n\t\t\t\t<span onClick={goBack}>Go back</span>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\nexport default React.memo(NotFoundPage)\r\n","import React, { useState, useEffect } from 'react'\r\nimport './Login.css'\r\nimport { Switch, Route, useLocation, useHistory } from 'react-router-dom'\r\nimport { AppContext } from '../App'\r\n\r\nfunction Login(props) {\r\n    const store = React.useContext(AppContext)\r\n    const location = useLocation()\r\n    const history = useHistory()\r\n    let browser = ''\r\n    const agent = navigator.userAgent.toLowerCase()\r\n    if(agent.indexOf(\"chrome\") > -1) browser = 'chrome'\r\n    else if(agent.indexOf(\"safari\") > -1) browser = 'safari'\r\n        \r\n    const [checkUsername, setCheckUsername] = useState('')\r\n    const [checkPassword, setCheckPassword] = useState('')\r\n    const [checkPasswordConfirm, setCheckPasswordConfirm] = useState('')\r\n    const [buttonName, setButtonName] = useState('로그인')\r\n\r\n    useEffect(() => {\r\n        store.setReady(true)\r\n    })\r\n    useEffect(() => {\r\n        //이미 로그인이 되어있다면 스테이터스로 이동\r\n        if(store.login && location.pathname === '/login'){ \r\n            history.replace('/loginStatus')\r\n        }\r\n        if(location.pathname.indexOf('register') > -1){\r\n            setButtonName('회원가입')\r\n        }else if(location.pathname.indexOf('withdraw') > -1){\r\n            setButtonName('회원탈퇴')\r\n        }else{\r\n            setButtonName('로그인')\r\n        }\r\n    },[location, store.login, history])\r\n\r\n    const changeUsername = e => {\r\n        const pattern = /[^a-zA-Z0-9ㄱ-ㅎㅏ-ㅣ가-힣_]/g\r\n        const value = e.target.value = e.target.value.replace(/\\s/g,'_').replace(pattern,'')\r\n        if(value.length < 3){ //3글자 이상\r\n            setCheckUsername('- 3자 이상 입력해주세요')\r\n        }else if(value.length > 20){ //20글자 이하\r\n            setCheckUsername('- 20자 이하로 입력해주세요')\r\n        }else{\r\n            setCheckUsername('')\r\n        }\r\n    }\r\n    const changePassword = e => {\r\n        const {value} = e.target\r\n        const passwordConfirm = document.querySelector('[name=passwordConfirm]')\r\n        \r\n        //비밀번호가 변경되면 비밀번호 확인은 초기화\r\n        if(passwordConfirm){\r\n            passwordConfirm.value = ''\r\n            setCheckPasswordConfirm('')\r\n        }\r\n\r\n        if(value.length < 6){ //6글자 이상\r\n            setCheckPassword('- 6자 이상 입력해주세요')\r\n        }else if(value.length > 20){ //20글자 이하\r\n            setCheckPassword('- 20자 이하로 입력해주세요')\r\n        }else{\r\n            setCheckPassword('')\r\n        }\r\n    }\r\n    const changePasswordConfirm = e => {\r\n        const {value} = e.target\r\n        const password = document.querySelector('[name=password]')\r\n        \r\n        if(value !== password.value && value.length >= 1){ //password와 같으면\r\n            setCheckPasswordConfirm('- 비밀번호가 일치하지 않습니다')\r\n        }else{\r\n            setCheckPasswordConfirm('')\r\n        }\r\n    }\r\n    const clickButton = e => {\r\n        e.preventDefault();\r\n        let url = process.env.REACT_APP_URL+'/auth'\r\n        //url = process.env.REACT_APP_LOCAL_URL+'/auth'\r\n        \r\n        const pattern = /[^a-zA-Z0-9가-힣_]/g\r\n        let username = document.querySelector('[name=username]')\r\n        if(username) username = username.value = username.value.replace(pattern,'')\r\n        let password = document.querySelector('[name=password]')\r\n        if(password) password = password.value\r\n\r\n        if(checkUsername === '' && password.length >= 1 &&\r\n            checkPassword === '' && checkPasswordConfirm === '')\r\n        { //입력폼에 이상이 없으면 fetch submit\r\n            if(buttonName === '회원가입'){\r\n                url += '/register'\r\n                fetch(url,{\r\n                    mode: 'cors',\r\n                    method: 'POST',\r\n                    credentials: \"include\",\r\n                    headers:{'Content-Type': 'application/json'},\r\n                    body: JSON.stringify({\r\n                        username: username,\r\n                        password: password,\r\n                    }),\r\n                })\r\n                .then(res => {\r\n                    if(res.status===200 || res.status===201) { //성공하면 아래 then 작동\r\n                        res.json().then(res =>{ \r\n                            alert(res.username+'님의 회원가입에 성공했습니다 :D')\r\n                            history.go(-1)\r\n                        })\r\n                    }else{\r\n                        let message = '회원가입에 실패했습니다 :('\r\n                        if(res.status === 409){\r\n                            message += '\\n이미 존재하는 아이디입니다.'\r\n                        }\r\n                        if(res.status === 400){\r\n                            message += '\\n아이디나 비밀번호를 확인해주세요.'\r\n                        }\r\n                        alert(message)\r\n                    }\r\n                })\r\n                .catch(e => console.error(e))\r\n            }else if(buttonName === '회원탈퇴'){\r\n                if(window.confirm(\"계정 탈퇴시 복구할 수 없습니다. 정말로 탈퇴하시겠습니까?\")){\r\n                    url += '/withdraw'\r\n                    fetch(url,{\r\n                        mode: 'cors',\r\n                        method: 'DELETE',\r\n                        credentials: \"include\",\r\n                        headers:{'Content-Type': 'application/json'},\r\n                        body: JSON.stringify({\r\n                            username: store.login.username,\r\n                            password: password,\r\n                        }),\r\n                    })\r\n                    .then(res => {\r\n                        if(res.status===200) { //삭제하면 Ok\r\n                            alert('계정이 탈퇴되었습니다. 또 들러 주세요 :D')\r\n                            history.push('/')\r\n                        }else{\r\n                            let message = '탈퇴에 실패했습니다 :('\r\n                            if(res.status === 204){\r\n                                message += '\\n존재하지 않는 아이디입니다.'\r\n                            }\r\n                            if(res.status === 401){\r\n                                message += '\\n비밀번호를 확인해주세요.'\r\n                            }\r\n                            alert(message)\r\n                        }\r\n                    })\r\n                    .catch(e => console.error(e))\r\n                }\r\n            }else{ //로그인\r\n                url += '/login'\r\n                fetch(url,{\r\n                    mode: 'cors',\r\n                    method: 'POST',\r\n                    credentials: \"include\",\r\n                    headers:{'Content-Type': 'application/json'},\r\n                    body: JSON.stringify({\r\n                        username: username,\r\n                        password: password,\r\n                    }),\r\n                })\r\n                .then(res => {\r\n                    if(res.status===200 || res.status===201) { //성공하면 아래 then 작동\r\n                        res.json().then(res =>{ \r\n                            store.setLogin(res)\r\n                            alert(res.username+'님 환영합니다 :D')\r\n                            history.go(-1)\r\n                        })\r\n                    }else{\r\n                        let message = '로그인에 실패했습니다 :('\r\n                        if(res.status === 401){\r\n                            message += '\\n로그인 정보를 확인해주세요.'\r\n                        }\r\n                        alert(message)\r\n                    }\r\n                })\r\n                .catch(e => console.error(e))\r\n            }\r\n        }else{\r\n            alert('입력 정보를 확인해주세요.')\r\n        }\r\n    }\r\n\r\n    return(\r\n        <div id=\"background\">\r\n            <div id=\"loginWrapper\">\r\n                <form id=\"login\">\r\n                    <Switch>\r\n                        <Route path={['/login','/register','/withdraw']}>\r\n                            <div className=\"text\">아이디</div>\r\n                            {buttonName === '회원탈퇴' ?\r\n                                <div>{store.login.username}</div> :\r\n                                <input name=\"username\" onChange={changeUsername}/>\r\n                            }\r\n\r\n                            <div className=\"check\">{checkUsername}</div>\r\n\r\n                            <div className=\"text\">비밀번호</div>\r\n                            <input name=\"password\" type=\"password\" onChange={changePassword} autoComplete=\"currnet-password\"/>\r\n                            <div className=\"check\">{checkPassword}</div>\r\n                            \r\n                            {buttonName === '회원가입' &&\r\n                            <>\r\n                                <div className=\"text\">비밀번호 확인</div>\r\n                                <input name=\"passwordConfirm\" type=\"password\" onChange={changePasswordConfirm} autoComplete=\"currnet-password\"/>\r\n                                <div className=\"check\" id=\"checkPasswordConfirm\">{checkPasswordConfirm}</div>\r\n                            </>}\r\n\r\n                            {buttonName === '회원탈퇴' \r\n                            ? <button style={{background: 'red'}} onClick={clickButton}>{buttonName}</button>\r\n                            : <button onClick={clickButton}>{buttonName}</button>}\r\n\r\n                            {browser === 'safari' &&\r\n                            <div className=\"text\" style={{fontSize: '0.8rem', textAlign: 'center'}}>\r\n                                (Safari의 경우 설정을 변경해주셔야 로그인이 가능합니다.<br/>설정 → Safari → 개인 정보 보호 및 보안 → <br/>크로스 사이트 추적방지 OFF, 모든 쿠키 차단 OFF) \r\n                            </div>}\r\n                        </Route>\r\n                        <Route path={['/loginStatus']}>\r\n                            {store.login ? \r\n                            <div className=\"center\">\r\n                                {store.login.username}님은 현재 <span style={{color:'green'}}>로그인</span> 되어있습니다 :D<br/>\r\n                                <span style={{fontSize: '0.8rem'}}>(로그인은 최대 일주일간 유지됩니다.)</span>\r\n                            </div> : \r\n                            <div className=\"center\">\r\n                                재 로그인이 필요합니다 :D\r\n                            </div>}\r\n                        </Route>\r\n                    </Switch>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    ) \r\n}\r\nexport default React.memo(Login)\r\n","import React, { useEffect, useState } from 'react'\r\nimport './Quill.css'\r\nimport 'quill/dist/quill.snow.css'\r\nimport { useHistory, useLocation } from 'react-router-dom'\r\nimport { useQuill } from 'react-quilljs'\r\nimport { AppContext } from '../App'\r\nimport Axios from 'axios'\r\n\r\nfunction Quill({match}) {\r\n\tconst store = React.useContext(AppContext)\r\n\tconst location = useLocation()\r\n\tlet {postId} = match.params\r\n\tconst history = useHistory()\r\n\tconst [newMenu, setNewMenu] = useState([])\r\n\r\n\tconst modules = {\r\n\t\ttoolbar: [\r\n\t\t\t['bold', 'italic', 'underline', 'strike'],\r\n\t\t\t[{ size: ['small', false, 'large', 'huge'] }, { header: 1 }, { header: 2 }],\r\n\t\t\t[{ align: [] }],\r\n\t\t\t[{ color: [] }, { background: [] }],\r\n\t\t\t[{ indent: '-1' }, { indent: '+1' }],\r\n\t\t\t[{ list: 'ordered' }, { list: 'bullet' }],\r\n\t\t\t['code-block', 'blockquote'],\r\n\t\t\t['link', 'image', 'video'],\r\n\t\t\t['clean'],\r\n\t\t],\r\n\t\tsyntax: true,\r\n\t}\r\n\tconst formats = ['bold', 'italic', 'underline', 'strike', 'code-block', 'blockquote', 'size', 'header', 'align', 'color', 'background', 'indent', 'list', 'link', 'image', 'video', 'clean']\r\n\r\n\tconst { quill, quillRef } = useQuill({ modules, formats })\r\n\r\n\tuseEffect(() => {\r\n\t\tconst tempMenu = []\r\n\t\tfor (let i in store.mainMenus) {\r\n\t\t\tif (store.mainMenus[i].name !== 'home' && store.mainMenus[i].name !== 'programming' && store.mainMenus[i].name !== 'article') {\r\n\t\t\t\ttempMenu.push(store.mainMenus[i])\r\n\t\t\t}\r\n\t\t}\r\n\t\tsetNewMenu(tempMenu)\r\n\t}, [store.mainMenus])\r\n\r\n\tuseEffect(() => {\r\n\t\t//포스트 불러오기 axios\r\n\t\tif (postId !== undefined && Number(postId) >= 1 && quill) {\r\n\t\t\t//postId가 없으면 포스트 내용 가져오지 않기\r\n\t\t\tlet url = process.env.REACT_APP_URL + '/posts/id/' + postId\r\n\t\t\t//url = process.env.REACT_APP_LOCAL_URL+'/posts/id/' + postId\r\n\r\n\t\t\tAxios.get(url, {\r\n\t\t\t\twithCredentials: true,\r\n\t\t\t}) //포스트 불러오기\r\n\t\t\t\t.then((res) => {\r\n\t\t\t\t\tlet title = document.querySelector('[name=title]')\r\n\t\t\t\t\ttitle.value = res.data.title\r\n\t\t\t\t\tif (typeof res.data.body === 'string') quill.setText(res.data.body)\r\n\t\t\t\t\t//body가 string이면 setText\r\n\t\t\t\t\telse quill.setContents(res.data.body) //body가 string이 아니면 setContents : Delta\r\n\r\n\t\t\t\t\tconst tags = document.querySelectorAll('[type=radio]')\r\n\t\t\t\t\tfor (let i of tags) {\r\n\t\t\t\t\t\t//체크 초기화\r\n\t\t\t\t\t\ti.checked = false\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (res.data.tags) {\r\n\t\t\t\t\t\t//체크박스 체크\r\n\t\t\t\t\t\tconst mainMenu = document.querySelector(`[value=${res.data.tags[0]}]`)\r\n\t\t\t\t\t\tif (mainMenu) mainMenu.checked = true\r\n\t\t\t\t\t\tfor (let i of res.data.tags) {\r\n\t\t\t\t\t\t\tconst tag = document.querySelector(`[name=${i}]`)\r\n\t\t\t\t\t\t\tif (tag) tag.checked = true\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tstore.setReady(true)\r\n\t\t\t\t})\r\n\t\t\t\t.catch((e) => {\r\n\t\t\t\t\talert(e)\r\n\t\t\t\t\tstore.setReady(true)\r\n\t\t\t\t}) //실패\r\n\t\t}else{\r\n\t\t\tstore.setReady(true)\r\n\t\t}\r\n\t}, [location, quill, postId, store])\r\n\r\n\t//글 작성 or 수정\r\n\tconst clickPost = (e) => {\r\n\t\tif (!store.login || (store.login && store.login.username !== 'imki123')) {\r\n\t\t\talert('글 작성은 블로그 주인만 가능합니다 ^^;')\r\n\t\t\treturn\r\n\t\t}\r\n\t\tif (!window.confirm('글을 게시하시겠습니까?')) {\r\n\t\t\treturn\r\n\t\t}\r\n\t\t//제목, 내용, 태그가 있는지 검사\r\n\t\tlet title = document.querySelector('[name=title]')\r\n\t\tconst content = quill.getContents()\r\n\t\tconst text = quill.getText()\r\n\t\tconst mainMenu = document.querySelector('[type=radio]:checked')\r\n\t\tlet tags = []\r\n\t\tconst checkBoxs = document.querySelectorAll('[type=checkbox]:checked')\r\n\t\tconst newMainMenu = document.querySelector('[name=newMainMenu]')\r\n\t\tconst newMenu = document.querySelector('[name=newMenu]')\r\n\r\n\t\tif (mainMenu) {\r\n\t\t\ttags = [mainMenu.value]\r\n\t\t}\r\n\t\tif (newMainMenu.value !== '') {\r\n\t\t\ttags = [newMainMenu.value]\r\n\t\t}\r\n\t\tif (checkBoxs) {\r\n\t\t\tfor (let i of checkBoxs) {\r\n\t\t\t\ttags.push(i.name)\r\n\t\t\t} //체크 된 서브메뉴 추가\r\n\t\t}\r\n\t\tif (newMenu.value !== '') {\r\n\t\t\ttags.push(newMenu.value)\r\n\t\t}\r\n\r\n\t\tif (title.value.length === 0) {\r\n\t\t\talert('제목을 입력해주세요.')\r\n\t\t\treturn\r\n\t\t} else if (quill.getLength() === 1) {\r\n\t\t\talert('내용을 입력해주세요.')\r\n\t\t\treturn\r\n\t\t} else if (tags.length < 1 && newMainMenu.value === '') {\r\n\t\t\talert('메인메뉴를 1개 선택해주세요.')\r\n\t\t\treturn\r\n\t\t}\r\n\r\n\t\t//url에 POST 또는 PATCH 요청\r\n\t\tlet url = process.env.REACT_APP_URL + '/posts'\r\n\t\t//url = process.env.REACT_APP_LOCAL_URL + '/posts'\r\n\t\tlet method = 'POST',\r\n\t\t\tmessage = '글 작성 성공'\r\n\t\tif (e.target.id === 'PATCH') {\r\n\t\t\tif (postId !== undefined && Number(postId) >= 1) {\r\n\t\t\t\turl += '/' + postId\r\n\t\t\t\tmethod = 'PATCH'\r\n\t\t\t\tmessage = '글 수정 성공'\r\n\t\t\t} else {\r\n\t\t\t\tconsole.log('postId 비정상, 글 수정 실패')\r\n\t\t\t\treturn\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tAxios(url, {\r\n\t\t\t//포스트 작성, 수정 (최대 10mb. koa-bodyparser에서 설정.)\r\n\t\t\tmethod: method,\r\n\t\t\twithCredentials: true, //CORS\r\n\t\t\tdata: {\r\n\t\t\t\ttitle: title.value,\r\n\t\t\t\tbody: content,\r\n\t\t\t\ttext: text,\r\n\t\t\t\ttags: tags,\r\n\t\t\t},\r\n\t\t})\r\n\t\t\t.then((res) => {\r\n\t\t\t\talert(message) //성공\r\n\t\t\t\tpostId = res.data.postId\r\n\t\t\t\tif(postId){\r\n\t\t\t\t\thistory.push(`/posts/${postId}`) //수정 성공하면 해당 글로 이동함\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t})\r\n\t\t\t.catch((e) => alert(e)) //실패\r\n\t}\r\n\r\n\t// 화면 리사이즈시 editor 아래 마진 변경\r\n\tuseEffect(() => {\r\n\t\tconst editor = document.querySelector('#editor')\r\n\t\tconst toolbar = document.querySelector('.ql-toolbar')\r\n\t\tif (editor && toolbar) {\r\n\t\t\teditor.style.marginBottom = toolbar.clientHeight + 10 + 'px'\r\n\t\t}\r\n\t\twindow.removeEventListener('resize', function () {})\r\n\t\twindow.addEventListener('resize', function () {\r\n\t\t\tif (editor && toolbar) {\r\n\t\t\t\teditor.style.marginBottom = toolbar.clientHeight + 10 + 'px'\r\n\t\t\t}\r\n\t\t})\r\n\t}, [location])\r\n\r\n\t//메인메뉴 추가시 라디오박스 체크 해제, 띄어쓰기를 _로 변경\r\n\tconst changeMainMenu = (e) => {\r\n\t\te.target.value = e.target.value.replace(/\\s/g, '_')\r\n\t\tconst mainMenu = document.querySelector('[type=radio]:checked')\r\n\t\tif (mainMenu) mainMenu.checked = false\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className=\"quill\">\r\n\t\t\t<div className=\"quillTitle\">\r\n\t\t\t\t<input name=\"title\" placeholder=\"제목\" />\r\n\t\t\t</div>\r\n\t\t\t<div id=\"editor\">\r\n\t\t\t\t<div ref={quillRef} />\r\n\t\t\t\t<div id=\"tags\" className=\"no-drag\">\r\n\t\t\t\t\t<div id=\"tagsTitle\">\r\n\t\t\t\t\t\ttags\r\n\t\t\t\t\t\t{postId !== undefined && Number(postId) >= 1 ? (\r\n\t\t\t\t\t\t\t<button className=\"editorButton\" onClick={clickPost} id=\"PATCH\">\r\n\t\t\t\t\t\t\t\t글 수정\r\n\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t<button className=\"editorButton\" onClick={clickPost}>\r\n\t\t\t\t\t\t\t\t새글 작성\r\n\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t메인메뉴:\r\n\t\t\t\t\t\t<label>\r\n\t\t\t\t\t\t\t<input type=\"radio\" name=\"mainMenu\" value=\"home\" />\r\n\t\t\t\t\t\t\thome\r\n\t\t\t\t\t\t</label>\r\n\t\t\t\t\t\t<label>\r\n\t\t\t\t\t\t\t<input type=\"radio\" name=\"mainMenu\" value=\"programming\" />\r\n\t\t\t\t\t\t\tprogramming\r\n\t\t\t\t\t\t</label>\r\n\t\t\t\t\t\t<label>\r\n\t\t\t\t\t\t\t<input type=\"radio\" name=\"mainMenu\" value=\"article\" />\r\n\t\t\t\t\t\t\tarticle\r\n\t\t\t\t\t\t</label>\r\n\t\t\t\t\t\t{newMenu &&\r\n\t\t\t\t\t\t\tnewMenu.map((i) => (\r\n\t\t\t\t\t\t\t\t<label key={i.name}>\r\n\t\t\t\t\t\t\t\t\t<input type=\"radio\" name=\"mainMenu\" value={i.name} />\r\n\t\t\t\t\t\t\t\t\t{i.name}\r\n\t\t\t\t\t\t\t\t</label>\r\n\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t<input name=\"newMainMenu\" placeholder=\"메인메뉴 추가\" onChange={changeMainMenu} autoComplete=\"off\"></input>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t서브메뉴:\r\n\t\t\t\t\t\t{store.subMenus &&\r\n\t\t\t\t\t\t\tstore.subMenus.map((i) => (\r\n\t\t\t\t\t\t\t\t<label key={i}>\r\n\t\t\t\t\t\t\t\t\t<input type=\"checkbox\" name={i} />\r\n\t\t\t\t\t\t\t\t\t{i}\r\n\t\t\t\t\t\t\t\t</label>\r\n\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t<input name=\"newMenu\" placeholder=\"서브메뉴 추가\" autoComplete=\"off\"></input>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\nexport default React.memo(Quill)\r\n","import React, { useEffect } from 'react'\r\nimport './Paging.css'\r\nimport {NavLink, useLocation } from 'react-router-dom'\r\nimport queryString from 'query-string';\r\n\r\nfunction Paging(props){\r\n    const {postCount} = props\r\n\tconst location = useLocation()\r\n\tconst search = queryString.parse(location.search)\r\n    let paging = null\r\n    const pages = []\r\n\tif (postCount) {\r\n\t\tconst page = Number(search.page) || 1\r\n\t\tconst startPost = postCount - (page - 1) * 10\r\n\t\tpaging = {\r\n\t\t\tpage: page,\r\n\t\t\tlastPage: Math.ceil(postCount / 10),\r\n\t\t\tpostCount: postCount,\r\n\t\t\tstartPost: startPost,\r\n        }\r\n        \r\n        for(let i=0; i<paging.lastPage; i++){\r\n            pages.push(i+1)\r\n        }\r\n\t}\r\n\r\n    useEffect(() => {\r\n        const links = document.querySelectorAll('.paging a')\r\n        for(let i=0; i<links.length; i++){\r\n            if(links[i].innerHTML === search.page){\r\n                links[i].className = 'activePage'\r\n            }else{\r\n                links[i].className = 'inactivePage'\r\n            }\r\n            if(search.page === undefined){ //search에 page가 없으면 1을 activePage로 설정\r\n                if(links[i].innerHTML === '1'){\r\n                    links[i].className = 'activePage'\r\n                }\r\n            }\r\n        }\r\n    }, [search, postCount])\r\n\r\n    \r\n    return(\r\n        <div className=\"paging\">\r\n            {pages.map((p, idx) =>  \r\n                <NavLink path={location.pathname} to={`${location.pathname}?page=${p}`} \r\n                    className=\"inactivePage\" key={idx}>{p}</NavLink>)}\r\n        </div>\r\n    )\r\n}\r\nexport default React.memo(Paging)","import React from 'react'\r\nimport './PostList.css'\r\nimport { Link } from 'react-router-dom'\r\n\r\nfunction PostList(props){\r\n    const {list, no} = props\r\n    let date = list.publishedDate.substring(0,16).replace('T',' ')\r\n\r\n    return(\r\n        <Link to={`/posts/${list.postId}`}>\r\n            <div className=\"postList no-drag\">\r\n                <div className=\"postListHeader\">\r\n                    <div>\r\n                        <span className=\"postId\">{no}.</span>\r\n                        <span className=\"postTitle\">{list.title}</span>\r\n                    </div>\r\n                    <span className=\"postDate\">{date}</span>\r\n                </div>\r\n                <div className=\"postBody\">{list.text}</div>\r\n            </div>\r\n        </Link>\r\n    )\r\n}\r\nexport default React.memo(PostList)","import Axios from 'axios'\r\nimport React, { useEffect, useState } from 'react'\r\nimport { AppContext } from '../App'\r\nimport Paging from './Paging'\r\nimport PostList from './PostList'\r\n\r\nimport './Tags.css'\r\n\r\nfunction Tags({ match, location, history }) {\r\n\tconst store = React.useContext(AppContext)\r\n\tconst { tag } = match.params\r\n\tconst [lists, setLists] = useState([])\r\n\tuseEffect(() => {\r\n\t\tstore.setReady(false)\r\n\t\tlet url = process.env.REACT_APP_URL + '/posts/' + tag + location.search\r\n\t\t//url = process.env.REACT_APP_LOCAL_URL + '/posts/' + tag + location.search\r\n\r\n\t\tAxios.get(url, {\r\n\t\t\twithCredentials: true,\r\n\t\t})\r\n\t\t\t.then((res) => {\r\n\t\t\t\tif(res.data.list.length < 1){\r\n\t\t\t\t\talert('찾으시는 페이지가 없습니다.')\r\n\t\t\t\t\thistory.go(-1)\r\n\t\t\t\t}else{\r\n\t\t\t\t\tsetLists(res.data.list)\r\n\t\t\t\tstore.setReady(true)\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\t.catch((e) => alert(e)) //실패\r\n\t},[tag, location])\r\n\r\n\treturn (\r\n\t\t<div className=\"postListWrapper\">\r\n\t\t\t<div className=\"postListTitle\">{tag.substring(0,1).toUpperCase() + tag.substring(1)}</div>\r\n\t\t\t{lists && lists.map((i, idx) => <PostList no={lists.length - idx} list={i} key={i.postId} />)}\r\n\t\t\t{<Paging postCount={lists.length} />}\r\n\t\t</div>\r\n\t)\r\n}\r\nexport default React.memo(Tags)\r\n","import React, { useEffect } from 'react'\r\nimport AddCircleOutlineIcon from '@material-ui/icons/AddCircleOutline'\r\nimport ArrowUpwardIcon from '@material-ui/icons/ArrowUpward'\r\nimport './Content.css'\r\nimport { Link, Route, useLocation, Switch } from 'react-router-dom'\r\nimport { AppContext } from '../App'\r\n\r\nimport Post from './Post'\r\nimport NotFoundPage from './NotFoundPage'\r\nimport Login from './Login'\r\nimport Quill from './Quill'\r\nimport Tags from './Tags'\r\n\r\nfunction Content(props) {\r\n\tconst store = React.useContext(AppContext)\r\n\tconst location = useLocation()\r\n\r\n\tuseEffect(() => {\r\n\t\tconst resize = () => {\r\n\t\t\tstore.resizeTextarea()\r\n\t\t}\r\n\r\n\t\twindow.addEventListener('resize', resize)\r\n\t\tconst loading = document.querySelector('#loading')\r\n\t\tif (store.ready) {\r\n\t\t\tif (loading) loading.style.display = 'none'\r\n\t\t\tif (location.hash) {\r\n\t\t\t\t//hash가 있으면 해당 엘리먼트로 스크롤\r\n\t\t\t\tsetTimeout(function () {\r\n\t\t\t\t\t//elem이 로드된 이후에 스크롤이 되야해서 0.1초 타임아웃 추가..\r\n\t\t\t\t\tconst content = document.querySelector('#content')\r\n\t\t\t\t\tconst elem = document.querySelector(location.hash)\r\n\t\t\t\t\tif (elem) {\r\n\t\t\t\t\t\tlet contentScroll = content.scrollTop\r\n\t\t\t\t\t\tlet elemTop = elem.offsetTop\r\n\t\t\t\t\t\tlet dif = (elemTop - contentScroll) / 50\r\n\t\t\t\t\t\tif (elemTop > contentScroll) {\r\n\t\t\t\t\t\t\tconst frame = setInterval(function () {\r\n\t\t\t\t\t\t\t\tif (content.scrollTop + dif >= elemTop || content.scrollTop >= content.scrollHeight - content.clientHeight) {\r\n\t\t\t\t\t\t\t\t\tclearInterval(frame)\r\n\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\tcontent.scrollTop += dif\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}, 10)\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tconst frame = setInterval(function () {\r\n\t\t\t\t\t\t\t\tif (content.scrollTop <= elemTop) {\r\n\t\t\t\t\t\t\t\t\tclearInterval(frame)\r\n\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\tcontent.scrollTop += dif\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}, 10)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}, 10)\r\n\t\t\t}\r\n\t\t\tsetTimeout(function () {\r\n\t\t\t\tstore.resizeTextarea()\r\n\t\t\t}, 10)\r\n\t\t} else {\r\n\t\t\tif (loading) loading.style.display = 'flex'\r\n\t\t}\r\n\t\treturn window.removeEventListener('resize', resize)\r\n\t}, [location.hash, store])\r\n\r\n\tconst scrollUp = (e) => {\r\n\t\t// content의 스크롤을 가장 위로\r\n\t\tconst content = document.querySelector('#content')\r\n\t\tlet contentScroll = content.scrollTop\r\n\t\tlet dif = contentScroll / 50\r\n\t\tconst frame = setInterval(function () {\r\n\t\t\tif (content.scrollTop <= 0) {\r\n\t\t\t\tclearInterval(frame)\r\n\t\t\t} else {\r\n\t\t\t\tcontent.scrollTop -= dif\r\n\t\t\t}\r\n\t\t}, 10)\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div id=\"content\" className=\"slideMenu\">\r\n\t\t\t{/* FAB */}\r\n\t\t\t{store.login && store.login.username === 'imki123' && (\r\n\t\t\t\t<Link id=\"postFAB\" className=\"hover\" to=\"/quill\">\r\n\t\t\t\t\t<AddCircleOutlineIcon />\r\n\t\t\t\t</Link>\r\n\t\t\t)}\r\n\t\t\t<div id=\"scrollFAB\" className=\"hover\" onClick={scrollUp}>\r\n\t\t\t\t<ArrowUpwardIcon />\r\n\t\t\t</div>\r\n\t\t\t<div id=\"menuFAB\" className=\"hover\" onClick={store.slideMenu}>\r\n\t\t\t\t<img alt=\"MENU\" src={process.env.PUBLIC_URL + '/images/guide_icon.png'} />\r\n\t\t\t</div>\r\n\r\n\t\t\t{/* 로딩 */}\r\n\t\t\t<div id=\"loading\">\r\n\t\t\t\t<img alt=\"Loading\" src={process.env.PUBLIC_URL + '/images/loading.gif'} />\r\n\t\t\t</div>\r\n\r\n\t\t\t<Switch>\r\n\t\t\t\t<Route path={['/login', '/register', '/loginStatus', '/withdraw']}>\r\n\t\t\t\t\t<Login />\r\n\t\t\t\t</Route>\r\n\t\t\t\t<Route path={'/quill/:postId?'} component={Quill}/>\r\n\t\t\t\t<Route path=\"/tags/:tag\" component={Tags}/>\r\n\t\t\t\t<Route path=\"/\" exact component={Post}/>\r\n\t\t\t\t<Route path=\"/posts/:postId\" component={Post}/>\r\n\t\t\t\t<Route path=\"/NotFoundPage\" component={NotFoundPage}/>\r\n\t\t\t\t<Route path=\"*\" component={NotFoundPage}/>\r\n\t\t\t</Switch>\r\n\r\n\t\t\t{/* 텍스트 에어리어 높이 조정을 위한 안보이는 가짜 텍스트에어리어 */}\r\n\t\t\t<textarea disabled id=\"fakeTextarea\" />\r\n\t\t</div>\r\n\t)\r\n}\r\nexport default React.memo(Content)\r\n","import React from 'react'\r\nimport './Setting.css'\r\nimport { Link} from 'react-router-dom'\r\nimport { AppContext } from '../App'\r\n\r\nfunction Setting(props) {\r\n    const store = React.useContext(AppContext)\r\n\r\n    const closeSetting = e => {\r\n        const settingWrapper = document.querySelector('#settingWrapper')\r\n        e.stopPropagation()\r\n        setTimeout(function(){\r\n            settingWrapper.style.display = 'none'\r\n        },200)\r\n    }\r\n\r\n    const logout = e => {\r\n        if(window.confirm('로그아웃 하시겠습니까?')){\r\n            let url = process.env.REACT_APP_URL+'/auth/logout'\r\n            //url = process.env.REACT_APP_LOCAL_URL+'/auth/logout'\r\n\r\n            fetch(url,{\r\n                mode: 'cors',\r\n                method: 'POST',\r\n                credentials: \"include\",\r\n            })\r\n            .then(res => {\r\n                if(res.status===204) { //로그아웃 하면 204\r\n                    console.log('로그아웃 성공')\r\n                    store.setLogin(false)\r\n                }\r\n                else{\r\n                    console.log('로그아웃 실패')\r\n                }\r\n            })\r\n            .catch(e => console.error(e))\r\n        }\r\n    }\r\n\r\n\treturn(\r\n        <div id=\"settingWrapper\" onClick={closeSetting}>\r\n            <div id=\"setting\">\r\n                <div id=\"settingListWrapper\">\r\n                    {store.login ? \r\n                        <Link className=\"settingList\" to=\"/loginStatus\">{store.login.username}</Link> :\r\n                        <Link className=\"settingList\" to=\"/login\">로그인</Link>    \r\n                    }\r\n                    {store.login && <div className=\"settingList\" onClick={logout}>로그아웃</div>}\r\n                    {!store.login && <Link className=\"settingList\" to=\"/register\">회원가입</Link>}\r\n                    {store.login && <Link className=\"settingList\" to=\"/withdraw\">회원탈퇴</Link>}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    ) \r\n}\r\nexport default React.memo(Setting)\r\n","import React, { createContext, useEffect, useState } from 'react'\r\nimport './App.css'\r\nimport { useLocation } from 'react-router-dom'\r\n\r\nimport Header from './components/Header'\r\nimport Body from './components/Body'\r\nimport Guide from './components/Guide'\r\nimport Content from './components/Content'\r\nimport Setting from './components/Setting'\r\nimport Axios from 'axios'\r\nimport Meta from './components/Meta'\r\n\r\nconst AppContext = createContext()\r\n\r\nfunction App() {\r\n\tconst location = useLocation() //페이지 경로 변경 감지\r\n\tconst [ready, setReady] = useState(false)\r\n\tconst [posts, setPosts] = useState([])\r\n\tconst [headers, setHeaders] = useState({})\r\n\tconst [login, setLogin] = useState(false)\r\n\tconst [refresh, setRefresh] = useState(false)\r\n\tconst [mainMenus, setMainMenus] = useState({})\r\n\tconst [subMenus, setSubMenus] = useState([])\r\n\r\n\tconst resizeTextarea = (e) => {\r\n\t\t//텍스트에어리어를 찾아서 크기를 글자 높이에 맞게 변경하기\r\n\t\t//textarea 높이 조정\r\n\t\tconst fake = document.querySelector('#fakeTextarea')\r\n\t\tlet textareas = []\r\n\t\tif (e && e.target) {\r\n\t\t\ttextareas.push(e.target)\r\n\t\t} else {\r\n\t\t\ttextareas = document.querySelectorAll('textarea')\r\n\t\t}\r\n\r\n\t\tif (textareas && fake) {\r\n\t\t\tfor (let i = 0; i < textareas.length; i++) {\r\n\t\t\t\tfake.style.height = '1px'\r\n\t\t\t\tfake.style.width = textareas[i].clientWidth + 'px'\r\n\t\t\t\tfake.value = textareas[i].value\r\n\t\t\t\ttextareas[i].style.height = 5 + fake.scrollHeight + 'px'\r\n\t\t\t}\r\n\t\t\tfake.value = ''\r\n\t\t\tfake.style.height = '0px'\r\n\t\t}\r\n\t}\r\n\r\n\tconst slideMenu = () => {\r\n\t\t//메뉴버튼 클릭 시 메뉴 보이기 & 숨기기\r\n\t\tconst body = document.querySelector('#body')\r\n\t\tconst guideWrapper = document.querySelector('#guideWrapper')\r\n\t\tconst content = document.querySelector('#content')\r\n\r\n\t\tif (guideWrapper.style.left.replace('px', '') > -100) {\r\n\t\t\t//메뉴 닫기\r\n\t\t\tguideWrapper.parentNode.style.width = '0' // 회색 0\r\n\t\t\tcontent.style.width = 'calc(100% - 16px)' //콘텐트 100% - 16px\r\n\t\t\tif (body.clientWidth < 500) {\r\n\t\t\t\t//모바일\r\n\t\t\t\tguideWrapper.style.left = '-230px' // 메뉴 왼쪽으로\r\n\t\t\t} else {\r\n\t\t\t\tguideWrapper.style.left = '-312px' // 메뉴 왼쪽으로\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\t//메뉴 열기\r\n\t\t\tguideWrapper.style.left = '0px' // 메뉴 230\r\n\t\t\tif (body.clientWidth < 500) {\r\n\t\t\t\t//모바일\r\n\t\t\t\tguideWrapper.parentNode.style.width = '100%' // 회색 100%\r\n\t\t\t} else {\r\n\t\t\t\t//PC\r\n\t\t\t\tcontent.style.width = `calc(100% - 312px - 16px)`\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tconst checkToken = (func) => {\r\n\t\t//로그인 되어있는지 토큰 체크하기\r\n\t\tlet url = process.env.REACT_APP_URL + '/auth/check'\r\n\t\t//url = process.env.REACT_APP_LOCAL_URL+'/auth/check'\r\n\t\tAxios.get(url, { withCredentials: true })\r\n\t\t\t.then((res) => {\r\n\t\t\t\tif (res.data) {\r\n\t\t\t\t\tconsole.log('토큰 체크 성공')\r\n\t\t\t\t\tsetLogin(res.data)\r\n\t\t\t\t} else {\r\n\t\t\t\t\tconsole.log('토큰 없음') //res.status===204(No Content)\r\n\t\t\t\t\tsetLogin(false)\r\n\t\t\t\t}\r\n\t\t\t\tif (func) func()\r\n\t\t\t})\r\n\t\t\t.catch((e) => {\r\n\t\t\t\t//실패\r\n\t\t\t\tif (func) func()\r\n\t\t\t})\r\n\t}\r\n\r\n\t//useContext 이용하여 하위 컴포넌트에 상태 전달\r\n\tconst store = {\r\n\t\tready,\r\n\t\tsetReady,\r\n\t\tposts,\r\n\t\tsetPosts,\r\n\t\theaders,\r\n\t\tsetHeaders,\r\n\t\tlogin,\r\n\t\tsetLogin,\r\n\t\trefresh,\r\n\t\tsetRefresh,\r\n\t\tmainMenus,\r\n\t\tsetMainMenus,\r\n\t\tsubMenus,\r\n\t\tsetSubMenus,\r\n\t\tresizeTextarea,\r\n\t\tslideMenu,\r\n\t\tcheckToken,\r\n\t}\r\n\r\n\t// 포스트에서 태그 정보를 가져와서 메뉴에 표시함, Quill의 태그목록에 표시\r\n\tuseEffect(() => {\r\n\t\tlet url = process.env.REACT_APP_URL + '/posts/menus'\r\n\t\t//url = process.env.REACT_APP_LOCAL_URL+'/posts/menus'\r\n\r\n\t\tAxios.get(url, {\r\n\t\t\twithCredentials: true,\r\n\t\t}) //메뉴 태그 가져오기\r\n\t\t\t.then((res) => {\r\n\t\t\t\tsetMainMenus(res.data.mainMenus)\r\n\t\t\t\tsetSubMenus(res.data.subMenus)\r\n\t\t\t})\r\n\t\t\t.catch((e) => alert(e)) //실패\r\n\t}, [location.pathname, refresh])\r\n\r\n\t//주소 변경될 때, 토큰 체크하고 포스트 조회하기\r\n\tuseEffect(() => {\r\n\t\tsetReady(false)\r\n\t\tcheckToken()\r\n\r\n\t\t//주소 변경 시 해쉬 위치로 scroll. 해쉬는 리렌더링 하지 않음.\r\n\t\tconst content = document.querySelector('#content')\r\n\t\tif (content) {\r\n\t\t\tlet scroll = content.scrollTop\r\n\t\t\tconst frame = setInterval(function () {\r\n\t\t\t\tlet dif = scroll / 50\r\n\t\t\t\tcontent.scrollTop -= dif\r\n\t\t\t\tif (content.scrollTop <= 0) clearInterval(frame)\r\n\t\t\t}, 10)\r\n\t\t}\r\n\t}, [location.pathname, location.search, refresh])\r\n\r\n\treturn (\r\n\t\t<AppContext.Provider value={store}>\r\n\t\t\t<div id=\"app\">\r\n\t\t\t\t<Meta\r\n\t\t\t\t\tdata={{\r\n\t\t\t\t\t\ttitle: '행복한 코딩 블로그 :D',\r\n\t\t\t\t\t\tdiscription: 'imki123의 행복한 코딩 블로그입니다 :D',\r\n\t\t\t\t\t}}\r\n\t\t\t\t/>\r\n\t\t\t\t<Header />\r\n\t\t\t\t<Setting />\r\n\t\t\t\t<Body>\r\n\t\t\t\t\t<Guide />\r\n\t\t\t\t\t<Content />\r\n\t\t\t\t</Body>\r\n\t\t\t</div>\r\n\t\t</AppContext.Provider>\r\n\t)\r\n}\r\nexport { AppContext }\r\nexport default React.memo(App)\r\n","import React from 'react'\r\nimport ReactDOM, { hydrate } from 'react-dom'\r\nimport { BrowserRouter } from 'react-router-dom'\r\nimport App from './App'\r\n\r\nconst rootElement = document.getElementById('root')\r\n\r\nif (rootElement.hasChildNodes()) {\r\n\thydrate(\r\n\t\t<BrowserRouter>\r\n\t\t\t<React.StrictMode>\r\n\t\t\t\t<App />\r\n\t\t\t</React.StrictMode>\r\n\t\t</BrowserRouter>,\r\n\t\trootElement,\r\n\t)\r\n} else {\r\n\tReactDOM.render(\r\n\t\t<BrowserRouter basename={process.env.PUBLIC_URL}>\r\n\t\t\t<React.StrictMode>\r\n\t\t\t\t<App />\r\n\t\t\t</React.StrictMode>\r\n\t\t</BrowserRouter>,\r\n\t\tdocument.getElementById('root'),\r\n\t)\r\n}\r\n"],"sourceRoot":""}