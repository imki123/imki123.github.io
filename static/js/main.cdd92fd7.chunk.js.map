{"version":3,"sources":["components/Header.js","components/Body.js","components/Menus.js","components/Guide.js","components/Comment.js","components/Meta.js","components/PostList.js","components/Recents.js","components/Post.js","components/NotFoundPage.js","components/Login.js","components/Quill.js","components/Paging.js","components/Tags.js","components/Content.js","components/Setting.js","App.js","index.js"],"names":["React","memo","props","store","useContext","AppContext","id","className","onClick","slideMenu","alt","src","to","setting","document","querySelector","style","display","login","username","Math","floor","random","children","menus","map","i","key","name","exact","activeClassName","substring","toUpperCase","count","subMenus","length","j","e","body","guideWrapper","content","parentNode","width","clientWidth","left","title","href","comment","post","refreshComment","update","date","publishedDate","replace","useEffect","postId","commentId","value","fontWeight","updated","readOnly","onChange","resizeTextarea","textarea","window","confirm","classList","remove","url","process","Axios","patch","withCredentials","data","then","res","console","log","catch","alert","add","focus","background","locales","en","ko","Meta","lang","locale","description","image","undefined","canonical","type","height","Helmet","titleTemplate","rel","itemprop","property","hreflang","list","no","text","idx","match","location","history","params","useState","setPost","ps","setPs","comments","setComments","commentCnt","setCommentCnt","recents","setRecents","popular","setPopular","useQuill","modules","syntax","formats","quill","quillRef","setReady","pathname","get","res2","go","split","setContents","func","svg","target","discription","tags","p","ref","delete","push","placeholder","useHistory","useLocation","browser","agent","navigator","userAgent","toLowerCase","indexOf","checkUsername","setCheckUsername","checkPassword","setCheckPassword","checkPasswordConfirm","setCheckPasswordConfirm","buttonName","setButtonName","clickButton","preventDefault","password","fetch","mode","method","credentials","headers","JSON","stringify","status","json","message","error","setLogin","path","passwordConfirm","autoComplete","fontSize","textAlign","color","setSubMenus","toolbar","size","header","align","indent","Number","querySelectorAll","checked","mainMenu","setText","subMenu","newSubMenu","clickPost","getContents","getText","newMainMenu","getLength","editor","marginBottom","clientHeight","removeEventListener","addEventListener","changeMainMenu","changeSubMenu","postCount","search","queryString","parse","paging","pages","page","startPost","lastPage","ceil","links","innerHTML","tag","lists","setLists","resize","loading","ready","hash","setTimeout","elem","contentScroll","scrollTop","elemTop","offsetTop","dif","frame","setInterval","scrollHeight","clearInterval","component","Login","Quill","Tags","Post","NotFoundPage","disabled","settingWrapper","stopPropagation","createContext","posts","setPosts","setHeaders","refresh","setRefresh","order","setMenus","checkToken","fake","textareas","scroll","Provider","rootElement","getElementById","hasChildNodes","hydrate","StrictMode","ReactDOM","render","basename"],"mappings":"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","file":"static/js/main.cdd92fd7.chunk.js","sourcesContent":["import React from 'react'\r\nimport './Header.css'\r\nimport { Link } from 'react-router-dom';\r\nimport { AppContext } from '../App'\r\n\r\nfunction Header(props) {\r\n    const store = React.useContext(AppContext) \r\n\r\n    const toggleSetting = () => {\r\n        const setting = document.querySelector('#settingWrapper')\r\n        if(setting){\r\n            if(setting.style.display === 'block'){\r\n                setting.style.display = 'none'\r\n            }else{\r\n                setting.style.display = 'block'\r\n            } \r\n        }\r\n    }\r\n\r\n\treturn(\r\n        <div id=\"headerWrapper\">\r\n            <div id=\"header\">\r\n                <div className=\"hover\" onClick={store.slideMenu}>\r\n                    <img id=\"menu\" alt=\"MENU\" src={process.env.PUBLIC_URL+'/images/guide_icon.png'}/>\r\n                </div>\r\n                <Link to=\"/\"> \r\n                    <div id=\"title\" className=\"hover\">\r\n                        <img id=\"logo\" alt=\"logo\" src={process.env.PUBLIC_URL+'/images/imcat_64.png'}/> \r\n                        행복한 코딩 블로그 :D\r\n                    </div>\r\n                </Link>\r\n                <div className=\"hover\"  onClick={toggleSetting}>\r\n                {!store.login ? \r\n                    <img className=\"profile\" alt=\"PROFILE\" src={process.env.PUBLIC_URL+'/images/noavatar.png'}/> :\r\n                    store.login.username === 'imki123' ?\r\n                        <img className=\"profile\" alt=\"PROFILE\" src={process.env.PUBLIC_URL+'/images/avatar_small.png'}/> :\r\n                        <img className=\"profile\" alt=\"PROFILE\" \r\n                            src={process.env.PUBLIC_URL+'/images/dog'+(Math.floor(Math.random() * (3 - 1 + 1)) + 1)+'.png'}/>}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    ) \r\n}\r\nexport default React.memo(Header)\r\n","import React from 'react'\r\nimport './Body.css'\r\n\r\nfunction Body(props) {\r\n\treturn(\r\n        <div id=\"body\">\r\n            {props.children}\r\n        </div>\r\n    ) \r\n}\r\nexport default React.memo(Body)\r\n","import React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\nimport './Menus.css'\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore'\r\n\r\nfunction Menus(props) {\r\n\tconst { menus } = props\r\n\r\n\t//menu정보를 받아서 링크 메뉴 생성하기\r\n\t//menu { name: string, cnt: number, Object{ name: string, cnt: number}, Object{...}}\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{menus &&\r\n\t\t\t\tmenus.map((i) => (\r\n\t\t\t\t\t<div key={i.name}>\r\n\t\t\t\t\t\t<NavLink exact to={i.name === 'home' ? '/' : `/tags/${i.name}`} className=\"list\" activeClassName=\"activeList\">\r\n\t\t\t\t\t\t\t<span className=\"menuName\">{i.name.substring(0, 1).toUpperCase() + i.name.substring(1)}</span>\r\n\t\t\t\t\t\t\t<span className=\"menuOptions\">\r\n\t\t\t\t\t\t\t\t<span className=\"menuCnt\">{i.count}</span>\r\n\t\t\t\t\t\t\t\t<span className=\"menuExpandIcon\">{i.subMenus && i.subMenus.length >= 1 && <ExpandMoreIcon />}</span>\r\n\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t</NavLink>\r\n\t\t\t\t\t\t{i.subMenus && i.subMenus.length > 0 && i.subMenus.map((j) => (\r\n\t\t\t\t\t\t\t<NavLink exact to={`/tags/${j.name}`} className=\"list subList\" activeClassName=\"activeList\" key={j.name}>\r\n                            <span className=\"menuName\">{j.name.substring(0, 1).toUpperCase() + j.name.substring(1)}</span>\r\n                            <span className=\"menuOptions\">\r\n                                <span className=\"menuCnt\">{j.count}</span>\r\n                            </span>\r\n                        </NavLink>\r\n\t\t\t\t\t\t))}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t))}\r\n\t\t</>\r\n\t)\r\n}\r\nexport default React.memo(Menus)\r\n","import React from 'react'\r\nimport './Guide.css'\r\nimport { AppContext } from '../App'\r\nimport Menus from './Menus'\r\n\r\nfunction Guide(props) {\r\n    const store = React.useContext(AppContext)\r\n\r\n    //모바일에서 회색부분 클릭 시 메뉴 닫기\r\n    const closeMenuMobile = e => {\r\n        const body = document.querySelector('#body')\r\n        const guideWrapper = document.querySelector('#guideWrapper')\r\n        const content = document.querySelector('#content')\r\n\r\n        guideWrapper.parentNode.style.width = '0' // 회색 0\r\n        if(body.clientWidth < 500){ //모바일\r\n            guideWrapper.style.left = '-230px' // 메뉴 0\r\n            content.style.width = 'calc(100% - 16px)'\r\n        }else{\r\n            content.style.width = 'calc(100% - 312px - 16px)'\r\n        }\r\n    }\r\n\r\n\treturn(\r\n        <div id=\"guideBack\" onClick={closeMenuMobile}>\r\n            <div id=\"guideWrapper\" className=\"slideMenu\">\r\n                <div id=\"avatar\">\r\n                    <img alt=\"avatar\" src={process.env.PUBLIC_URL+'/images/avatar.png'} title='Hello :D'/>\r\n                    <div id=\"name\">Im kiyoung</div>\r\n                    <div id=\"nickName\">imki123</div>\r\n                    <div id=\"github\">\r\n                        <a href=\"https://github.com/imki123\">\r\n                            <img alt=\"github\" src={process.env.PUBLIC_URL+'/images/GitHub-Mark-32px.png'}\r\n                            /> <span>https://github.com/imki123</span>\r\n                        </a>\r\n                    </div>\r\n                    <div id=\"introduction\">\r\n                        A web programmer who dreams of being a wise developer.\r\n                    </div>\r\n                </div>\r\n                <div id=\"menus\">\r\n                    <Menus menus={store.menus}/>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    ) \r\n}\r\nexport default React.memo(Guide)\r\n","import React, { useEffect } from 'react'\r\nimport './Comment.css'\r\nimport { AppContext } from '../App'\r\nimport Axios from 'axios'\r\n\r\nfunction Comment(props) {\r\n    const store = React.useContext(AppContext)\r\n    const {comment, post, refreshComment} = props\r\n    let update = false\r\n    let date = comment.publishedDate.substring(0,16).replace('T',' ')\r\n    useEffect(() => {\r\n        const textarea = document.querySelector(`#comment_${post.postId}_${comment.commentId} textarea`)\r\n        textarea.value = comment.content\r\n    },[comment, post])\r\n\r\n    const updateComment = e => { //댓글 수정\r\n        const textarea = document.querySelector(`#comment_${post.postId}_${comment.commentId} textarea`)\r\n        if(!update){\r\n            update = true\r\n            textarea.classList.add('updateMode')\r\n            textarea.readOnly = false\r\n            textarea.focus()\r\n        }else if(window.confirm('댓글을 수정하시겠습니까?')){\r\n            update = false\r\n            textarea.classList.remove('updateMode')\r\n            textarea.readOnly = true\r\n            \r\n            let url = process.env.REACT_APP_URL+`/comments/${post.postId}/${comment.commentId}`\r\n            //url = process.env.REACT_APP_LOCAL_URL+`/comments/${post.postId}/${comment.commentId}`\r\n\r\n            Axios.patch(url, { //댓글 수정\r\n                withCredentials: true, //CORS\r\n                data: {\r\n                    content: textarea.value,\r\n                }\r\n            })\r\n            .then(res => {\r\n                console.log(`${comment.commentId}번 댓글 수정 성공`)\r\n                refreshComment() //포스트 다시 불러오기\r\n            })\r\n            .catch(e => alert(e)) //실패\r\n        }\r\n    }\r\n\r\n    const deleteComment = e => {\r\n        if(window.confirm('삭제 후에는 복구가 불가합니다. 정말로 댓글을 삭제하시겠습니까?')){\r\n            let url = process.env.REACT_APP_URL+`/comments/delete/${post.postId}/${comment.commentId}`\r\n            //url = process.env.REACT_APP_LOCAL_URL+`/comments/delete/${post.postId}/${comment.commentId}`\r\n\r\n            Axios.patch(url, { //포스트 삭제\r\n                withCredentials: true, //CORS\r\n            })\r\n            .then(res => {\r\n                console.log(`${comment.commentId}번 댓글 삭제 성공`)\r\n                refreshComment() //포스트 다시 불러오기\r\n            })\r\n            .catch(e => alert(e)) //실패\r\n        }\r\n    }\r\n\r\n\treturn(\r\n    <div className=\"commentWrapper\" id={`comment_${post.postId}_${comment.commentId}`}>\r\n        <div className=\"comment\">\r\n            <div className=\"commentProfile\">\r\n                {!comment.username ? \r\n                <img alt=\"PROFILE\" src={process.env.PUBLIC_URL+'/images/noavatar.png'}/> :\r\n                    comment.username === 'imki123' ?\r\n                        <img alt=\"PROFILE\" src={process.env.PUBLIC_URL+'/images/avatar_small.png'}/> :\r\n                        <img alt=\"PROFILE\" \r\n                            src={process.env.PUBLIC_URL+'/images/dog'+(Math.floor(Math.random() * (3 - 1 + 1)) + 1)+'.png'}/>}\r\n            </div>\r\n            <div className=\"commentContent\">\r\n                {comment.username === store.login.username \r\n                ? <span className=\"commentUsername\" style={{fontWeight:'bold'}}>{comment.username}</span>\r\n                : <span className=\"commentUsername\">{comment.username}</span>}\r\n                <span className=\"commentDate\"> - {date} {comment.updated && '(수정됨)'}</span>\r\n                <textarea readOnly onChange={store.resizeTextarea}/>\r\n            </div>\r\n        </div>\r\n        {((comment.username && comment.username === store.login.username) \r\n            || store.login.username === 'imki123')&&\r\n        <div className=\"commentButtons\">\r\n            <button className=\"commentButton\" onClick={updateComment}>수정</button>\r\n            <button className=\"commentButton\" style={{background:'red'}} onClick={deleteComment}>삭제</button>\r\n        </div>}\r\n    </div>\r\n    ) \r\n}\r\nexport default React.memo(Comment)\r\n","// components/Meta\r\n/* eslint-disable no-undefined */\r\nimport React from 'react'\r\nimport { Helmet } from 'react-helmet'\r\n\r\nconst locales = {\r\n\ten: 'en_US',\r\n\tko: 'ko_KR',\r\n}\r\n\r\nconst Meta = ({ data }) => {\r\n\tconst lang = locales[data.locale] || locales['en']\r\n\tconst title = data.title\r\n\tconst description = data.description\r\n\tconst image = data.image !== undefined && `${data.image}`\r\n\tconst canonical = `https://imki123.github.io/${data.canonical}`\r\n\tconst type = data.type === undefined ? 'website' : data.type\r\n\tconst width = data.image && (data.width || 1200)\r\n\tconst height = data.image && (data.height || 630)\r\n\r\n\treturn (\r\n\t\t<Helmet titleTemplate=\"%s\">\r\n\t\t\t<html lang={lang} />\r\n\t\t\t<title>{title}</title>\r\n\t\t\t<meta name=\"description\" content={description} />\r\n\t\t\t{canonical ? <link rel=\"canonical\" href={canonical} /> : null}\r\n\t\t\t{image ? <link rel=\"image_src\" href={image} /> : null}\r\n\t\t\t{image ? <meta itemprop=\"image\" content={image} /> : null}\r\n\r\n\t\t\t<meta property=\"og:site_name\" content=\"YOUR WEB SITE\" />\r\n\t\t\t<meta property=\"og:title\" content={title} />\r\n\t\t\t{description ? <meta property=\"og:description\" content={description} /> : null}\r\n\t\t\t{canonical ? <meta property=\"og:url\" content={canonical} /> : null}\r\n\t\t\t<meta property=\"og:locale\" content={locales[lang]} />\r\n\t\t\t<meta property=\"og:type\" content={type} />\r\n\t\t\t{image ? <meta property=\"og:image\" content={image} /> : null}\r\n\t\t\t{width ? <meta property=\"og:image:width\" content={width} /> : null}\r\n\t\t\t{height ? <meta property=\"og:image:height\" content={height} /> : null}\r\n\t\t\t<meta property=\"fb:pages\" content=\"YOUR WEB SITE\" />\r\n\r\n\t\t\t{/* change type of twitter if there is no image? */}\r\n\t\t\t<meta name=\"twitter:card\" content=\"summary_large_image\" />\r\n\t\t\t<meta name=\"twitter:title\" content={title} />\r\n\t\t\t{description ? <meta name=\"twitter:description\" content={description} /> : null}\r\n\t\t\t{image ? <meta name=\"twitter:image\" content={image} /> : null}\r\n\t\t\t<meta name=\"twitter:site\" content=\"@YOURWEBSITE\" />\r\n\t\t\t{canonical ? <link rel=\"alternate\" href={data.canonical} hreflang={lang} /> : null}\r\n\t\t</Helmet>\r\n\t)\r\n}\r\n\r\nexport default Meta","import React from 'react'\r\nimport './PostList.css'\r\nimport { Link } from 'react-router-dom'\r\n\r\nfunction PostList(props){\r\n    const {list, no} = props\r\n    let date = list.publishedDate.substring(0,10).replace('T',' ')\r\n\r\n    return(\r\n        <Link to={`/posts/${list.postId}`}>\r\n            <div className=\"postList no-drag\">\r\n                <div className=\"postListHeader\">\r\n                    <div>\r\n                        <span className=\"postId\">{no}.</span>\r\n                        <span className=\"postTitle\">{list.title}</span>\r\n                    </div>\r\n                    <span className=\"postDate\">{date}</span>\r\n                </div>\r\n                <div className=\"postBody\">{list.text}</div>\r\n            </div>\r\n        </Link>\r\n    )\r\n}\r\nexport default React.memo(PostList)","import React from 'react'\r\nimport './Recents.css'\r\n\r\nimport PostList from './PostList'\r\n\r\nfunction Recents(props) {\r\n\tconst {title, list} = props\r\n\treturn (\r\n\t\t<div id=\"recents\">\r\n            <div className=\"postListTitle\">{title}</div>\r\n            {list && list.map((i, idx) => <PostList no={list.length - idx} list={i} key={i.postId} />)}\r\n\t\t</div>\r\n\t)\r\n}\r\nexport default React.memo(Recents)\r\n","import React, { useEffect, useState } from 'react'\r\nimport './Post.css'\r\nimport { Link } from 'react-router-dom'\r\nimport { useQuill } from 'react-quilljs'\r\nimport Comment from './Comment'\r\nimport { AppContext } from '../App'\r\nimport RefreshIcon from '@material-ui/icons/Refresh'\r\nimport Axios from 'axios'\r\nimport Meta from './Meta'\r\nimport Recents from './Recents'\r\n\r\nfunction Post({ match, location, history }) {\r\n\tconst store = React.useContext(AppContext)\r\n\tlet {postId} = match.params\r\n\tconst [post, setPost] = useState(false)\r\n\tconst [ps, setPs] = useState([])\r\n\tconst [comments, setComments] = useState([])\r\n\tconst [commentCnt, setCommentCnt] = useState(3)\r\n\tconst [recents, setRecents] = useState([])\r\n\tconst [popular, setPopular] = useState([])\r\n\r\n\tconst modules = { syntax: true }\r\n\tconst formats = ['bold', 'italic', 'underline', 'strike', 'code-block', 'blockquote', 'size', 'header', 'align', 'color', 'background', 'indent', 'list', 'link', 'image', 'video', 'clean']\r\n\tconst { quill, quillRef } = useQuill({ modules, formats, readOnly: true })\r\n\r\n\tuseEffect(() => {\r\n\t\t//포스트 가져오기\r\n\t\tstore.setReady(false)\r\n\t\t\r\n\t\tlet url = process.env.REACT_APP_URL + '/posts/' + postId\r\n\t\t//url = process.env.REACT_APP_LOCAL_URL + '/posts/' + postId\r\n\t\tif (location.pathname === '/') {\r\n\t\t\turl = process.env.REACT_APP_URL + '/posts/1'\r\n\t\t\t//url = process.env.REACT_APP_LOCAL_URL + '/posts/1'\r\n\t\t}\r\n\r\n\t\tAxios.get(url, {\r\n\t\t\twithCredentials: true,\r\n\t\t})\r\n\t\t\t.then((res) => {\r\n\t\t\t\tsetComments(res.data.comments)\r\n\t\t\t\t//포스트바디 가져오기\r\n\t\t\t\turl = process.env.REACT_APP_URL + '/posts/postBody/' + postId\r\n\t\t\t\t//url = process.env.REACT_APP_LOCAL_URL + '/posts/postBody/' + postId\r\n\t\t\t\tif (location.pathname === '/') {\r\n\t\t\t\t\turl = process.env.REACT_APP_URL + '/posts/postBody/1'\r\n\t\t\t\t\t//url = process.env.REACT_APP_LOCAL_URL + '/posts/postBody/1'\r\n\t\t\t\t}\r\n\t\t\t\tAxios.get(url)\r\n\t\t\t\t\t.then((res2) => {\r\n\t\t\t\t\t\tsetPost({\r\n\t\t\t\t\t\t\t...res.data,\r\n\t\t\t\t\t\t\tbody: res2.data.body,\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t})\r\n\t\t\t\t\t.catch((e) => {\r\n\t\t\t\t\t\talert(e)\r\n\t\t\t\t\t}) //실패\r\n\t\t\t\tstore.setReady(true)\r\n\t\t\t})\r\n\t\t\t.catch((e) => {\r\n\t\t\t\talert('찾으시는 페이지가 없습니다.\\n' + e)\r\n\t\t\t\thistory.go(-1)\r\n\t\t\t}) //실패\r\n\t\tif (location.pathname === '/') {\r\n\t\t\t//홈일경우 recents, popular 가져옴\r\n\t\t\turl = process.env.REACT_APP_URL + '/posts/popular'\r\n\t\t\t//url = process.env.REACT_APP_LOCAL_URL + '/posts/popular'\r\n\t\t\tAxios.get(url).then((res) => {\r\n\t\t\t\tsetPopular(res.data)\r\n\t\t\t})\r\n\r\n\t\t\turl = process.env.REACT_APP_URL + '/posts/recents'\r\n\t\t\t//url = process.env.REACT_APP_LOCAL_URL + '/posts/recents'\r\n\t\t\tAxios.get(url).then((res) => {\r\n\t\t\t\tsetRecents(res.data)\r\n\t\t\t})\r\n\t\t}\r\n\t}, [location, postId, history])\r\n\r\n\tuseEffect(() => {\r\n\t\tif (post) {\r\n\t\t\tif (typeof post.body === 'string') {\r\n\t\t\t\tsetPs(post.body.split('\\n')) //텍스트일 경우 문단으로 쪼개기\r\n\t\t\t} else {\r\n\t\t\t\tif (quill) {\r\n\t\t\t\t\tquill.setContents(post.body)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}, [post, quill])\r\n\r\n\tconst deletePost = (e) => {\r\n\t\tif (window.confirm('글 삭제 시 복구가 불가합니다. 해당 글을 정말로 삭제하시겠습니까?')) {\r\n\t\t\tconst postId = e.target.id\r\n\t\t\tlet url = process.env.REACT_APP_URL + '/posts/' + postId\r\n\t\t\t//url = process.env.REACT_APP_LOCAL_URL+'/posts/'+postId\r\n\r\n\t\t\tAxios.delete(url, {\r\n\t\t\t\t//글 삭제\r\n\t\t\t\twithCredentials: true, //CORS\r\n\t\t\t})\r\n\t\t\t\t.then((res) => {\r\n\t\t\t\t\tconsole.log(`${postId}번 글 삭제 성공`)\r\n\t\t\t\t\thistory.go(-1)\r\n\t\t\t\t})\r\n\t\t\t\t.catch((e) => alert(e)) //실패\r\n\t\t}\r\n\t}\r\n\r\n\tconst postComment = (e) => {\r\n\t\tconst comment = document.querySelector(`.commentContent textarea`) //댓글 텍스트\r\n\t\tif (comment && comment.value !== '' && window.confirm('댓글을 작성하시겠습니까?')) {\r\n\t\t\tlet url = process.env.REACT_APP_URL + '/comments/' + post.postId\r\n\t\t\t//url = process.env.REACT_APP_LOCAL_URL+'/comments/'+post.postId\r\n\r\n\t\t\tAxios.patch(url, {\r\n\t\t\t\t//댓글 작성\r\n\t\t\t\twithCredentials: true, //CORS\r\n\t\t\t\tdata: {\r\n\t\t\t\t\tusername: store.login.username,\r\n\t\t\t\t\tcontent: comment.value,\r\n\t\t\t\t},\r\n\t\t\t})\r\n\t\t\t\t.then((res) => {\r\n\t\t\t\t\tconsole.log(`${post.postId} 댓글 추가 성공`)\r\n\t\t\t\t\trefreshComment(null, setCommentCnt(res.data.comments.length)) //포스트 다시 불러오고 댓글 끝까지 보이기\r\n\t\t\t\t})\r\n\t\t\t\t.catch((e) => alert(e)) //실패\r\n\t\t}\r\n\t}\r\n\r\n\tconst refreshComment = (e, func) => {\r\n\t\t//댓글 가져오기\r\n\t\tlet url = process.env.REACT_APP_URL + '/comments/' + post.postId\r\n\t\t//url = process.env.REACT_APP_LOCAL_URL+'/comments/'+post.postId\r\n\r\n\t\tlet svg //refresh 아이콘\r\n\t\tif (e && e.target) svg = e.target.querySelector('svg')\r\n\t\tif (svg) svg.classList.add('refreshing') //refresh 애니메이션 시작\r\n\r\n\t\tAxios.get(url, {\r\n\t\t\twithCredentials: true,\r\n\t\t}) //댓글 새로고치기\r\n\t\t\t.then((res) => {\r\n\t\t\t\tconsole.log(`${post.postId} 댓글 새로고침`)\r\n\t\t\t\tsetComments(res.data) //댓글 저장\r\n\t\t\t\tif (svg) svg.classList.remove('refreshing') //refresh 애니메이션 끝\r\n\r\n\t\t\t\tif (func) func() //파라미터에 함수가 있으면 함수 실행\r\n\t\t\t})\r\n\t\t\t.catch((e) => {\r\n\t\t\t\t//실패\r\n\t\t\t\tif (svg) svg.classList.remove('refreshing') //refresh 애니메이션 끝\r\n\t\t\t\talert(e)\r\n\t\t\t})\r\n\t}\r\n\r\n\t//댓글 10개 더보기\r\n\tconst more = (e) => {\r\n\t\tsetCommentCnt(commentCnt + 10)\r\n\t}\r\n\r\n\t//댓글 더보기, 댓글 새로고침 하면 리사이즈\r\n\tuseEffect(() => {\r\n\t\tstore.resizeTextarea()\r\n\t}, [commentCnt, store, comments])\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<div className=\"post\">\r\n\t\t\t\t{location.pathname === '/' ? (\r\n\t\t\t\t\t<Meta\r\n\t\t\t\t\t\tdata={{\r\n\t\t\t\t\t\t\ttitle: '행복한 코딩 블로그 :D',\r\n\t\t\t\t\t\t\tdiscription: 'imki123의 행복한 코딩 블로그입니다 :D',\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t/>\r\n\t\t\t\t) : (\r\n\t\t\t\t\t<Meta data={{ title: post.title, discription: post.text, locale: 'ko' }} />\r\n\t\t\t\t)}\r\n\t\t\t\t{/* 태그 */}\r\n\t\t\t\t<div className=\"nav\">\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<span>Tag : </span>\r\n\t\t\t\t\t\t{post.tags &&\r\n\t\t\t\t\t\t\tpost.tags.map((i, idx) =>\r\n\t\t\t\t\t\t\t\tidx === 0 ? (\r\n\t\t\t\t\t\t\t\t\t<span key={i}>\r\n\t\t\t\t\t\t\t\t\t\t<Link to={i === 'home' ? '/' : `/tags/${i}`}>{i}</Link>\r\n\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t<span key={i}>\r\n\t\t\t\t\t\t\t\t\t\t, <Link to={`/tags/${i}`}>{i}</Link>\r\n\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t),\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t{post && post.publishedDate.substring(0, 16).replace('T', ' ')}\r\n\t\t\t\t</div>\r\n\t\t\t\t<h2 className=\"postTitle\">{post.title}</h2>\r\n\t\t\t\t<div className=\"postContent\">\r\n\t\t\t\t\t{/* 본문 */}\r\n\t\t\t\t\t{typeof post.body === 'string' ? (\r\n\t\t\t\t\t\tps.map((p, idx) => <p key={idx}>{p}</p>)\r\n\t\t\t\t\t) : (\r\n\t\t\t\t\t\t<div id=\"editor\">\r\n\t\t\t\t\t\t\t<div ref={quillRef} />\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t)}\r\n\r\n\t\t\t\t\t{/* 글 수정 삭제 버튼 */}\r\n\t\t\t\t\t{store.login && store.login.username === 'imki123' && (\r\n\t\t\t\t\t\t<div className=\"postButtons\">\r\n\t\t\t\t\t\t\t<Link to={`/quill/${post.postId}`} className=\"hover no-drag\">\r\n\t\t\t\t\t\t\t\t수정\r\n\t\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t\t&nbsp;\r\n\t\t\t\t\t\t\t<button onClick={deletePost} id={post.postId} style={{ background: 'red' }}>\r\n\t\t\t\t\t\t\t\t삭제\r\n\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t{/* 댓글 작성*/}\r\n\t\t\t\t<div className=\"writeComment\">\r\n\t\t\t\t\t<div className=\"commentProfile\">\r\n\t\t\t\t\t\t{!store.login ? (\r\n\t\t\t\t\t\t\t<img alt=\"PROFILE\" src={process.env.PUBLIC_URL + '/images/noavatar.png'} />\r\n\t\t\t\t\t\t) : store.login.username === 'imki123' ? (\r\n\t\t\t\t\t\t\t<img alt=\"PROFILE\" src={process.env.PUBLIC_URL + '/images/avatar.png'} />\r\n\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t<img alt=\"PROFILE\" src={process.env.PUBLIC_URL + '/images/dog' + (Math.floor(Math.random() * (3 - 1 + 1)) + 1) + '.png'} />\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"commentContent\">\r\n\t\t\t\t\t\t{store.login ? (\r\n\t\t\t\t\t\t\t<span className=\"commentUsername\">{store.login.username}</span>\r\n\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\t\tclassName=\"loginButton\"\r\n\t\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\t\thistory.push('/login')\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t로그인\r\n\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t{store.login ? <textarea onChange={store.resizeTextarea} placeholder=\" 댓글을 남겨주세요 :D\" /> : <textarea readOnly placeholder=\" 로그인 후에 댓글을 남겨주세요 :D\" />}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"commentButtons\">\r\n\t\t\t\t\t{store.login && (\r\n\t\t\t\t\t\t<button className=\"commentButton\" onClick={postComment}>\r\n\t\t\t\t\t\t\t댓글작성\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t{/* 댓글 목록 */}\r\n\t\t\t\t{comments && comments.length > 0 && (\r\n\t\t\t\t\t<div className=\"comments\">\r\n\t\t\t\t\t\t<div className=\"commentTitle\">\r\n\t\t\t\t\t\t\t<div className=\"commentCnt\">댓글 {comments.length}개</div>\r\n\t\t\t\t\t\t\t<span className=\"commentRefresh\" onClick={refreshComment}>\r\n\t\t\t\t\t\t\t\t댓글 새로고침 <RefreshIcon />\r\n\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t{comments.map((i, idx) => idx < commentCnt && <Comment post={post} comment={i} key={i.commentId} refreshComment={refreshComment} />)}\r\n\t\t\t\t\t\t{comments.length > commentCnt && (\r\n\t\t\t\t\t\t\t<div className=\"more\">\r\n\t\t\t\t\t\t\t\t<span className=\"moreButton\" onClick={more}>\r\n\t\t\t\t\t\t\t\t\t댓글 더보기\r\n\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t)}\r\n\t\t\t</div>\r\n\t\t\t{location.pathname === '/' && (\r\n\t\t\t\t<div className=\"recents\">\r\n\t\t\t\t\t<Recents title=\"최신글\" list={recents} />\r\n\t\t\t\t\t<Recents title=\"인기글\" list={popular} />\r\n\t\t\t\t</div>\r\n\t\t\t)}\r\n\t\t</>\r\n\t)\r\n}\r\nexport default React.memo(Post)\r\n","import React, { useEffect } from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { AppContext } from '../App'\r\nimport './NotFoundPage.css'\r\n\r\nfunction NotFoundPage() {\r\n\tconst store = React.useContext(AppContext)\r\n\tconst history = useHistory()\r\n\tuseEffect(() => {\r\n\t\t//console.log(`Not found page! https://imki123.github.io${process.env.PUBLIC_URL}`)\r\n\t\tstore.setReady(true)\r\n\t})\r\n\r\n\tconst goBack = e => {\r\n\t\thistory.go(-1)\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className=\"notFound\">\r\n\t\t\t<div className=\"title\">Not Found Page</div>\r\n\t\t\t<div className=\"goHome\">\r\n\t\t\t\t<span onClick={goBack}>Go back</span>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\nexport default React.memo(NotFoundPage)\r\n","import React, { useState, useEffect } from 'react'\r\nimport './Login.css'\r\nimport { Switch, Route, useLocation, useHistory } from 'react-router-dom'\r\nimport { AppContext } from '../App'\r\n\r\nfunction Login(props) {\r\n    const store = React.useContext(AppContext)\r\n    const location = useLocation()\r\n    const history = useHistory()\r\n    let browser = ''\r\n    const agent = navigator.userAgent.toLowerCase()\r\n    if(agent.indexOf(\"chrome\") > -1) browser = 'chrome'\r\n    else if(agent.indexOf(\"safari\") > -1) browser = 'safari'\r\n        \r\n    const [checkUsername, setCheckUsername] = useState('')\r\n    const [checkPassword, setCheckPassword] = useState('')\r\n    const [checkPasswordConfirm, setCheckPasswordConfirm] = useState('')\r\n    const [buttonName, setButtonName] = useState('로그인')\r\n\r\n    useEffect(() => {\r\n        store.setReady(true)\r\n    })\r\n    useEffect(() => {\r\n        //이미 로그인이 되어있다면 스테이터스로 이동\r\n        if(store.login && location.pathname === '/login'){ \r\n            history.replace('/loginStatus')\r\n        }\r\n        if(location.pathname.indexOf('register') > -1){\r\n            setButtonName('회원가입')\r\n        }else if(location.pathname.indexOf('withdraw') > -1){\r\n            setButtonName('회원탈퇴')\r\n        }else{\r\n            setButtonName('로그인')\r\n        }\r\n    },[location, store.login, history])\r\n\r\n    const changeUsername = e => {\r\n        const pattern = /[^a-zA-Z0-9ㄱ-ㅎㅏ-ㅣ가-힣_]/g\r\n        const value = e.target.value = e.target.value.replace(/\\s/g,'_').replace(pattern,'')\r\n        if(value.length < 3){ //3글자 이상\r\n            setCheckUsername('- 3자 이상 입력해주세요')\r\n        }else if(value.length > 20){ //20글자 이하\r\n            setCheckUsername('- 20자 이하로 입력해주세요')\r\n        }else{\r\n            setCheckUsername('')\r\n        }\r\n    }\r\n    const changePassword = e => {\r\n        const {value} = e.target\r\n        const passwordConfirm = document.querySelector('[name=passwordConfirm]')\r\n        \r\n        //비밀번호가 변경되면 비밀번호 확인은 초기화\r\n        if(passwordConfirm){\r\n            passwordConfirm.value = ''\r\n            setCheckPasswordConfirm('')\r\n        }\r\n\r\n        if(value.length < 6){ //6글자 이상\r\n            setCheckPassword('- 6자 이상 입력해주세요')\r\n        }else if(value.length > 20){ //20글자 이하\r\n            setCheckPassword('- 20자 이하로 입력해주세요')\r\n        }else{\r\n            setCheckPassword('')\r\n        }\r\n    }\r\n    const changePasswordConfirm = e => {\r\n        const {value} = e.target\r\n        const password = document.querySelector('[name=password]')\r\n        \r\n        if(value !== password.value && value.length >= 1){ //password와 같으면\r\n            setCheckPasswordConfirm('- 비밀번호가 일치하지 않습니다')\r\n        }else{\r\n            setCheckPasswordConfirm('')\r\n        }\r\n    }\r\n    const clickButton = e => {\r\n        e.preventDefault();\r\n        let url = process.env.REACT_APP_URL+'/auth'\r\n        //url = process.env.REACT_APP_LOCAL_URL+'/auth'\r\n        \r\n        const pattern = /[^a-zA-Z0-9가-힣_]/g\r\n        let username = document.querySelector('[name=username]')\r\n        if(username) username = username.value = username.value.replace(pattern,'')\r\n        let password = document.querySelector('[name=password]')\r\n        if(password) password = password.value\r\n\r\n        if(checkUsername === '' && password.length >= 1 &&\r\n            checkPassword === '' && checkPasswordConfirm === '')\r\n        { //입력폼에 이상이 없으면 fetch submit\r\n            if(buttonName === '회원가입'){\r\n                url += '/register'\r\n                fetch(url,{\r\n                    mode: 'cors',\r\n                    method: 'POST',\r\n                    credentials: \"include\",\r\n                    headers:{'Content-Type': 'application/json'},\r\n                    body: JSON.stringify({\r\n                        username: username,\r\n                        password: password,\r\n                    }),\r\n                })\r\n                .then(res => {\r\n                    if(res.status===200 || res.status===201) { //성공하면 아래 then 작동\r\n                        res.json().then(res =>{ \r\n                            alert(res.username+'님의 회원가입에 성공했습니다 :D')\r\n                            history.go(-1)\r\n                        })\r\n                    }else{\r\n                        let message = '회원가입에 실패했습니다 :('\r\n                        if(res.status === 409){\r\n                            message += '\\n이미 존재하는 아이디입니다.'\r\n                        }\r\n                        if(res.status === 400){\r\n                            message += '\\n아이디나 비밀번호를 확인해주세요.'\r\n                        }\r\n                        alert(message)\r\n                    }\r\n                })\r\n                .catch(e => console.error(e))\r\n            }else if(buttonName === '회원탈퇴'){\r\n                if(window.confirm(\"계정 탈퇴시 복구할 수 없습니다. 정말로 탈퇴하시겠습니까?\")){\r\n                    url += '/withdraw'\r\n                    fetch(url,{\r\n                        mode: 'cors',\r\n                        method: 'DELETE',\r\n                        credentials: \"include\",\r\n                        headers:{'Content-Type': 'application/json'},\r\n                        body: JSON.stringify({\r\n                            username: store.login.username,\r\n                            password: password,\r\n                        }),\r\n                    })\r\n                    .then(res => {\r\n                        if(res.status===200) { //삭제하면 Ok\r\n                            alert('계정이 탈퇴되었습니다. 또 들러 주세요 :D')\r\n                            history.push('/')\r\n                        }else{\r\n                            let message = '탈퇴에 실패했습니다 :('\r\n                            if(res.status === 204){\r\n                                message += '\\n존재하지 않는 아이디입니다.'\r\n                            }\r\n                            if(res.status === 401){\r\n                                message += '\\n비밀번호를 확인해주세요.'\r\n                            }\r\n                            alert(message)\r\n                        }\r\n                    })\r\n                    .catch(e => console.error(e))\r\n                }\r\n            }else{ //로그인\r\n                url += '/login'\r\n                fetch(url,{\r\n                    mode: 'cors',\r\n                    method: 'POST',\r\n                    credentials: \"include\",\r\n                    headers:{'Content-Type': 'application/json'},\r\n                    body: JSON.stringify({\r\n                        username: username,\r\n                        password: password,\r\n                    }),\r\n                })\r\n                .then(res => {\r\n                    if(res.status===200 || res.status===201) { //성공하면 아래 then 작동\r\n                        res.json().then(res =>{ \r\n                            store.setLogin(res)\r\n                            alert(res.username+'님 환영합니다 :D')\r\n                            history.go(-1)\r\n                        })\r\n                    }else{\r\n                        let message = '로그인에 실패했습니다 :('\r\n                        if(res.status === 401){\r\n                            message += '\\n로그인 정보를 확인해주세요.'\r\n                        }\r\n                        alert(message)\r\n                    }\r\n                })\r\n                .catch(e => console.error(e))\r\n            }\r\n        }else{\r\n            alert('입력 정보를 확인해주세요.')\r\n        }\r\n    }\r\n\r\n    return(\r\n        <div id=\"background\">\r\n            <div id=\"loginWrapper\">\r\n                <form id=\"login\">\r\n                    <Switch>\r\n                        <Route path={['/login','/register','/withdraw']}>\r\n                            <div className=\"text\">아이디</div>\r\n                            {buttonName === '회원탈퇴' ?\r\n                                <div>{store.login.username}</div> :\r\n                                <input name=\"username\" onChange={changeUsername}/>\r\n                            }\r\n\r\n                            <div className=\"check\">{checkUsername}</div>\r\n\r\n                            <div className=\"text\">비밀번호</div>\r\n                            <input name=\"password\" type=\"password\" onChange={changePassword} autoComplete=\"currnet-password\"/>\r\n                            <div className=\"check\">{checkPassword}</div>\r\n                            \r\n                            {buttonName === '회원가입' &&\r\n                            <>\r\n                                <div className=\"text\">비밀번호 확인</div>\r\n                                <input name=\"passwordConfirm\" type=\"password\" onChange={changePasswordConfirm} autoComplete=\"currnet-password\"/>\r\n                                <div className=\"check\" id=\"checkPasswordConfirm\">{checkPasswordConfirm}</div>\r\n                            </>}\r\n\r\n                            {buttonName === '회원탈퇴' \r\n                            ? <button style={{background: 'red'}} onClick={clickButton}>{buttonName}</button>\r\n                            : <button onClick={clickButton}>{buttonName}</button>}\r\n\r\n                            {browser === 'safari' &&\r\n                            <div className=\"text\" style={{fontSize: '0.8rem', textAlign: 'center'}}>\r\n                                (Safari의 경우 설정을 변경해주셔야 로그인이 가능합니다.<br/>설정 → Safari → 개인 정보 보호 및 보안 → <br/>크로스 사이트 추적방지 OFF, 모든 쿠키 차단 OFF) \r\n                            </div>}\r\n                        </Route>\r\n                        <Route path={['/loginStatus']}>\r\n                            {store.login ? \r\n                            <div className=\"center\">\r\n                                {store.login.username}님은 현재 <span style={{color:'green'}}>로그인</span> 되어있습니다 :D<br/>\r\n                                <span style={{fontSize: '0.8rem'}}>(로그인은 최대 일주일간 유지됩니다.)</span>\r\n                            </div> : \r\n                            <div className=\"center\">\r\n                                재 로그인이 필요합니다 :D\r\n                            </div>}\r\n                        </Route>\r\n                    </Switch>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    ) \r\n}\r\nexport default React.memo(Login)\r\n","import React, { useEffect, useState } from 'react'\r\nimport './Quill.css'\r\nimport 'quill/dist/quill.snow.css'\r\nimport { useQuill } from 'react-quilljs'\r\nimport { AppContext } from '../App'\r\nimport Axios from 'axios'\r\n\r\nfunction Quill({ match, location, history }) {\r\n\tconst store = React.useContext(AppContext)\r\n\tlet { postId } = match.params\r\n\tconst [post, setPost] = useState()\r\n\tconst [subMenus, setSubMenus] = useState()\r\n\r\n\tconst modules = {\r\n\t\ttoolbar: [\r\n\t\t\t['bold', 'italic', 'underline', 'strike'],\r\n\t\t\t[{ size: ['small', false, 'large', 'huge'] }, { header: 1 }, { header: 2 }],\r\n\t\t\t[{ align: [] }],\r\n\t\t\t[{ color: [] }, { background: [] }],\r\n\t\t\t[{ indent: '-1' }, { indent: '+1' }],\r\n\t\t\t[{ list: 'ordered' }, { list: 'bullet' }],\r\n\t\t\t['code-block', 'blockquote'],\r\n\t\t\t['link', 'image', 'video'],\r\n\t\t\t['clean'],\r\n\t\t],\r\n\t\tsyntax: true,\r\n\t}\r\n\tconst formats = ['bold', 'italic', 'underline', 'strike', 'code-block', 'blockquote', 'size', 'header', 'align', 'color', 'background', 'indent', 'list', 'link', 'image', 'video', 'clean']\r\n\r\n\tconst { quill, quillRef } = useQuill({ modules, formats })\r\n\r\n\tuseEffect(() => {\r\n\t\t//포스트 불러오기 axios\r\n\t\tif (postId !== undefined && Number(postId) >= 1 && quill) {\r\n\t\t\t//postId가 없으면 포스트 내용 가져오지 않기\r\n\t\t\tlet url = process.env.REACT_APP_URL + '/posts/' + postId\r\n\t\t\t//url = process.env.REACT_APP_LOCAL_URL+'/posts/' + postId\r\n\r\n\t\t\tAxios.get(url, {\r\n\t\t\t\twithCredentials: true,\r\n\t\t\t}) //포스트 불러오기\r\n\t\t\t\t.then((res) => {\r\n\t\t\t\t\tlet title = document.querySelector('[name=title]')\r\n\t\t\t\t\ttitle.value = res.data.title\r\n\r\n\t\t\t\t\tconst tags = document.querySelectorAll('[type=radio]')\r\n\t\t\t\t\tfor (let i of tags) {\r\n\t\t\t\t\t\t//체크 초기화\r\n\t\t\t\t\t\ti.checked = false\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (res.data.tags) {\r\n\t\t\t\t\t\t//체크박스 체크\r\n\t\t\t\t\t\tconst mainMenu = document.querySelector(`[value=${res.data.tags[0]}]`)\r\n\t\t\t\t\t\tif (mainMenu) mainMenu.checked = true\r\n\t\t\t\t\t\tfor (let i of store.menus) {\r\n\t\t\t\t\t\t\tif (i.name === res.data.tags[0]) {\r\n\t\t\t\t\t\t\t\t//선택된 메인메뉴의 서브메뉴를 그리기\r\n\t\t\t\t\t\t\t\tsetSubMenus(i.subMenus)\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t//포스트바디 가져오기\r\n\t\t\t\t\turl = process.env.REACT_APP_URL + '/posts/postBody/' + postId\r\n\t\t\t\t\t//url = process.env.REACT_APP_LOCAL_URL + '/posts/postBody/' + postId\r\n\t\t\t\t\tAxios.get(url)\r\n\t\t\t\t\t\t.then((res2) => {\r\n\t\t\t\t\t\t\tif (typeof res2.data.body === 'string') quill.setText(res2.data.body)\r\n\t\t\t\t\t\t\t//body가 string이면 setText\r\n\t\t\t\t\t\t\telse quill.setContents(res2.data.body) //body가 string이 아니면 setContents : Delta\r\n\t\t\t\t\t\t\tsetPost({\r\n\t\t\t\t\t\t\t\t...res.data,\r\n\t\t\t\t\t\t\t\tbody: res2.data.body,\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t\t.catch((e) => {\r\n\t\t\t\t\t\t\talert(e)\r\n\t\t\t\t\t\t}) //실패\r\n\t\t\t\t\tstore.setReady(true)\r\n\t\t\t\t})\r\n\t\t\t\t.catch((e) => {\r\n\t\t\t\t\talert(e)\r\n\t\t\t\t\tstore.setReady(true)\r\n\t\t\t\t}) //실패\r\n\t\t} else {\r\n\t\t\tstore.setReady(true)\r\n\t\t}\r\n\t}, [location, quill, postId, store.menus])\r\n\r\n\tuseEffect(() => {\r\n\t\tif (subMenus && post) {\r\n\t\t\tconst subMenu = document.querySelector(`[value=${post.tags[1]}]`)\r\n\t\t\tif (subMenu) subMenu.checked = true\r\n\t\t}\r\n\t\tconst newSubMenu = document.querySelector('[name=newSubMenu]')\r\n\t\tif (newSubMenu) newSubMenu.value = ''\r\n\t}, [subMenus, post])\r\n\r\n\t//글 작성 or 수정\r\n\tconst clickPost = (e) => {\r\n\t\tif (!store.login || (store.login && store.login.username !== 'imki123')) {\r\n\t\t\talert('글 작성은 블로그 주인만 가능합니다 ^^;')\r\n\t\t\treturn\r\n\t\t}\r\n\t\tif (!window.confirm('글을 게시하시겠습니까?')) {\r\n\t\t\treturn\r\n\t\t}\r\n\t\t//제목, 내용, 태그가 있는지 검사\r\n\t\tlet title = document.querySelector('[name=title]')\r\n\t\tconst content = quill.getContents()\r\n\t\tconst text = quill.getText()\r\n\t\tconst mainMenu = document.querySelector('[name=mainMenu]:checked')\r\n\t\tlet tags = []\r\n\t\tconst subMenu = document.querySelector('[name=subMenu]:checked')\r\n\t\tconst newMainMenu = document.querySelector('[name=newMainMenu]')\r\n\t\tconst newSubMenu = document.querySelector('[name=newSubMenu]')\r\n\r\n\t\tif (mainMenu) {\r\n\t\t\ttags[0] = mainMenu.value\r\n\t\t}\r\n\t\tif (newMainMenu.value !== '') {\r\n\t\t\ttags[0] = newMainMenu.value\r\n\t\t}\r\n\t\tif (subMenu) {\r\n\t\t\tif (subMenu.value !== '') tags[1] = subMenu.value //체크 된 서브메뉴 추가\r\n\t\t}\r\n\t\tif (newSubMenu.value !== '') {\r\n\t\t\ttags[1] = newSubMenu.value\r\n\t\t}\r\n\r\n\t\tif (title.value.length === 0) {\r\n\t\t\talert('제목을 입력해주세요.')\r\n\t\t\treturn\r\n\t\t} else if (quill.getLength() === 1) {\r\n\t\t\talert('내용을 입력해주세요.')\r\n\t\t\treturn\r\n\t\t} else if (tags.length < 1 && newMainMenu.value === '') {\r\n\t\t\talert('메인메뉴를 1개 선택해주세요.')\r\n\t\t\treturn\r\n\t\t}\r\n\r\n\t\t//url에 POST 또는 PATCH 요청\r\n\t\tlet url = process.env.REACT_APP_URL + '/posts'\r\n\t\t//url = process.env.REACT_APP_LOCAL_URL + '/posts'\r\n\t\tlet method = 'POST',\r\n\t\t\tmessage = '글 작성 성공'\r\n\t\tif (e.target.id === 'PATCH') {\r\n\t\t\tif (postId !== undefined && Number(postId) >= 1) {\r\n\t\t\t\turl += '/' + postId\r\n\t\t\t\tmethod = 'PATCH'\r\n\t\t\t\tmessage = '글 수정 성공'\r\n\t\t\t} else {\r\n\t\t\t\tconsole.log('postId 비정상, 글 수정 실패')\r\n\t\t\t\treturn\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tAxios(url, {\r\n\t\t\t//포스트 작성, 수정 (최대 10mb. koa-bodyparser에서 설정.)\r\n\t\t\tmethod: method,\r\n\t\t\twithCredentials: true, //CORS\r\n\t\t\tdata: {\r\n\t\t\t\ttitle: title.value,\r\n\t\t\t\tbody: content,\r\n\t\t\t\ttext: text,\r\n\t\t\t\ttags: tags,\r\n\t\t\t},\r\n\t\t})\r\n\t\t\t.then((res) => {\r\n\t\t\t\talert(message) //성공\r\n\t\t\t\tpostId = res.data.postId\r\n\t\t\t\tif (method === 'POST') {\r\n\t\t\t\t\t//글 작성시 menus 카운트 증가\r\n\t\t\t\t\tAxios()\r\n\t\t\t\t}\r\n\t\t\t\tif (postId > 1) {\r\n\t\t\t\t\thistory.push(`/posts/${postId}`) //수정 성공하면 해당 글로 이동함\r\n\t\t\t\t} else {\r\n\t\t\t\t\thistory.push(`/posts/1`) //인사말은 홈으로 이동\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\t.catch((e) => alert(e)) //실패\r\n\t}\r\n\r\n\t// 화면 리사이즈시 editor 아래 마진 변경\r\n\tuseEffect(() => {\r\n\t\tconst editor = document.querySelector('#editor')\r\n\t\tconst toolbar = document.querySelector('.ql-toolbar')\r\n\t\tif (editor && toolbar) {\r\n\t\t\teditor.style.marginBottom = toolbar.clientHeight + 10 + 'px'\r\n\t\t}\r\n\t\twindow.removeEventListener('resize', function () {})\r\n\t\twindow.addEventListener('resize', function () {\r\n\t\t\tif (editor && toolbar) {\r\n\t\t\t\teditor.style.marginBottom = toolbar.clientHeight + 10 + 'px'\r\n\t\t\t}\r\n\t\t})\r\n\t}, [location])\r\n\r\n\t//메인메뉴 추가시 라디오박스 체크 해제, 띄어쓰기를 _로 변경\r\n\tconst changeMainMenu = (e) => {\r\n\t\tif (store.menus) {\r\n\t\t\tfor (let i of store.menus) {\r\n\t\t\t\tif (i.name === e.target.value) {\r\n\t\t\t\t\tsetSubMenus(i.subMenus)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (e.target.type !== 'radio') {\r\n\t\t\t//인풋박스 입력하면 라디오 체크 해제\r\n\t\t\te.target.value = e.target.value.replace(/\\s/g, '_')\r\n\t\t\tconst mainMenu = document.querySelector('[name=mainMenu]:checked')\r\n\t\t\tif (mainMenu) mainMenu.checked = false\r\n\t\t}\r\n\t}\r\n\t//서브메뉴 추가시 라디오박스 체크 해제, 띄어쓰기를 _로 변경\r\n\tconst changeSubMenu = (e) => {\r\n\t\tif (e.target.type !== 'radio') {\r\n\t\t\t//인풋박스 입력하면 라디오 체크 해제\r\n\t\t\te.target.value = e.target.value.replace(/\\s/g, '_')\r\n\t\t\tconst subMenu = document.querySelector('[name=subMenu]:checked')\r\n\t\t\tif (subMenu) subMenu.checked = false\r\n\t\t} else {\r\n\t\t\tconst newSubMenu = document.querySelector('[name=newSubMenu]')\r\n\t\t\tif (newSubMenu) newSubMenu.value = ''\r\n\t\t}\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className=\"quill\">\r\n\t\t\t<div className=\"quillTitle\">\r\n\t\t\t\t<input name=\"title\" placeholder=\"제목\" />\r\n\t\t\t</div>\r\n\t\t\t<div id=\"editor\">\r\n\t\t\t\t<div ref={quillRef} />\r\n\t\t\t\t<div id=\"tags\" className=\"no-drag\">\r\n\t\t\t\t\t<div id=\"tagsTitle\">\r\n\t\t\t\t\t\ttags\r\n\t\t\t\t\t\t{postId !== undefined && Number(postId) >= 1 ? (\r\n\t\t\t\t\t\t\t<button className=\"editorButton\" onClick={clickPost} id=\"PATCH\">\r\n\t\t\t\t\t\t\t\t글 수정\r\n\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t<button className=\"editorButton\" onClick={clickPost}>\r\n\t\t\t\t\t\t\t\t새글 작성\r\n\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t메인메뉴:\r\n\t\t\t\t\t\t{store.menus &&\r\n\t\t\t\t\t\t\tstore.menus.map((i) => (\r\n\t\t\t\t\t\t\t\t<label key={i.name}>\r\n\t\t\t\t\t\t\t\t\t<input type=\"radio\" name=\"mainMenu\" value={i.name} onClick={changeMainMenu} />\r\n\t\t\t\t\t\t\t\t\t{i.name}\r\n\t\t\t\t\t\t\t\t</label>\r\n\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t<input name=\"newMainMenu\" placeholder=\"메인메뉴 추가\" onChange={changeMainMenu} autoComplete=\"off\"></input>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t서브메뉴:\r\n\t\t\t\t\t\t<label>\r\n\t\t\t\t\t\t\t<input type=\"radio\" name=\"subMenu\" value=\"\" onClick={changeSubMenu} /> 선택안함\r\n\t\t\t\t\t\t</label>\r\n\t\t\t\t\t\t{subMenus &&\r\n\t\t\t\t\t\t\tsubMenus.map((i) => (\r\n\t\t\t\t\t\t\t\t<label key={i.name}>\r\n\t\t\t\t\t\t\t\t\t<input type=\"radio\" name=\"subMenu\" value={i.name} onClick={changeSubMenu} /> {i.name}\r\n\t\t\t\t\t\t\t\t</label>\r\n\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t<input name=\"newSubMenu\" placeholder=\"서브메뉴 추가\" autoComplete=\"off\" onChange={changeSubMenu}></input>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\nexport default React.memo(Quill)\r\n","import React, { useEffect } from 'react'\r\nimport './Paging.css'\r\nimport {NavLink, useLocation } from 'react-router-dom'\r\nimport queryString from 'query-string';\r\n\r\nfunction Paging(props){\r\n    const {postCount} = props\r\n\tconst location = useLocation()\r\n\tconst search = queryString.parse(location.search)\r\n    let paging = null\r\n    const pages = []\r\n\tif (postCount) {\r\n\t\tconst page = Number(search.page) || 1\r\n\t\tconst startPost = postCount - (page - 1) * 10\r\n\t\tpaging = {\r\n\t\t\tpage: page,\r\n\t\t\tlastPage: Math.ceil(postCount / 10),\r\n\t\t\tpostCount: postCount,\r\n\t\t\tstartPost: startPost,\r\n        }\r\n        \r\n        for(let i=0; i<paging.lastPage; i++){\r\n            pages.push(i+1)\r\n        }\r\n\t}\r\n\r\n    useEffect(() => {\r\n        const links = document.querySelectorAll('.paging a')\r\n        for(let i=0; i<links.length; i++){\r\n            if(links[i].innerHTML === search.page){\r\n                links[i].className = 'activePage'\r\n            }else{\r\n                links[i].className = 'inactivePage'\r\n            }\r\n            if(search.page === undefined){ //search에 page가 없으면 1을 activePage로 설정\r\n                if(links[i].innerHTML === '1'){\r\n                    links[i].className = 'activePage'\r\n                }\r\n            }\r\n        }\r\n    }, [search, postCount])\r\n\r\n    \r\n    return(\r\n        <div className=\"paging\">\r\n            {pages.map((p, idx) =>  \r\n                <NavLink path={location.pathname} to={`${location.pathname}?page=${p}`} \r\n                    className=\"inactivePage\" key={idx}>{p}</NavLink>)}\r\n        </div>\r\n    )\r\n}\r\nexport default React.memo(Paging)","import Axios from 'axios'\r\nimport React, { useEffect, useState } from 'react'\r\nimport { AppContext } from '../App'\r\nimport Paging from './Paging'\r\nimport PostList from './PostList'\r\n\r\nimport './Tags.css'\r\n\r\nfunction Tags({ match, location, history }) {\r\n\tconst store = React.useContext(AppContext)\r\n\tconst { tag } = match.params\r\n\tconst [lists, setLists] = useState([])\r\n\tuseEffect(() => {\r\n\t\tstore.setReady(false)\r\n\t\tlet url = process.env.REACT_APP_URL + '/posts/tag/' + tag + location.search\r\n\t\t//url = process.env.REACT_APP_LOCAL_URL + '/posts/tag/' + tag + location.search\r\n\r\n\t\tAxios.get(url, {\r\n\t\t\twithCredentials: true,\r\n\t\t})\r\n\t\t\t.then((res) => {\r\n\t\t\t\tif(res.data.list.length < 1){\r\n\t\t\t\t\talert('찾으시는 페이지가 없습니다.')\r\n\t\t\t\t\thistory.go(-1)\r\n\t\t\t\t}else{\r\n\t\t\t\t\tsetLists(res.data.list)\r\n\t\t\t\t\tstore.setReady(true)\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\t.catch((e) => alert(e)) //실패\r\n\t},[tag, location, history])\r\n\r\n\treturn (\r\n\t\t<div className=\"postListWrapper\">\r\n\t\t\t<div className=\"postListTitle\">{tag.substring(0,1).toUpperCase() + tag.substring(1)}</div>\r\n\t\t\t{lists && lists.map((i, idx) => <PostList no={lists.length - idx} list={i} key={i.postId} />)}\r\n\t\t\t{<Paging postCount={lists.length} />}\r\n\t\t</div>\r\n\t)\r\n}\r\nexport default React.memo(Tags)\r\n","import React, { useEffect } from 'react'\r\nimport AddCircleOutlineIcon from '@material-ui/icons/AddCircleOutline'\r\nimport ArrowUpwardIcon from '@material-ui/icons/ArrowUpward'\r\nimport './Content.css'\r\nimport { Link, Route, useLocation, Switch } from 'react-router-dom'\r\nimport { AppContext } from '../App'\r\n\r\nimport Post from './Post'\r\nimport NotFoundPage from './NotFoundPage'\r\nimport Login from './Login'\r\nimport Quill from './Quill'\r\nimport Tags from './Tags'\r\n\r\nfunction Content(props) {\r\n\tconst store = React.useContext(AppContext)\r\n\tconst location = useLocation()\r\n\r\n\tuseEffect(() => {\r\n\t\tconst resize = () => {\r\n\t\t\tstore.resizeTextarea()\r\n\t\t}\r\n\r\n\t\twindow.addEventListener('resize', resize)\r\n\t\tconst loading = document.querySelector('#loading')\r\n\t\tif (store.ready) {\r\n\t\t\tif (loading) loading.style.display = 'none'\r\n\t\t\tif (location.hash) {\r\n\t\t\t\t//hash가 있으면 해당 엘리먼트로 스크롤\r\n\t\t\t\tsetTimeout(function () {\r\n\t\t\t\t\t//elem이 로드된 이후에 스크롤이 되야해서 0.1초 타임아웃 추가..\r\n\t\t\t\t\tconst content = document.querySelector('#content')\r\n\t\t\t\t\tconst elem = document.querySelector(location.hash)\r\n\t\t\t\t\tif (elem) {\r\n\t\t\t\t\t\tlet contentScroll = content.scrollTop\r\n\t\t\t\t\t\tlet elemTop = elem.offsetTop\r\n\t\t\t\t\t\tlet dif = (elemTop - contentScroll) / 50\r\n\t\t\t\t\t\tif (elemTop > contentScroll) {\r\n\t\t\t\t\t\t\tconst frame = setInterval(function () {\r\n\t\t\t\t\t\t\t\tif (content.scrollTop + dif >= elemTop || content.scrollTop >= content.scrollHeight - content.clientHeight) {\r\n\t\t\t\t\t\t\t\t\tclearInterval(frame)\r\n\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\tcontent.scrollTop += dif\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}, 10)\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tconst frame = setInterval(function () {\r\n\t\t\t\t\t\t\t\tif (content.scrollTop <= elemTop) {\r\n\t\t\t\t\t\t\t\t\tclearInterval(frame)\r\n\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\tcontent.scrollTop += dif\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}, 10)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}, 10)\r\n\t\t\t}\r\n\t\t\tsetTimeout(function () {\r\n\t\t\t\tstore.resizeTextarea()\r\n\t\t\t}, 10)\r\n\t\t} else {\r\n\t\t\tif (loading) loading.style.display = 'flex'\r\n\t\t}\r\n\t\treturn window.removeEventListener('resize', resize)\r\n\t}, [location.hash, store])\r\n\r\n\tconst scrollUp = (e) => {\r\n\t\t// content의 스크롤을 가장 위로\r\n\t\tconst content = document.querySelector('#content')\r\n\t\tlet contentScroll = content.scrollTop\r\n\t\tlet dif = contentScroll / 50\r\n\t\tconst frame = setInterval(function () {\r\n\t\t\tif (content.scrollTop <= 0) {\r\n\t\t\t\tclearInterval(frame)\r\n\t\t\t} else {\r\n\t\t\t\tcontent.scrollTop -= dif\r\n\t\t\t}\r\n\t\t}, 10)\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div id=\"content\" className=\"slideMenu\">\r\n\t\t\t{/* FAB */}\r\n\t\t\t{store.login && store.login.username === 'imki123' && (\r\n\t\t\t\t<Link id=\"postFAB\" className=\"hover\" to=\"/quill\">\r\n\t\t\t\t\t<AddCircleOutlineIcon />\r\n\t\t\t\t</Link>\r\n\t\t\t)}\r\n\t\t\t<div id=\"scrollFAB\" className=\"hover\" onClick={scrollUp}>\r\n\t\t\t\t<ArrowUpwardIcon />\r\n\t\t\t</div>\r\n\t\t\t<div id=\"menuFAB\" className=\"hover\" onClick={store.slideMenu}>\r\n\t\t\t\t<img alt=\"MENU\" src={process.env.PUBLIC_URL + '/images/guide_icon.png'} />\r\n\t\t\t</div>\r\n\r\n\t\t\t{/* 로딩 */}\r\n\t\t\t<div id=\"loading\">\r\n\t\t\t\t<img alt=\"Loading\" src={process.env.PUBLIC_URL + '/images/loading.gif'} />\r\n\t\t\t</div>\r\n\r\n\t\t\t<Switch>\r\n\t\t\t\t<Route path={['/login', '/register', '/loginStatus', '/withdraw']} component={Login}/>\r\n\t\t\t\t<Route path=\"/quill/:postId?\" component={Quill}/>\r\n\t\t\t\t<Route path=\"/tags/:tag\" component={Tags}/>\r\n\t\t\t\t<Route path=\"/\" exact component={Post}/>\r\n\t\t\t\t<Route path=\"/posts/:postId\" component={Post}/>\r\n\t\t\t\t<Route path=\"/NotFoundPage\" component={NotFoundPage}/>\r\n\t\t\t\t<Route path=\"*\" component={NotFoundPage}/>\r\n\t\t\t</Switch>\r\n\r\n\t\t\t{/* 텍스트 에어리어 높이 조정을 위한 안보이는 가짜 텍스트에어리어 */}\r\n\t\t\t<textarea disabled id=\"fakeTextarea\" />\r\n\t\t</div>\r\n\t)\r\n}\r\nexport default React.memo(Content)\r\n","import React from 'react'\r\nimport './Setting.css'\r\nimport { Link} from 'react-router-dom'\r\nimport { AppContext } from '../App'\r\n\r\nfunction Setting(props) {\r\n    const store = React.useContext(AppContext)\r\n\r\n    const closeSetting = e => {\r\n        const settingWrapper = document.querySelector('#settingWrapper')\r\n        e.stopPropagation()\r\n        setTimeout(function(){\r\n            settingWrapper.style.display = 'none'\r\n        },200)\r\n    }\r\n\r\n    const logout = e => {\r\n        if(window.confirm('로그아웃 하시겠습니까?')){\r\n            let url = process.env.REACT_APP_URL+'/auth/logout'\r\n            //url = process.env.REACT_APP_LOCAL_URL+'/auth/logout'\r\n\r\n            fetch(url,{\r\n                mode: 'cors',\r\n                method: 'POST',\r\n                credentials: \"include\",\r\n            })\r\n            .then(res => {\r\n                if(res.status===204) { //로그아웃 하면 204\r\n                    console.log('로그아웃 성공')\r\n                    store.setLogin(false)\r\n                }\r\n                else{\r\n                    console.log('로그아웃 실패')\r\n                }\r\n            })\r\n            .catch(e => console.error(e))\r\n        }\r\n    }\r\n\r\n\treturn(\r\n        <div id=\"settingWrapper\" onClick={closeSetting}>\r\n            <div id=\"setting\">\r\n                <div id=\"settingListWrapper\">\r\n                    {store.login ? \r\n                        <Link className=\"settingList\" to=\"/loginStatus\">{store.login.username}</Link> :\r\n                        <Link className=\"settingList\" to=\"/login\">로그인</Link>    \r\n                    }\r\n                    {store.login && <div className=\"settingList\" onClick={logout}>로그아웃</div>}\r\n                    {!store.login && <Link className=\"settingList\" to=\"/register\">회원가입</Link>}\r\n                    {store.login && <Link className=\"settingList\" to=\"/withdraw\">회원탈퇴</Link>}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    ) \r\n}\r\nexport default React.memo(Setting)\r\n","import React, { createContext, useEffect, useState } from 'react'\r\nimport './App.css'\r\nimport { useLocation } from 'react-router-dom'\r\n\r\nimport Header from './components/Header'\r\nimport Body from './components/Body'\r\nimport Guide from './components/Guide'\r\nimport Content from './components/Content'\r\nimport Setting from './components/Setting'\r\nimport Axios from 'axios'\r\nimport Meta from './components/Meta'\r\n\r\nconst AppContext = createContext()\r\n\r\nfunction App() {\r\n\tconst location = useLocation() //페이지 경로 변경 감지\r\n\tconst [ready, setReady] = useState(false)\r\n\tconst [posts, setPosts] = useState([])\r\n\tconst [headers, setHeaders] = useState({})\r\n\tconst [login, setLogin] = useState(false)\r\n\tconst [refresh, setRefresh] = useState(false)\r\n\tconst [menus, setMenus] = useState([\r\n\t\t{ name: 'home', count: 1, order: 1 },\r\n\t\t{ name: 'programming', count: 1, order: 2 },\r\n\t\t{ name: 'article', count: 1, order: 3 },\r\n\t])\r\n\r\n\tconst resizeTextarea = (e) => {\r\n\t\t//텍스트에어리어를 찾아서 크기를 글자 높이에 맞게 변경하기\r\n\t\t//textarea 높이 조정\r\n\t\tconst fake = document.querySelector('#fakeTextarea')\r\n\t\tlet textareas = []\r\n\t\tif (e && e.target) {\r\n\t\t\ttextareas.push(e.target)\r\n\t\t} else {\r\n\t\t\ttextareas = document.querySelectorAll('textarea')\r\n\t\t}\r\n\r\n\t\tif (textareas && fake) {\r\n\t\t\tfor (let i = 0; i < textareas.length; i++) {\r\n\t\t\t\tfake.style.height = '1px'\r\n\t\t\t\tfake.style.width = textareas[i].clientWidth + 'px'\r\n\t\t\t\tfake.value = textareas[i].value\r\n\t\t\t\ttextareas[i].style.height = 5 + fake.scrollHeight + 'px'\r\n\t\t\t}\r\n\t\t\tfake.value = ''\r\n\t\t\tfake.style.height = '0px'\r\n\t\t}\r\n\t}\r\n\r\n\tconst slideMenu = () => {\r\n\t\t//메뉴버튼 클릭 시 메뉴 보이기 & 숨기기\r\n\t\tconst body = document.querySelector('#body')\r\n\t\tconst guideWrapper = document.querySelector('#guideWrapper')\r\n\t\tconst content = document.querySelector('#content')\r\n\r\n\t\tif (guideWrapper.style.left.replace('px', '') > -100) {\r\n\t\t\t//메뉴 닫기\r\n\t\t\tguideWrapper.parentNode.style.width = '0' // 회색 0\r\n\t\t\tcontent.style.width = 'calc(100% - 16px)' //콘텐트 100% - 16px\r\n\t\t\tif (body.clientWidth < 500) {\r\n\t\t\t\t//모바일\r\n\t\t\t\tguideWrapper.style.left = '-230px' // 메뉴 왼쪽으로\r\n\t\t\t} else {\r\n\t\t\t\tguideWrapper.style.left = '-312px' // 메뉴 왼쪽으로\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\t//메뉴 열기\r\n\t\t\tguideWrapper.style.left = '0px' // 메뉴 230\r\n\t\t\tif (body.clientWidth < 500) {\r\n\t\t\t\t//모바일\r\n\t\t\t\tguideWrapper.parentNode.style.width = '100%' // 회색 100%\r\n\t\t\t} else {\r\n\t\t\t\t//PC\r\n\t\t\t\tcontent.style.width = `calc(100% - 312px - 16px)`\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tconst checkToken = (func) => {\r\n\t\t//로그인 되어있는지 토큰 체크하기\r\n\t\tlet url = process.env.REACT_APP_URL + '/auth/check'\r\n\t\t//url = process.env.REACT_APP_LOCAL_URL+'/auth/check'\r\n\t\tAxios.get(url, { withCredentials: true })\r\n\t\t\t.then((res) => {\r\n\t\t\t\tif (res.data) {\r\n\t\t\t\t\tconsole.log('토큰 체크 성공')\r\n\t\t\t\t\tsetLogin(res.data)\r\n\t\t\t\t} else {\r\n\t\t\t\t\tconsole.log('토큰 없음') //res.status===204(No Content)\r\n\t\t\t\t\tsetLogin(false)\r\n\t\t\t\t}\r\n\t\t\t\tif (func) func()\r\n\t\t\t})\r\n\t\t\t.catch((e) => {\r\n\t\t\t\t//실패\r\n\t\t\t\tif (func) func()\r\n\t\t\t})\r\n\t}\r\n\r\n\t//useContext 이용하여 하위 컴포넌트에 상태 전달\r\n\tconst store = {\r\n\t\tready,\r\n\t\tsetReady,\r\n\t\tposts,\r\n\t\tsetPosts,\r\n\t\theaders,\r\n\t\tsetHeaders,\r\n\t\tlogin,\r\n\t\tsetLogin,\r\n\t\trefresh,\r\n\t\tsetRefresh,\r\n\t\tmenus,\r\n\t\tsetMenus,\r\n\t\tresizeTextarea,\r\n\t\tslideMenu,\r\n\t\tcheckToken,\r\n\t}\r\n\r\n\t// 포스트에서 태그 정보를 가져와서 메뉴에 표시함, Quill의 태그목록에 표시\r\n\tuseEffect(() => {\r\n\t\tlet url = process.env.REACT_APP_URL + '/menus'\r\n\t\t//url = process.env.REACT_APP_LOCAL_URL+'/menus'\r\n\r\n\t\tAxios.get(url, {\r\n\t\t\twithCredentials: true,\r\n\t\t}) //메뉴 태그 가져오기\r\n\t\t\t.then((res) => {\r\n\t\t\t\tsetMenus(res.data)\r\n\t\t\t})\r\n\t\t\t.catch((e) => alert(e)) //실패\r\n\t}, [location.pathname, refresh])\r\n\r\n\t//주소 변경될 때, 토큰 체크하고 포스트 조회하기\r\n\tuseEffect(() => {\r\n\t\tsetReady(false)\r\n\t\tcheckToken()\r\n\r\n\t\t//주소 변경 시 해쉬 위치로 scroll. 해쉬는 리렌더링 하지 않음.\r\n\t\tconst content = document.querySelector('#content')\r\n\t\tif (content) {\r\n\t\t\tlet scroll = content.scrollTop\r\n\t\t\tconst frame = setInterval(function () {\r\n\t\t\t\tlet dif = scroll / 50\r\n\t\t\t\tcontent.scrollTop -= dif\r\n\t\t\t\tif (content.scrollTop <= 0) clearInterval(frame)\r\n\t\t\t}, 10)\r\n\t\t}\r\n\t}, [location.pathname, location.search, refresh])\r\n\r\n\treturn (\r\n\t\t<AppContext.Provider value={store}>\r\n\t\t\t<div id=\"app\">\r\n\t\t\t\t<Meta\r\n\t\t\t\t\tdata={{\r\n\t\t\t\t\t\ttitle: '행복한 코딩 블로그 :D',\r\n\t\t\t\t\t\tdiscription: 'imki123의 행복한 코딩 블로그입니다 :D',\r\n\t\t\t\t\t\timage: process.env.PUBLIC_URL+'/images/imcat_64.png',\r\n\t\t\t\t\t}}\r\n\t\t\t\t/>\r\n\t\t\t\t<Header />\r\n\t\t\t\t<Setting />\r\n\t\t\t\t<Body>\r\n\t\t\t\t\t<Guide />\r\n\t\t\t\t\t<Content />\r\n\t\t\t\t</Body>\r\n\t\t\t</div>\r\n\t\t</AppContext.Provider>\r\n\t)\r\n}\r\nexport { AppContext }\r\nexport default React.memo(App)\r\n","import React from 'react'\r\nimport ReactDOM, { hydrate } from 'react-dom'\r\nimport { BrowserRouter } from 'react-router-dom'\r\nimport App from './App'\r\n\r\nconst rootElement = document.getElementById('root')\r\n\r\nif (rootElement.hasChildNodes()) {\r\n\thydrate(\r\n\t\t<BrowserRouter>\r\n\t\t\t<React.StrictMode>\r\n\t\t\t\t<App />\r\n\t\t\t</React.StrictMode>\r\n\t\t</BrowserRouter>,\r\n\t\trootElement,\r\n\t)\r\n} else {\r\n\tReactDOM.render(\r\n\t\t<BrowserRouter basename={process.env.PUBLIC_URL}>\r\n\t\t\t<React.StrictMode>\r\n\t\t\t\t<App />\r\n\t\t\t</React.StrictMode>\r\n\t\t</BrowserRouter>,\r\n\t\tdocument.getElementById('root'),\r\n\t)\r\n}\r\n"],"sourceRoot":""}