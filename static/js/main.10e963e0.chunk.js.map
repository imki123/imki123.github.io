{"version":3,"sources":["components/Header.js","components/Body.js","components/Menus.js","components/Guide.js","components/Comment.js","components/Meta.js","components/PostList.js","components/Recents.js","components/CommentLists.js","components/Post.js","components/NotFoundPage.js","components/Login.js","components/Quill.js","components/Paging.js","components/Tags.js","components/Content.js","components/Setting.js","App.js","index.js"],"names":["React","memo","props","store","useContext","AppContext","id","className","onClick","slideMenu","alt","src","to","closeMenuMobile","setting","document","querySelector","style","display","login","username","Math","floor","random","children","menus","map","i","key","name","exact","activeClassName","substring","toUpperCase","count","subMenus","length","j","title","href","e","preventDefault","window","open","comment","post","refreshComment","update","date","publishedDate","replace","useEffect","postId","commentId","value","content","fontWeight","updated","readOnly","onChange","resizeTextarea","textarea","confirm","classList","remove","url","process","Axios","patch","withCredentials","data","then","res","console","log","catch","alert","add","focus","background","locales","en","ko","Meta","lang","locale","description","image","undefined","canonical","type","width","height","Helmet","titleTemplate","rel","itemprop","property","hreflang","list","no","text","idx","match","location","history","params","useState","setPost","postBody","setPostBody","comments","setComments","commentCnt","setCommentCnt","recents","setRecents","popular","setPopular","recentComments","setRecentComments","useQuill","modules","syntax","formats","quill","quillRef","get","go","body","hash","setTimeout","elem","contentScroll","scrollTop","elemTop","offsetTop","dif","frame","setInterval","scrollHeight","clientHeight","clearInterval","pathname","setContents","setText","setReady","func","svg","target","discription","tags","ref","delete","push","placeholder","useHistory","useLocation","browser","agent","navigator","userAgent","toLowerCase","indexOf","checkUsername","setCheckUsername","checkPassword","setCheckPassword","checkPasswordConfirm","setCheckPasswordConfirm","buttonName","setButtonName","clickButton","password","fetch","mode","method","credentials","headers","JSON","stringify","status","json","message","error","setLogin","path","passwordConfirm","autoComplete","fontSize","textAlign","color","ready","setSubMenus","toolbar","size","header","align","indent","imageCompress","quality","maxWidth","maxHeight","imageType","debug","Quill","register","Number","querySelectorAll","checked","mainMenu","getElementById","res2","subMenu","newSubMenu","clickPost","getContents","getText","newMainMenu","getLength","editor","marginBottom","removeEventListener","addEventListener","changeMainMenu","changeSubMenu","postCount","search","queryString","parse","paging","pages","page","startPost","lastPage","ceil","links","innerHTML","p","tag","lists","setLists","resize","loading","view","component","Login","Tags","Post","NotFoundPage","disabled","settingWrapper","stopPropagation","createContext","posts","setPosts","setHeaders","refresh","setRefresh","order","setMenus","checkToken","fake","textareas","clientWidth","guideWrapper","left","parentNode","Provider","rootElement","hasChildNodes","hydrate","ReactDOM","render","basename"],"mappings":"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","file":"static/js/main.10e963e0.chunk.js","sourcesContent":["import React from 'react'\r\nimport './Header.css'\r\nimport { Link } from 'react-router-dom';\r\nimport { AppContext } from '../App'\r\n\r\nfunction Header(props) {\r\n    const store = React.useContext(AppContext) \r\n\r\n    const toggleSetting = () => {\r\n        const setting = document.querySelector('#settingWrapper')\r\n        if(setting){\r\n            if(setting.style.display === 'block'){\r\n                setting.style.display = 'none'\r\n            }else{\r\n                setting.style.display = 'block'\r\n            } \r\n        }\r\n    }\r\n\r\n\treturn(\r\n        <div id=\"headerWrapper\">\r\n            <div id=\"header\">\r\n                <div className=\"hover\" onClick={store.slideMenu}>\r\n                    <img id=\"menu\" alt=\"MENU\" src={process.env.PUBLIC_URL+'/images/guide_icon.png'}/>\r\n                </div>\r\n                <Link to=\"/\"> \r\n                    <div id=\"title\" className=\"hover\" onClick={store.closeMenuMobile}>\r\n                        <img id=\"logo\" alt=\"logo\" src={process.env.PUBLIC_URL+'/images/imcat_64.png'}/> \r\n                        임기의 코딩 블로그 :D\r\n                    </div>\r\n                </Link>\r\n                <div className=\"hover\"  onClick={toggleSetting}>\r\n                {!store.login ? \r\n                    <img className=\"profile\" alt=\"PROFILE\" src={process.env.PUBLIC_URL+'/images/noavatar.png'}/> :\r\n                    store.login.username === 'imki123' ?\r\n                        <img className=\"profile\" alt=\"PROFILE\" src={process.env.PUBLIC_URL+'/images/avatar_small.png'}/> :\r\n                        <img className=\"profile\" alt=\"PROFILE\" \r\n                            src={process.env.PUBLIC_URL+'/images/dog'+(Math.floor(Math.random() * (3 - 1 + 1)) + 1)+'.png'}/>}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    ) \r\n}\r\nexport default React.memo(Header)\r\n","import React from 'react'\r\nimport './Body.css'\r\n\r\nfunction Body(props) {\r\n\treturn(\r\n        <div id=\"body\">\r\n            {props.children}\r\n        </div>\r\n    ) \r\n}\r\nexport default React.memo(Body)\r\n","import React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\nimport './Menus.css'\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore'\r\n\r\nfunction Menus(props) {\r\n\tconst { menus } = props\r\n\r\n\t//menu정보를 받아서 링크 메뉴 생성하기\r\n\t//menu { name: string, cnt: number, Object{ name: string, cnt: number}, Object{...}}\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{menus &&\r\n\t\t\t\tmenus.map((i) => (\r\n\t\t\t\t\t<div key={i.name}>\r\n\t\t\t\t\t\t<NavLink exact to={i.name === 'home' ? '/' : `/tags/${i.name}`} className=\"list\" activeClassName=\"activeList\">\r\n\t\t\t\t\t\t\t<span className=\"menuName\">{i.name.substring(0, 1).toUpperCase() + i.name.substring(1)}</span>\r\n\t\t\t\t\t\t\t<span className=\"menuOptions\">\r\n\t\t\t\t\t\t\t\t<span className=\"menuCnt\">{i.count}</span>\r\n\t\t\t\t\t\t\t\t<span className=\"menuExpandIcon\">{i.subMenus && i.subMenus.length >= 1 && <ExpandMoreIcon />}</span>\r\n\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t</NavLink>\r\n\t\t\t\t\t\t{i.subMenus && i.subMenus.length > 0 && i.subMenus.map((j) => (\r\n\t\t\t\t\t\t\t<NavLink exact to={`/tags/${j.name}`} className=\"list subList\" activeClassName=\"activeList\" key={j.name}>\r\n                            <span className=\"menuName\">{j.name.substring(0, 1).toUpperCase() + j.name.substring(1)}</span>\r\n                            <span className=\"menuOptions\">\r\n                                <span className=\"menuCnt\">{j.count}</span>\r\n                            </span>\r\n                        </NavLink>\r\n\t\t\t\t\t\t))}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t))}\r\n\t\t</>\r\n\t)\r\n}\r\nexport default React.memo(Menus)\r\n","import React from 'react'\r\nimport './Guide.css'\r\nimport { AppContext } from '../App'\r\nimport Menus from './Menus'\r\nimport OpenInNewIcon from '@material-ui/icons/OpenInNew'\r\n\r\nfunction Guide(props) {\r\n\tconst store = React.useContext(AppContext)\r\n\r\n\treturn (\r\n\t\t<div id=\"guideBack\" onClick={store.closeMenuMobile}>\r\n\t\t\t<div id=\"guideWrapper\" className=\"slideMenu\">\r\n\t\t\t\t<div id=\"avatar\">\r\n\t\t\t\t\t<img alt=\"avatar\" src={process.env.PUBLIC_URL + '/images/avatar.png'} title=\"Hello :D\" />\r\n\t\t\t\t\t<div id=\"name\">Im kiyoung</div>\r\n\t\t\t\t\t<div id=\"nickName\">imki123</div>\r\n\t\t\t\t\t<div id=\"github\">\r\n\t\t\t\t\t\t<a href=\"https://github.com/imki123\">\r\n\t\t\t\t\t\t\t<img alt=\"github\" src={process.env.PUBLIC_URL + '/images/GitHub-Mark-32px.png'} /> <span>https://github.com/imki123</span>\r\n\t\t\t\t\t\t</a>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div id=\"introduction\">A web programmer who dreams of being a wise developer.</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"menus\">\r\n\t\t\t\t\t<Menus menus={store.menus} />\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"menus\">\r\n\t\t\t\t\t<a href=\"https://imki123.github.io/catbook\" className=\"list\"\r\n                        onClick={e => {e.preventDefault(); window.open(\"https://imki123.github.io/catbook\")}}>\r\n\t\t\t\t\t\t<div className=\"menuLink\">\r\n\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t<img alt=\"catbook\" src={process.env.PUBLIC_URL + '/images/catbook_64.png'} />\r\n\t\t\t\t\t\t\t\tCatbook\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<OpenInNewIcon />\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</a>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\nexport default React.memo(Guide)\r\n","import React, { useEffect } from 'react'\r\nimport './Comment.css'\r\nimport { AppContext } from '../App'\r\nimport Axios from 'axios'\r\n\r\nfunction Comment(props) {\r\n    const store = React.useContext(AppContext)\r\n    const {comment, post, refreshComment} = props\r\n    let update = false\r\n    let date = comment.publishedDate.substring(0,16).replace('T',' ')\r\n    useEffect(() => {\r\n        const textarea = document.querySelector(`#comment_${post.postId}_${comment.commentId} textarea`)\r\n        textarea.value = comment.content\r\n    },[comment, post])\r\n\r\n    const updateComment = e => { //댓글 수정\r\n        const textarea = document.querySelector(`#comment_${post.postId}_${comment.commentId} textarea`)\r\n        if(!update){\r\n            update = true\r\n            textarea.classList.add('updateMode')\r\n            textarea.readOnly = false\r\n            textarea.focus()\r\n        }else if(window.confirm('댓글을 수정하시겠습니까?')){\r\n            update = false\r\n            textarea.classList.remove('updateMode')\r\n            textarea.readOnly = true\r\n            \r\n            let url = process.env.REACT_APP_URL+`/comments/${post.postId}/${comment.commentId}`\r\n            //url = process.env.REACT_APP_LOCAL_URL+`/comments/${post.postId}/${comment.commentId}`\r\n\r\n            Axios.patch(url, { //댓글 수정\r\n                withCredentials: true, //CORS\r\n                data: {\r\n                    content: textarea.value,\r\n                }\r\n            })\r\n            .then(res => {\r\n                console.log(`${comment.commentId}번 댓글 수정 성공`)\r\n                refreshComment() //포스트 다시 불러오기\r\n            })\r\n            .catch(e => alert(e)) //실패\r\n        }\r\n    }\r\n\r\n    const deleteComment = e => {\r\n        if(window.confirm('삭제 후에는 복구가 불가합니다. 정말로 댓글을 삭제하시겠습니까?')){\r\n            let url = process.env.REACT_APP_URL+`/comments/delete/${post.postId}/${comment.commentId}`\r\n            //url = process.env.REACT_APP_LOCAL_URL+`/comments/delete/${post.postId}/${comment.commentId}`\r\n\r\n            Axios.patch(url, { //포스트 삭제\r\n                withCredentials: true, //CORS\r\n            })\r\n            .then(res => {\r\n                console.log(`${comment.commentId}번 댓글 삭제 성공`)\r\n                refreshComment() //포스트 다시 불러오기\r\n            })\r\n            .catch(e => alert(e)) //실패\r\n        }\r\n    }\r\n\r\n\treturn(\r\n    <div className=\"commentWrapper\" id={`comment_${post.postId}_${comment.commentId}`}>\r\n        <div className=\"comment\">\r\n            <div className=\"commentProfile\">\r\n                {!comment.username ? \r\n                <img alt=\"PROFILE\" src={process.env.PUBLIC_URL+'/images/noavatar.png'}/> :\r\n                    comment.username === 'imki123' ?\r\n                        <img alt=\"PROFILE\" src={process.env.PUBLIC_URL+'/images/avatar_small.png'}/> :\r\n                        <img alt=\"PROFILE\" \r\n                            src={process.env.PUBLIC_URL+'/images/dog'+(Math.floor(Math.random() * (3 - 1 + 1)) + 1)+'.png'}/>}\r\n            </div>\r\n            <div className=\"commentContent\">\r\n                {comment.username === store.login.username \r\n                ? <span className=\"commentUsername\" style={{fontWeight:'bold'}}>{comment.username}</span>\r\n                : <span className=\"commentUsername\">{comment.username}</span>}\r\n                <span className=\"commentDate\"> - {date} {comment.updated && '(수정됨)'}</span>\r\n                <textarea readOnly onChange={store.resizeTextarea}/>\r\n            </div>\r\n        </div>\r\n        {((comment.username && comment.username === store.login.username) \r\n            || store.login.username === 'imki123')&&\r\n        <div className=\"commentButtons\">\r\n            <button className=\"commentButton\" onClick={updateComment}>수정</button>\r\n            <button className=\"commentButton\" style={{background:'red'}} onClick={deleteComment}>삭제</button>\r\n        </div>}\r\n    </div>\r\n    ) \r\n}\r\nexport default React.memo(Comment)\r\n","// components/Meta\r\n/* eslint-disable no-undefined */\r\nimport React from 'react'\r\nimport { Helmet } from 'react-helmet'\r\n\r\nconst locales = {\r\n\ten: 'en_US',\r\n\tko: 'ko_KR',\r\n}\r\n\r\nconst Meta = ({ data }) => {\r\n\tconst lang = locales[data.locale] || locales['en']\r\n\tconst title = data.title\r\n\tconst description = data.description\r\n\tconst image = data.image !== undefined && `${data.image}`\r\n\tconst canonical = `https://imki123.github.io/${data.canonical}`\r\n\tconst type = data.type === undefined ? 'website' : data.type\r\n\tconst width = data.image && (data.width || 1200)\r\n\tconst height = data.image && (data.height || 630)\r\n\r\n\treturn (\r\n\t\t<Helmet titleTemplate=\"%s\">\r\n\t\t\t<html lang={lang} />\r\n\t\t\t<title>{title}</title>\r\n\t\t\t<meta name=\"description\" content={description} />\r\n\t\t\t{canonical ? <link rel=\"canonical\" href={canonical} /> : null}\r\n\t\t\t{image ? <link rel=\"image_src\" href={image} /> : null}\r\n\t\t\t{image ? <meta itemprop=\"image\" content={image} /> : null}\r\n\r\n\t\t\t<meta property=\"og:site_name\" content=\"YOUR WEB SITE\" />\r\n\t\t\t<meta property=\"og:title\" content={title} />\r\n\t\t\t{description ? <meta property=\"og:description\" content={description} /> : null}\r\n\t\t\t{canonical ? <meta property=\"og:url\" content={canonical} /> : null}\r\n\t\t\t<meta property=\"og:locale\" content={locales[lang]} />\r\n\t\t\t<meta property=\"og:type\" content={type} />\r\n\t\t\t{image ? <meta property=\"og:image\" content={image} /> : null}\r\n\t\t\t{width ? <meta property=\"og:image:width\" content={width} /> : null}\r\n\t\t\t{height ? <meta property=\"og:image:height\" content={height} /> : null}\r\n\t\t\t<meta property=\"fb:pages\" content=\"YOUR WEB SITE\" />\r\n\r\n\t\t\t{/* change type of twitter if there is no image? */}\r\n\t\t\t<meta name=\"twitter:card\" content=\"summary_large_image\" />\r\n\t\t\t<meta name=\"twitter:title\" content={title} />\r\n\t\t\t{description ? <meta name=\"twitter:description\" content={description} /> : null}\r\n\t\t\t{image ? <meta name=\"twitter:image\" content={image} /> : null}\r\n\t\t\t<meta name=\"twitter:site\" content=\"@YOURWEBSITE\" />\r\n\t\t\t{canonical ? <link rel=\"alternate\" href={data.canonical} hreflang={lang} /> : null}\r\n\t\t</Helmet>\r\n\t)\r\n}\r\n\r\nexport default Meta","import React from 'react'\r\nimport './PostList.css'\r\nimport { Link } from 'react-router-dom'\r\n\r\nfunction PostList(props){\r\n    const {list, no} = props\r\n    let date = list.publishedDate.substring(0,10).replace('T',' ')\r\n\r\n    return(\r\n        <Link to={`/posts/${list.postId}`}>\r\n            <div className=\"postList no-drag\">\r\n                <div className=\"postListHeader\">\r\n                    <div>\r\n                        <span className=\"postId\">{no}.</span>\r\n                        <span className=\"postTitle\">{list.title}</span>\r\n                    </div>\r\n                    <span className=\"postDate\">{date}</span>\r\n                </div>\r\n                <div className=\"postBody\">{list.text}</div>\r\n            </div>\r\n        </Link>\r\n    )\r\n}\r\nexport default React.memo(PostList)","import React from 'react'\r\nimport './Recents.css'\r\n\r\nimport PostList from './PostList'\r\n\r\nfunction Recents(props) {\r\n\tconst {title, list} = props\r\n\treturn (\r\n\t\t<div className=\"recents\">\r\n            <div className=\"postListTitle\">{title}</div>\r\n            {list && list.map((i, idx) => <PostList no={idx+1} list={i} key={i.postId} />)}\r\n\t\t</div>\r\n\t)\r\n}\r\nexport default React.memo(Recents)\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport './CommentLists.css'\r\n\r\nfunction CommentLists(props) {\r\n\tconst { title, list } = props\r\n\treturn (\r\n\t\t<div className=\"recents recentComment\">\r\n\t\t\t<div className=\"postListTitle\">{title}</div>\r\n\t\t\t{list &&\r\n\t\t\t\tlist.map((i, idx) => (\r\n\t\t\t\t\t<div key={i.title + idx}>\r\n\t\t\t\t\t\t<Link to={`/posts/${i.postId}/#comments`}>\r\n\t\t\t\t\t\t\t<div className=\"postList no-drag\">\r\n\t\t\t\t\t\t\t\t<div className=\"postListHeader\">\r\n\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t<span className=\"postId\">{idx + 1}.</span>\r\n\t\t\t\t\t\t\t\t\t\t<span className=\"username\">{i.username}</span>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<span className=\"postDate\">{i.publishedDate && i.publishedDate.substring(0, 19).replace('T', ' ')}</span>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className=\"postBody\">\r\n\t\t\t\t\t\t\t\t\t{i.content}\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className=\"postTitle\">{i.title}</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t))}\r\n\t\t</div>\r\n\t)\r\n}\r\nexport default React.memo(CommentLists)\r\n","import React, { useEffect, useState } from 'react'\r\nimport './Post.css'\r\nimport { Link } from 'react-router-dom'\r\nimport { useQuill } from 'react-quilljs'\r\nimport Comment from './Comment'\r\nimport { AppContext } from '../App'\r\nimport RefreshIcon from '@material-ui/icons/Refresh'\r\nimport Axios from 'axios'\r\nimport Meta from './Meta'\r\nimport Recents from './Recents'\r\nimport CommentLists from './CommentLists'\r\n\r\nfunction Post({ match, location, history }) {\r\n\tconst store = React.useContext(AppContext)\r\n\tlet { postId } = match.params\r\n\tconst [post, setPost] = useState(false)\r\n\tconst [postBody, setPostBody] = useState()\r\n\tconst [comments, setComments] = useState([])\r\n\tconst [commentCnt, setCommentCnt] = useState(3)\r\n\r\n\tconst [recents, setRecents] = useState([])\r\n\tconst [popular, setPopular] = useState([])\r\n\tconst [recentComments, setRecentComments] = useState([])\r\n\r\n\tconst modules = { syntax: true }\r\n\tconst formats = ['bold', 'italic', 'underline', 'strike', 'code-block', 'blockquote', 'size', 'header', 'align', 'color', 'background', 'indent', 'list', 'link', 'image', 'video', 'clean']\r\n\tconst { quill, quillRef } = useQuill({ modules, formats, readOnly: true })\r\n\r\n\tuseEffect(() => {\r\n\t\tsetPost(false)\r\n\t\tsetPostBody(false)\r\n\t\t//포스트 가져오기\r\n\t\tlet id = 1\r\n\t\tif (postId) id = postId\r\n\t\tlet url = process.env.REACT_APP_URL + '/posts/' + id\r\n\t\t//url = process.env.REACT_APP_LOCAL_URL + '/posts/' + id\r\n\t\tAxios.get(url, {\r\n\t\t\twithCredentials: true,\r\n\t\t})\r\n\t\t\t.then((res) => {\r\n\t\t\t\tsetComments(res.data.comments)\r\n\t\t\t\tsetPost(res.data)\r\n\t\t\t})\r\n\t\t\t.catch((e) => {\r\n\t\t\t\talert('찾으시는 페이지가 없습니다.\\n' + e)\r\n\t\t\t\thistory.go(-1)\r\n\t\t\t}) //실패\r\n\r\n\t\t//포스트바디 가져오기\r\n\t\turl = process.env.REACT_APP_URL + '/posts/postBody/' + id\r\n\t\t//url = process.env.REACT_APP_LOCAL_URL + '/posts/postBody/' + id\r\n\t\tAxios.get(url)\r\n\t\t\t.then((res) => {\r\n\t\t\t\tsetPostBody(res.data.body)\r\n\r\n\t\t\t\tif (location.hash) {\r\n\t\t\t\t\t//hash가 있으면 해당 엘리먼트로 스크롤\r\n\t\t\t\t\tsetTimeout(function () {\r\n\t\t\t\t\t\t//postBody가 로드된 이후에 스크롤이 되야해서 0.01초 타임아웃 추가..\r\n\t\t\t\t\t\tconst content = document.querySelector('#content')\r\n\t\t\t\t\t\tconst elem = document.querySelector(location.hash)\r\n\t\t\t\t\t\tif (content && elem) {\r\n\t\t\t\t\t\t\tlet contentScroll = content.scrollTop\r\n\t\t\t\t\t\t\tlet elemTop = elem.offsetTop\r\n\t\t\t\t\t\t\tlet dif = (elemTop - contentScroll) / 100\r\n\t\t\t\t\t\t\tif (elemTop > contentScroll) {\r\n\t\t\t\t\t\t\t\tconst frame = setInterval(function () {\r\n\t\t\t\t\t\t\t\t\tif (content.scrollTop + dif >= elemTop || content.scrollTop >= content.scrollHeight - content.clientHeight) {\r\n\t\t\t\t\t\t\t\t\t\tclearInterval(frame)\r\n\t\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t\tcontent.scrollTop += dif\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}, 10)\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tconst frame = setInterval(function () {\r\n\t\t\t\t\t\t\t\t\tif (content.scrollTop <= elemTop) {\r\n\t\t\t\t\t\t\t\t\t\tclearInterval(frame)\r\n\t\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t\tcontent.scrollTop += dif\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}, 10)\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}, 10)\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\t.catch((e) => {\r\n\t\t\t\tconsole.log(e)\r\n\t\t\t}) //실패\r\n\r\n\t\t//홈일경우 recents, popular, recentComments 가져옴\r\n\t\tif (location.pathname === '/') {\r\n\t\t\turl = process.env.REACT_APP_URL + '/posts/popular'\r\n\t\t\t//url = process.env.REACT_APP_LOCAL_URL + '/posts/popular'\r\n\t\t\tAxios.get(url).then((res) => {\r\n\t\t\t\tsetPopular(res.data)\r\n\t\t\t})\r\n\r\n\t\t\turl = process.env.REACT_APP_URL + '/posts/recents'\r\n\t\t\t//url = process.env.REACT_APP_LOCAL_URL + '/posts/recents'\r\n\t\t\tAxios.get(url).then((res) => {\r\n\t\t\t\tsetRecents(res.data)\r\n\t\t\t})\r\n\r\n\t\t\turl = process.env.REACT_APP_URL + '/comments/recent'\r\n\t\t\t//url = process.env.REACT_APP_LOCAL_URL + '/comments/recent'\r\n\t\t\tAxios.get(url).then((res) => {\r\n\t\t\t\tsetRecentComments(res.data)\r\n\t\t\t})\r\n\t\t}\r\n\t}, [location, postId, history])\r\n\r\n\tuseEffect(() => {\r\n\t\tif (quill) {\r\n\t\t\tif (postBody) {\r\n\t\t\t\tquill.setContents(postBody)\r\n\t\t\t} else if (post) {\r\n\t\t\t\tquill.setText(post.text)\r\n\t\t\t}\r\n\t\t}\r\n\t}, [quill, postBody, post])\r\n\r\n\tuseEffect(() => {\r\n\t\tstore.setReady(false)\r\n\t\tif (post) {\r\n\t\t\tstore.setReady(true)\r\n\t\t}\r\n\t})\r\n\r\n\tconst deletePost = (e) => {\r\n\t\tif (window.confirm('글 삭제 시 복구가 불가합니다. 해당 글을 정말로 삭제하시겠습니까?')) {\r\n\t\t\tconst postId = e.target.id\r\n\t\t\tlet url = process.env.REACT_APP_URL + '/posts/' + postId\r\n\t\t\t//url = process.env.REACT_APP_LOCAL_URL+'/posts/'+postId\r\n\r\n\t\t\tAxios.delete(url, {\r\n\t\t\t\t//글 삭제\r\n\t\t\t\twithCredentials: true, //CORS\r\n\t\t\t})\r\n\t\t\t\t.then((res) => {\r\n\t\t\t\t\tconsole.log(`${postId}번 글 삭제 성공`)\r\n\t\t\t\t\thistory.go(-1)\r\n\t\t\t\t})\r\n\t\t\t\t.catch((e) => alert(e)) //실패\r\n\t\t}\r\n\t}\r\n\r\n\tconst postComment = (e) => {\r\n\t\tconst comment = document.querySelector(`.commentContent textarea`) //댓글 텍스트\r\n\t\tif (comment && comment.value !== '' && window.confirm('댓글을 작성하시겠습니까?')) {\r\n\t\t\tlet url = process.env.REACT_APP_URL + '/comments/' + post.postId\r\n\t\t\t//url = process.env.REACT_APP_LOCAL_URL+'/comments/'+post.postId\r\n\r\n\t\t\tAxios.patch(url, {\r\n\t\t\t\t//댓글 작성\r\n\t\t\t\twithCredentials: true, //CORS\r\n\t\t\t\tdata: {\r\n\t\t\t\t\tusername: store.login.username,\r\n\t\t\t\t\tcontent: comment.value,\r\n\t\t\t\t},\r\n\t\t\t})\r\n\t\t\t\t.then((res) => {\r\n\t\t\t\t\tconsole.log(`${post.postId} 댓글 추가 성공`)\r\n\t\t\t\t\trefreshComment(null, setCommentCnt(res.data.comments.length)) //포스트 다시 불러오고 댓글 끝까지 보이기\r\n\t\t\t\t})\r\n\t\t\t\t.catch((e) => alert(e)) //실패\r\n\t\t}\r\n\t}\r\n\r\n\tconst refreshComment = (e, func) => {\r\n\t\t//댓글 가져오기\r\n\t\tlet url = process.env.REACT_APP_URL + '/comments/' + post.postId\r\n\t\t//url = process.env.REACT_APP_LOCAL_URL+'/comments/'+post.postId\r\n\r\n\t\tlet svg //refresh 아이콘\r\n\t\tif (e && e.target) svg = e.target.querySelector('svg')\r\n\t\tif (svg) svg.classList.add('refreshing') //refresh 애니메이션 시작\r\n\r\n\t\tAxios.get(url, {\r\n\t\t\twithCredentials: true,\r\n\t\t}) //댓글 새로고치기\r\n\t\t\t.then((res) => {\r\n\t\t\t\tconsole.log(`${post.postId} 댓글 새로고침`)\r\n\t\t\t\tsetComments(res.data) //댓글 저장\r\n\t\t\t\tif (svg) svg.classList.remove('refreshing') //refresh 애니메이션 끝\r\n\r\n\t\t\t\tif (func) func() //파라미터에 함수가 있으면 함수 실행\r\n\t\t\t})\r\n\t\t\t.catch((e) => {\r\n\t\t\t\t//실패\r\n\t\t\t\tif (svg) svg.classList.remove('refreshing') //refresh 애니메이션 끝\r\n\t\t\t\talert(e)\r\n\t\t\t})\r\n\t}\r\n\r\n\t//댓글 10개 더보기\r\n\tconst more = (e) => {\r\n\t\tsetCommentCnt(commentCnt + 10)\r\n\t}\r\n\r\n\t//댓글 더보기, 댓글 새로고침 하면 리사이즈\r\n\tuseEffect(() => {\r\n\t\tstore.resizeTextarea()\r\n\t}, [commentCnt, store, comments])\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<div className=\"post\">\r\n\t\t\t\t{location.pathname === '/' ? (\r\n\t\t\t\t\t<Meta\r\n\t\t\t\t\t\tdata={{\r\n\t\t\t\t\t\t\ttitle: '임기의 코딩 블로그 :D',\r\n\t\t\t\t\t\t\tdiscription: 'imki123의 임기의 코딩 블로그입니다 :D',\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t/>\r\n\t\t\t\t) : (\r\n\t\t\t\t\t<Meta data={{ title: post.title, discription: post.text, locale: 'ko' }} />\r\n\t\t\t\t)}\r\n\t\t\t\t{/* 태그 */}\r\n\t\t\t\t<div className=\"nav\">\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<span>Tag : </span>\r\n\t\t\t\t\t\t{post.tags &&\r\n\t\t\t\t\t\t\tpost.tags.map((i, idx) =>\r\n\t\t\t\t\t\t\t\tidx === 0 ? (\r\n\t\t\t\t\t\t\t\t\t<span key={i}>\r\n\t\t\t\t\t\t\t\t\t\t<Link to={i === 'home' ? '/' : `/tags/${i}`}>{i}</Link>\r\n\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t<span key={i}>\r\n\t\t\t\t\t\t\t\t\t\t, <Link to={`/tags/${i}`}>{i}</Link>\r\n\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t),\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t{post && post.publishedDate.substring(0, 16).replace('T', ' ')}\r\n\t\t\t\t</div>\r\n\t\t\t\t<h2 className=\"postTitle\">{post.title}</h2>\r\n\t\t\t\t<div className=\"postContent\">\r\n\t\t\t\t\t{/* 본문 */}\r\n\t\t\t\t\t<div id=\"editor\">\r\n\t\t\t\t\t\t<div ref={quillRef} />\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t{/* 글 수정 삭제 버튼 */}\r\n\t\t\t\t\t{store.login && store.login.username === 'imki123' && (\r\n\t\t\t\t\t\t<div className=\"postButtons\">\r\n\t\t\t\t\t\t\t<Link to={`/quill/${post.postId}`} className=\"hover no-drag\">\r\n\t\t\t\t\t\t\t\t수정\r\n\t\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t\t&nbsp;\r\n\t\t\t\t\t\t\t<button onClick={deletePost} id={post.postId} style={{ background: 'red' }}>\r\n\t\t\t\t\t\t\t\t삭제\r\n\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t{/* 댓글 작성*/}\r\n\t\t\t\t{location.pathname !== '/' && (\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t<div className=\"writeComment\">\r\n\t\t\t\t\t\t\t<div className=\"commentProfile\">\r\n\t\t\t\t\t\t\t\t{!store.login ? (\r\n\t\t\t\t\t\t\t\t\t<img alt=\"PROFILE\" src={process.env.PUBLIC_URL + '/images/noavatar.png'} />\r\n\t\t\t\t\t\t\t\t) : store.login.username === 'imki123' ? (\r\n\t\t\t\t\t\t\t\t\t<img alt=\"PROFILE\" src={process.env.PUBLIC_URL + '/images/avatar.png'} />\r\n\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t<img alt=\"PROFILE\" src={process.env.PUBLIC_URL + '/images/dog' + (Math.floor(Math.random() * (3 - 1 + 1)) + 1) + '.png'} />\r\n\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className=\"commentContent\">\r\n\t\t\t\t\t\t\t\t{store.login ? (\r\n\t\t\t\t\t\t\t\t\t<span className=\"commentUsername\">{store.login.username}</span>\r\n\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\t\t\t\tclassName=\"loginButton\"\r\n\t\t\t\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\t\t\t\thistory.push('/login')\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t로그인\r\n\t\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t{store.login ? <textarea onChange={store.resizeTextarea} placeholder=\" 댓글을 남겨주세요 :D\" /> : <textarea readOnly placeholder=\" 로그인 후에 댓글을 남겨주세요 :D\" />}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className=\"commentButtons\">\r\n\t\t\t\t\t\t\t{store.login && (\r\n\t\t\t\t\t\t\t\t<button className=\"commentButton\" onClick={postComment}>\r\n\t\t\t\t\t\t\t\t\t댓글작성\r\n\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</>\r\n\t\t\t\t)}\r\n\r\n\t\t\t\t{/* 댓글 목록 */}\r\n\t\t\t\t{comments && comments.length > 0 && (\r\n\t\t\t\t\t<div id=\"comments\">\r\n\t\t\t\t\t\t<div className=\"commentTitle\">\r\n\t\t\t\t\t\t\t<div className=\"commentCnt\">댓글 {comments.length}개</div>\r\n\t\t\t\t\t\t\t<span className=\"commentRefresh\" onClick={refreshComment}>\r\n\t\t\t\t\t\t\t\t댓글 새로고침 <RefreshIcon />\r\n\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t{comments.map((i, idx) => idx < commentCnt && <Comment post={post} comment={i} key={i.commentId} refreshComment={refreshComment} />)}\r\n\t\t\t\t\t\t{comments.length > commentCnt && (\r\n\t\t\t\t\t\t\t<div className=\"more\">\r\n\t\t\t\t\t\t\t\t<span className=\"moreButton\" onClick={more}>\r\n\t\t\t\t\t\t\t\t\t댓글 더보기\r\n\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t)}\r\n\t\t\t</div>\r\n\t\t\t{location.pathname === '/' && (\r\n\t\t\t\t<div className=\"homeLists\">\r\n\t\t\t\t\t<Recents title=\"최신글\" list={recents} />\r\n\t\t\t\t\t<Recents title=\"인기글\" list={popular} />\r\n\t\t\t\t\t<CommentLists title=\"최근 댓글\" list={recentComments} />\r\n\t\t\t\t</div>\r\n\t\t\t)}\r\n\t\t</>\r\n\t)\r\n}\r\nexport default React.memo(Post)\r\n","import React, { useEffect } from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { AppContext } from '../App'\r\nimport './NotFoundPage.css'\r\n\r\nfunction NotFoundPage() {\r\n\tconst store = React.useContext(AppContext)\r\n\tconst history = useHistory()\r\n\tuseEffect(() => {\r\n\t\t//console.log(`Not found page! https://imki123.github.io${process.env.PUBLIC_URL}`)\r\n\t\tstore.setReady(true)\r\n\t})\r\n\r\n\tconst goBack = e => {\r\n\t\thistory.go(-1)\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className=\"notFound\">\r\n\t\t\t<div className=\"title\">Not Found Page</div>\r\n\t\t\t<div className=\"goHome\">\r\n\t\t\t\t<span onClick={goBack}>Go back</span>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\nexport default React.memo(NotFoundPage)\r\n","import React, { useState, useEffect } from 'react'\r\nimport './Login.css'\r\nimport { Switch, Route, useLocation, useHistory, Link } from 'react-router-dom'\r\nimport { AppContext } from '../App'\r\n\r\nfunction Login(props) {\r\n    const store = React.useContext(AppContext)\r\n    const location = useLocation()\r\n    const history = useHistory()\r\n    let browser = ''\r\n    const agent = navigator.userAgent.toLowerCase()\r\n    if(agent.indexOf(\"chrome\") > -1) browser = 'chrome'\r\n    else if(agent.indexOf(\"safari\") > -1) browser = 'safari'\r\n        \r\n    const [checkUsername, setCheckUsername] = useState('')\r\n    const [checkPassword, setCheckPassword] = useState('')\r\n    const [checkPasswordConfirm, setCheckPasswordConfirm] = useState('')\r\n    const [buttonName, setButtonName] = useState('로그인')\r\n\r\n    useEffect(() => {\r\n        store.setReady(true)\r\n    })\r\n    useEffect(() => {\r\n        //이미 로그인이 되어있다면 스테이터스로 이동\r\n        if(store.login && location.pathname === '/login'){ \r\n            history.replace('/loginStatus')\r\n        }\r\n        if(location.pathname.indexOf('register') > -1){\r\n            setButtonName('회원가입')\r\n        }else if(location.pathname.indexOf('withdraw') > -1){\r\n            setButtonName('회원탈퇴')\r\n        }else{\r\n            setButtonName('로그인')\r\n        }\r\n    },[location, store.login, history])\r\n\r\n    const changeUsername = e => {\r\n        const pattern = /[^a-zA-Z0-9ㄱ-ㅎㅏ-ㅣ가-힣_]/g\r\n        const value = e.target.value = e.target.value.replace(/\\s/g,'_').replace(pattern,'')\r\n        if(value.length < 3){ //3글자 이상\r\n            setCheckUsername('- 3자 이상 입력해주세요')\r\n        }else if(value.length > 20){ //20글자 이하\r\n            setCheckUsername('- 20자 이하로 입력해주세요')\r\n        }else{\r\n            setCheckUsername('')\r\n        }\r\n    }\r\n    const changePassword = e => {\r\n        const {value} = e.target\r\n        const passwordConfirm = document.querySelector('[name=passwordConfirm]')\r\n        \r\n        //비밀번호가 변경되면 비밀번호 확인은 초기화\r\n        if(passwordConfirm){\r\n            passwordConfirm.value = ''\r\n            setCheckPasswordConfirm('')\r\n        }\r\n\r\n        if(value.length < 6){ //6글자 이상\r\n            setCheckPassword('- 6자 이상 입력해주세요')\r\n        }else if(value.length > 20){ //20글자 이하\r\n            setCheckPassword('- 20자 이하로 입력해주세요')\r\n        }else{\r\n            setCheckPassword('')\r\n        }\r\n    }\r\n    const changePasswordConfirm = e => {\r\n        const {value} = e.target\r\n        const password = document.querySelector('[name=password]')\r\n        \r\n        if(value !== password.value && value.length >= 1){ //password와 같으면\r\n            setCheckPasswordConfirm('- 비밀번호가 일치하지 않습니다')\r\n        }else{\r\n            setCheckPasswordConfirm('')\r\n        }\r\n    }\r\n    const clickButton = e => {\r\n        e.preventDefault();\r\n        let url = process.env.REACT_APP_URL+'/auth'\r\n        //url = process.env.REACT_APP_LOCAL_URL+'/auth'\r\n        \r\n        const pattern = /[^a-zA-Z0-9가-힣_]/g\r\n        let username = document.querySelector('[name=username]')\r\n        if(username) username = username.value = username.value.replace(pattern,'')\r\n        let password = document.querySelector('[name=password]')\r\n        if(password) password = password.value\r\n\r\n        if(checkUsername === '' && password.length >= 1 &&\r\n            checkPassword === '' && checkPasswordConfirm === '')\r\n        { //입력폼에 이상이 없으면 fetch submit\r\n            if(buttonName === '회원가입'){\r\n                url += '/register'\r\n                fetch(url,{\r\n                    mode: 'cors',\r\n                    method: 'POST',\r\n                    credentials: \"include\",\r\n                    headers:{'Content-Type': 'application/json'},\r\n                    body: JSON.stringify({\r\n                        username: username,\r\n                        password: password,\r\n                    }),\r\n                })\r\n                .then(res => {\r\n                    if(res.status===200 || res.status===201) { //성공하면 아래 then 작동\r\n                        res.json().then(res =>{ \r\n                            alert(res.username+'님의 회원가입에 성공했습니다 :D')\r\n                            history.go(-1)\r\n                        })\r\n                    }else{\r\n                        let message = '회원가입에 실패했습니다 :('\r\n                        if(res.status === 409){\r\n                            message += '\\n이미 존재하는 아이디입니다.'\r\n                        }\r\n                        if(res.status === 400){\r\n                            message += '\\n아이디나 비밀번호를 확인해주세요.'\r\n                        }\r\n                        alert(message)\r\n                    }\r\n                })\r\n                .catch(e => console.error(e))\r\n            }else if(buttonName === '회원탈퇴'){\r\n                if(window.confirm(\"계정 탈퇴시 복구할 수 없습니다. 정말로 탈퇴하시겠습니까?\")){\r\n                    url += '/withdraw'\r\n                    fetch(url,{\r\n                        mode: 'cors',\r\n                        method: 'DELETE',\r\n                        credentials: \"include\",\r\n                        headers:{'Content-Type': 'application/json'},\r\n                        body: JSON.stringify({\r\n                            username: store.login.username,\r\n                            password: password,\r\n                        }),\r\n                    })\r\n                    .then(res => {\r\n                        if(res.status===200) { //삭제하면 Ok\r\n                            alert('계정이 탈퇴되었습니다. 또 들러 주세요 :D')\r\n                            history.push('/')\r\n                        }else{\r\n                            let message = '탈퇴에 실패했습니다 :('\r\n                            if(res.status === 204){\r\n                                message += '\\n존재하지 않는 아이디입니다.'\r\n                            }\r\n                            if(res.status === 401){\r\n                                message += '\\n비밀번호를 확인해주세요.'\r\n                            }\r\n                            alert(message)\r\n                        }\r\n                    })\r\n                    .catch(e => console.error(e))\r\n                }\r\n            }else{ //로그인\r\n                url += '/login'\r\n                fetch(url,{\r\n                    mode: 'cors',\r\n                    method: 'POST',\r\n                    credentials: \"include\",\r\n                    headers:{'Content-Type': 'application/json'},\r\n                    body: JSON.stringify({\r\n                        username: username,\r\n                        password: password,\r\n                    }),\r\n                })\r\n                .then(res => {\r\n                    if(res.status===200 || res.status===201) { //성공하면 아래 then 작동\r\n                        res.json().then(res =>{ \r\n                            store.setLogin(res)\r\n                            alert(res.username+'님 환영합니다 :D')\r\n                            history.go(-1)\r\n                        })\r\n                    }else{\r\n                        let message = '로그인에 실패했습니다 :('\r\n                        if(res.status === 401){\r\n                            message += '\\n로그인 정보를 확인해주세요.'\r\n                        }\r\n                        alert(message)\r\n                    }\r\n                })\r\n                .catch(e => console.error(e))\r\n            }\r\n        }else{\r\n            alert('입력 정보를 확인해주세요.')\r\n        }\r\n    }\r\n\r\n    return(\r\n        <div id=\"background\">\r\n            <div id=\"loginWrapper\">\r\n                <form id=\"login\">\r\n                    <Switch>\r\n                        <Route path={['/login','/register','/withdraw']}>\r\n                            <div className=\"text\">아이디</div>\r\n                            {buttonName === '회원탈퇴' ?\r\n                                <div>{store.login.username}</div> :\r\n                                <input name=\"username\" onChange={changeUsername}/>\r\n                            }\r\n\r\n                            <div className=\"check\">{checkUsername}</div>\r\n\r\n                            <div className=\"text\">비밀번호</div>\r\n                            <input name=\"password\" type=\"password\" onChange={changePassword} autoComplete=\"currnet-password\"/>\r\n                            <div className=\"check\">{checkPassword}</div>\r\n                            \r\n                            {buttonName === '회원가입' &&\r\n                            <>\r\n                                <div className=\"text\">비밀번호 확인</div>\r\n                                <input name=\"passwordConfirm\" type=\"password\" onChange={changePasswordConfirm} autoComplete=\"currnet-password\"/>\r\n                                <div className=\"check\" id=\"checkPasswordConfirm\">{checkPasswordConfirm}</div>\r\n                            </>}\r\n\r\n                            {/* 버튼 */}\r\n                            {buttonName === '회원탈퇴' \r\n                            ? <button style={{background: 'red'}} onClick={clickButton}>{buttonName}</button>\r\n                            : <button onClick={clickButton}>{buttonName}</button>}\r\n\r\n                            {buttonName === '로그인' &&\r\n                                <Link to=\"/register\" className=\"loginLink\">회원가입</Link>}\r\n                            {buttonName === '회원가입' &&\r\n                                <Link to=\"/login\" className=\"loginLink\">로그인</Link>} \r\n\r\n                            {browser === 'safari' &&\r\n                            <div className=\"text\" style={{fontSize: '0.8rem', textAlign: 'center'}}>\r\n                                (Safari의 경우 설정을 변경해주셔야 로그인이 가능합니다.<br/>설정 → Safari → 개인 정보 보호 및 보안 → <br/>크로스 사이트 추적방지 OFF, 모든 쿠키 차단 OFF) \r\n                            </div>}\r\n                        </Route>\r\n                        <Route path={['/loginStatus']}>\r\n                            {store.login ? \r\n                            <div className=\"center\">\r\n                                {store.login.username}님은 현재 <span style={{color:'green'}}>로그인</span> 되어있습니다 :D<br/>\r\n                                <span style={{fontSize: '0.8rem'}}>(로그인은 최대 일주일간 유지됩니다.)</span>\r\n                            </div> : \r\n                            <div className=\"center\">\r\n                                재 로그인이 필요합니다 :D\r\n                            </div>}\r\n                        </Route>\r\n                    </Switch>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    ) \r\n}\r\nexport default React.memo(Login)\r\n","import React, { useEffect, useState } from 'react'\r\nimport './Quill.css'\r\nimport 'quill/dist/quill.snow.css'\r\nimport { useQuill } from 'react-quilljs'\r\nimport imageCompress from 'quill-image-compress'\r\nimport { AppContext } from '../App'\r\nimport Axios from 'axios'\r\n\r\n\r\nfunction Quill({ match, location, history }) {\r\n\tconst store = React.useContext(AppContext)\r\n\tlet { postId } = match.params\r\n\tconst [post, setPost] = useState()\r\n\tconst [ready, setReady] = useState()\r\n\tconst [subMenus, setSubMenus] = useState()\r\n\r\n\tconst modules = {\r\n\t\ttoolbar: [\r\n\t\t\t['bold', 'italic', 'underline', 'strike'],\r\n\t\t\t[{ size: ['small', false, 'large', 'huge'] }, { header: 1 }, { header: 2 }],\r\n\t\t\t[{ align: [] }],\r\n\t\t\t[{ color: [] }, { background: [] }],\r\n\t\t\t[{ indent: '-1' }, { indent: '+1' }],\r\n\t\t\t[{ list: 'ordered' }, { list: 'bullet' }],\r\n\t\t\t['code-block', 'blockquote'],\r\n\t\t\t['link', 'image', 'video'],\r\n\t\t\t['clean'],\r\n\t\t],\r\n\t\tsyntax: true,\r\n\t\timageCompress: {\r\n\t\t\tquality: 0.7, // default\r\n\t\t\tmaxWidth: 1000, // default 1000\r\n\t\t\tmaxHeight: 1000, // default 1000\r\n\t\t\timageType: 'image/jpeg', // default\r\n\t\t\tdebug: true, // default\r\n\t\t  }\r\n\t}\r\n\tconst formats = ['bold', 'italic', 'underline', 'strike', 'code-block', 'blockquote', 'size', 'header', 'align', 'color', 'background', 'indent', 'list', 'link', 'image', 'video', 'clean']\r\n\r\n\tconst { quill, quillRef, Quill } = useQuill({ modules, formats })\r\n\tif (Quill && !quill) {\r\n\t\t// For execute this line only once.\r\n\t\tQuill.register('modules/imageCompress', imageCompress)\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\t\tsetReady(false)\r\n\t\t//포스트 불러오기 axios\r\n\t\tif (postId !== undefined && Number(postId) >= 1 && quill) {\r\n\t\t\t//postId가 없으면 포스트 내용 가져오지 않기\r\n\t\t\tlet url = process.env.REACT_APP_URL + '/posts/' + postId\r\n\t\t\t//url = process.env.REACT_APP_LOCAL_URL+'/posts/' + postId\r\n\r\n\t\t\tAxios.get(url, {\r\n\t\t\t\twithCredentials: true,\r\n\t\t\t}) //포스트 불러오기\r\n\t\t\t\t.then((res) => {\r\n\t\t\t\t\tlet title = document.querySelector('[name=title]')\r\n\t\t\t\t\ttitle.value = res.data.title\r\n\r\n\t\t\t\t\tconst tags = document.querySelectorAll('[type=radio]')\r\n\t\t\t\t\tfor (let i of tags) {\r\n\t\t\t\t\t\t//체크 초기화\r\n\t\t\t\t\t\ti.checked = false\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (res.data.tags) {\r\n\t\t\t\t\t\t//체크박스 체크\r\n\t\t\t\t\t\tconst mainMenu = document.getElementById(res.data.tags[0])\r\n\t\t\t\t\t\tif (mainMenu) mainMenu.checked = true\r\n\t\t\t\t\t\tfor (let i of store.menus) {\r\n\t\t\t\t\t\t\tif (i.name === res.data.tags[0]) {\r\n\t\t\t\t\t\t\t\t//선택된 메인메뉴의 서브메뉴를 그리기\r\n\t\t\t\t\t\t\t\tsetSubMenus(i.subMenus)\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t//포스트바디 가져오기\r\n\t\t\t\t\turl = process.env.REACT_APP_URL + '/posts/postBody/' + postId\r\n\t\t\t\t\t//url = process.env.REACT_APP_LOCAL_URL + '/posts/postBody/' + postId\r\n\t\t\t\t\tAxios.get(url)\r\n\t\t\t\t\t\t.then((res2) => {\r\n\t\t\t\t\t\t\tif (typeof res2.data.body === 'string') quill.setText(res2.data.body)\r\n\t\t\t\t\t\t\t//body가 string이면 setText\r\n\t\t\t\t\t\t\telse quill.setContents(res2.data.body) //body가 string이 아니면 setContents : Delta\r\n\t\t\t\t\t\t\tsetPost({\r\n\t\t\t\t\t\t\t\t...res.data,\r\n\t\t\t\t\t\t\t\tbody: res2.data.body,\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t\t.catch((e) => {\r\n\t\t\t\t\t\t\talert(e)\r\n\t\t\t\t\t\t\tsetReady(true)\r\n\t\t\t\t\t\t}) //실패\r\n\t\t\t\t})\r\n\t\t\t\t.catch((e) => {\r\n\t\t\t\t\talert(e)\r\n\t\t\t\t\tsetReady(true)\r\n\t\t\t\t}) //실패\r\n\t\t}else{\r\n\t\t\tsetReady(true)\r\n\t\t}\r\n\t}, [location, quill, postId, store.menus])\r\n\r\n\tuseEffect(() => {\r\n\t\tif (subMenus && post) {\r\n\t\t\tconst subMenu = document.getElementById(post.tags[1])\r\n\t\t\tif (subMenu) subMenu.checked = true\r\n\t\t}\r\n\t\tconst newSubMenu = document.querySelector('[name=newSubMenu]')\r\n\t\tif (newSubMenu) newSubMenu.value = ''\r\n\t}, [subMenus, post])\r\n\r\n\tuseEffect(() => {\r\n\t\tstore.setReady(false)\r\n\t\tif(post || ready){\r\n\t\t\tstore.setReady(true)\r\n\t\t}\r\n\t})\r\n\r\n\t//글 작성 or 수정\r\n\tconst clickPost = (e) => {\r\n\t\tif (!store.login || (store.login && store.login.username !== 'imki123')) {\r\n\t\t\talert('글 작성은 블로그 주인만 가능합니다 ^^;')\r\n\t\t\treturn\r\n\t\t}\r\n\t\tif (!window.confirm('글을 게시하시겠습니까?')) {\r\n\t\t\treturn\r\n\t\t}\r\n\t\t//제목, 내용, 태그가 있는지 검사\r\n\t\tlet title = document.querySelector('[name=title]')\r\n\t\tconst content = quill.getContents()\r\n\t\tconst text = quill.getText()\r\n\t\tconst mainMenu = document.querySelector('[name=mainMenu]:checked')\r\n\t\tlet tags = []\r\n\t\tconst subMenu = document.querySelector('[name=subMenu]:checked')\r\n\t\tconst newMainMenu = document.querySelector('[name=newMainMenu]')\r\n\t\tconst newSubMenu = document.querySelector('[name=newSubMenu]')\r\n\r\n\t\tif (mainMenu) {\r\n\t\t\ttags[0] = mainMenu.value\r\n\t\t}\r\n\t\tif (newMainMenu.value !== '') {\r\n\t\t\ttags[0] = newMainMenu.value\r\n\t\t}\r\n\t\tif (subMenu) {\r\n\t\t\tif (subMenu.value !== '') tags[1] = subMenu.value //체크 된 서브메뉴 추가\r\n\t\t}\r\n\t\tif (newSubMenu.value !== '') {\r\n\t\t\ttags[1] = newSubMenu.value\r\n\t\t}\r\n\r\n\t\tif (title.value.length === 0) {\r\n\t\t\talert('제목을 입력해주세요.')\r\n\t\t\treturn\r\n\t\t} else if (quill.getLength() === 1) {\r\n\t\t\talert('내용을 입력해주세요.')\r\n\t\t\treturn\r\n\t\t} else if (tags.length < 1 && newMainMenu.value === '') {\r\n\t\t\talert('메인메뉴를 1개 선택해주세요.')\r\n\t\t\treturn\r\n\t\t}\r\n\r\n\t\t//url에 POST 또는 PATCH 요청\r\n\t\tlet url = process.env.REACT_APP_URL + '/posts'\r\n\t\t//url = process.env.REACT_APP_LOCAL_URL + '/posts'\r\n\t\tlet method = 'POST',\r\n\t\t\tmessage = '글 작성 성공'\r\n\t\tif (e.target.id === 'PATCH') {\r\n\t\t\tif (postId !== undefined && Number(postId) >= 1) {\r\n\t\t\t\turl += '/' + postId\r\n\t\t\t\tmethod = 'PATCH'\r\n\t\t\t\tmessage = '글 수정 성공'\r\n\t\t\t} else {\r\n\t\t\t\tconsole.log('postId 비정상, 글 수정 실패')\r\n\t\t\t\treturn\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tAxios(url, {\r\n\t\t\t//포스트 작성, 수정 (최대 10mb. koa-bodyparser에서 설정.)\r\n\t\t\tmethod: method,\r\n\t\t\twithCredentials: true, //CORS\r\n\t\t\tdata: {\r\n\t\t\t\ttitle: title.value,\r\n\t\t\t\tbody: content,\r\n\t\t\t\ttext: text,\r\n\t\t\t\ttags: tags,\r\n\t\t\t},\r\n\t\t})\r\n\t\t\t.then((res) => {\r\n\t\t\t\talert(message) //성공\r\n\t\t\t\tpostId = res.data.postId\r\n\t\t\t\tif (method === 'POST') {\r\n\t\t\t\t\t//글 작성시 menus 카운트 증가\r\n\t\t\t\t\tAxios()\r\n\t\t\t\t}\r\n\t\t\t\tif (postId > 1) {\r\n\t\t\t\t\thistory.push(`/posts/${postId}`) //수정 성공하면 해당 글로 이동함\r\n\t\t\t\t} else {\r\n\t\t\t\t\thistory.push(`/posts/1`) //인사말은 홈으로 이동\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\t.catch((e) => alert(e)) //실패\r\n\t}\r\n\r\n\t// 화면 리사이즈시 editor 아래 마진 변경\r\n\tuseEffect(() => {\r\n\t\tconst editor = document.querySelector('#editor')\r\n\t\tconst toolbar = document.querySelector('.ql-toolbar')\r\n\t\tif (editor && toolbar) {\r\n\t\t\teditor.style.marginBottom = toolbar.clientHeight + 10 + 'px'\r\n\t\t}\r\n\t\twindow.removeEventListener('resize', function () {})\r\n\t\twindow.addEventListener('resize', function () {\r\n\t\t\tif (editor && toolbar) {\r\n\t\t\t\teditor.style.marginBottom = toolbar.clientHeight + 10 + 'px'\r\n\t\t\t}\r\n\t\t})\r\n\t}, [location])\r\n\r\n\t//메인메뉴 추가시 라디오박스 체크 해제, 띄어쓰기를 _로 변경\r\n\tconst changeMainMenu = (e) => {\r\n\t\tif (store.menus) {\r\n\t\t\tfor (let i of store.menus) {\r\n\t\t\t\tif (i.name === e.target.value) {\r\n\t\t\t\t\tsetSubMenus(i.subMenus)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (e.target.type !== 'radio') {\r\n\t\t\t//인풋박스 입력하면 라디오 체크 해제\r\n\t\t\te.target.value = e.target.value.replace(/\\s/g, '_')\r\n\t\t\tconst mainMenu = document.querySelector('[name=mainMenu]:checked')\r\n\t\t\tif (mainMenu) mainMenu.checked = false\r\n\t\t}\r\n\t}\r\n\t//서브메뉴 추가시 라디오박스 체크 해제, 띄어쓰기를 _로 변경\r\n\tconst changeSubMenu = (e) => {\r\n\t\tif (e.target.type !== 'radio') {\r\n\t\t\t//인풋박스 입력하면 라디오 체크 해제\r\n\t\t\te.target.value = e.target.value.replace(/\\s/g, '_')\r\n\t\t\tconst subMenu = document.querySelector('[name=subMenu]:checked')\r\n\t\t\tif (subMenu) subMenu.checked = false\r\n\t\t} else {\r\n\t\t\tconst newSubMenu = document.querySelector('[name=newSubMenu]')\r\n\t\t\tif (newSubMenu) newSubMenu.value = ''\r\n\t\t}\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className=\"quill\">\r\n\t\t\t<div className=\"quillTitle\">\r\n\t\t\t\t<input name=\"title\" placeholder=\"제목\" />\r\n\t\t\t</div>\r\n\t\t\t<div id=\"editor\">\r\n\t\t\t\t<div ref={quillRef} />\r\n\t\t\t\t<div id=\"tags\" className=\"no-drag\">\r\n\t\t\t\t\t<div id=\"tagsTitle\">\r\n\t\t\t\t\t\ttags\r\n\t\t\t\t\t\t{postId !== undefined && Number(postId) >= 1 ? (\r\n\t\t\t\t\t\t\t<button className=\"editorButton\" onClick={clickPost} id=\"PATCH\">\r\n\t\t\t\t\t\t\t\t글 수정\r\n\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t<button className=\"editorButton\" onClick={clickPost}>\r\n\t\t\t\t\t\t\t\t새글 작성\r\n\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t메인메뉴:\r\n\t\t\t\t\t\t{store.menus &&\r\n\t\t\t\t\t\t\tstore.menus.map((i) => (\r\n\t\t\t\t\t\t\t\t<label key={i.name}>\r\n\t\t\t\t\t\t\t\t\t<input type=\"radio\" name=\"mainMenu\" value={i.name} id={i.name} onClick={changeMainMenu} />\r\n\t\t\t\t\t\t\t\t\t{i.name}\r\n\t\t\t\t\t\t\t\t</label>\r\n\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t<input name=\"newMainMenu\" placeholder=\"메인메뉴 추가\" onChange={changeMainMenu} autoComplete=\"off\"></input>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t서브메뉴:\r\n\t\t\t\t\t\t<label>\r\n\t\t\t\t\t\t\t<input type=\"radio\" name=\"subMenu\" value=\"\" onClick={changeSubMenu} /> 선택안함\r\n\t\t\t\t\t\t</label>\r\n\t\t\t\t\t\t{subMenus &&\r\n\t\t\t\t\t\t\tsubMenus.map((i) => (\r\n\t\t\t\t\t\t\t\t<label key={i.name}>\r\n\t\t\t\t\t\t\t\t\t<input type=\"radio\" name=\"subMenu\" value={i.name} id={i.name} onClick={changeSubMenu} /> {i.name}\r\n\t\t\t\t\t\t\t\t</label>\r\n\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t<input name=\"newSubMenu\" placeholder=\"서브메뉴 추가\" autoComplete=\"off\" onChange={changeSubMenu}></input>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\nexport default React.memo(Quill)\r\n","import React, { useEffect } from 'react'\r\nimport './Paging.css'\r\nimport {NavLink, useLocation } from 'react-router-dom'\r\nimport queryString from 'query-string';\r\n\r\nfunction Paging(props){\r\n    const {postCount} = props\r\n\tconst location = useLocation()\r\n\tconst search = queryString.parse(location.search)\r\n    let paging = null\r\n    const pages = []\r\n\tif (postCount) {\r\n\t\tconst page = Number(search.page) || 1\r\n\t\tconst startPost = postCount - (page - 1) * 10\r\n\t\tpaging = {\r\n\t\t\tpage: page,\r\n\t\t\tlastPage: Math.ceil(postCount / 10),\r\n\t\t\tpostCount: postCount,\r\n\t\t\tstartPost: startPost,\r\n        }\r\n        \r\n        for(let i=0; i<paging.lastPage; i++){\r\n            pages.push(i+1)\r\n        }\r\n\t}\r\n\r\n    useEffect(() => {\r\n        const links = document.querySelectorAll('.paging a')\r\n        for(let i=0; i<links.length; i++){\r\n            if(links[i].innerHTML === search.page){\r\n                links[i].className = 'activePage'\r\n            }else{\r\n                links[i].className = 'inactivePage'\r\n            }\r\n            if(search.page === undefined){ //search에 page가 없으면 1을 activePage로 설정\r\n                if(links[i].innerHTML === '1'){\r\n                    links[i].className = 'activePage'\r\n                }\r\n            }\r\n        }\r\n    }, [search, postCount])\r\n\r\n    \r\n    return(\r\n        <div className=\"paging\">\r\n            {pages.map((p, idx) =>  \r\n                <NavLink path={location.pathname} to={`${location.pathname}?page=${p}`} \r\n                    className=\"inactivePage\" key={idx}>{p}</NavLink>)}\r\n        </div>\r\n    )\r\n}\r\nexport default React.memo(Paging)","import Axios from 'axios'\r\nimport React, { useEffect, useState } from 'react'\r\nimport { AppContext } from '../App'\r\nimport Paging from './Paging'\r\nimport PostList from './PostList'\r\n\r\nimport './Tags.css'\r\n\r\nfunction Tags({ match, location, history }) {\r\n\tconst store = React.useContext(AppContext)\r\n\tconst { tag } = match.params\r\n\tconst [lists, setLists] = useState([])\r\n\tuseEffect(() => {\r\n\t\t\r\n\t\tlet url = process.env.REACT_APP_URL + '/posts/tag/' + tag + location.search\r\n\t\t//url = process.env.REACT_APP_LOCAL_URL + '/posts/tag/' + tag + location.search\r\n\r\n\t\tAxios.get(url, {\r\n\t\t\twithCredentials: true,\r\n\t\t})\r\n\t\t\t.then((res) => {\r\n\t\t\t\tif(res.data.list.length < 1){\r\n\t\t\t\t\talert('찾으시는 페이지가 없습니다.')\r\n\t\t\t\t\thistory.go(-1)\r\n\t\t\t\t}else{\r\n\t\t\t\t\tsetLists(res.data.list)\r\n\t\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\t.catch((e) => alert(e)) //실패\r\n\t},[tag, location, history])\r\n\t\r\n\tuseEffect(() => {\r\n\t\tstore.setReady(false)\r\n\t\tif(lists){\r\n\t\t\tstore.setReady(true)\r\n\t\t}\r\n\t})\r\n\r\n\treturn (\r\n\t\t<div className=\"postListWrapper\">\r\n\t\t\t<div className=\"postListTitle\">{tag.substring(0,1).toUpperCase() + tag.substring(1)}</div>\r\n\t\t\t{lists && lists.map((i, idx) => <PostList no={lists.length - idx} list={i} key={i.postId} />)}\r\n\t\t\t{<Paging postCount={lists.length} />}\r\n\t\t</div>\r\n\t)\r\n}\r\nexport default React.memo(Tags)\r\n","import React, { useEffect } from 'react'\r\nimport AddCircleOutlineIcon from '@material-ui/icons/AddCircleOutline'\r\nimport ArrowUpwardIcon from '@material-ui/icons/ArrowUpward'\r\nimport './Content.css'\r\nimport { Link, Route, useLocation, Switch } from 'react-router-dom'\r\nimport { AppContext } from '../App'\r\n\r\nimport Post from './Post'\r\nimport NotFoundPage from './NotFoundPage'\r\nimport Login from './Login'\r\nimport Quill from './Quill'\r\nimport Tags from './Tags'\r\n\r\nfunction Content(props) {\r\n\tconst store = React.useContext(AppContext)\r\n\tconst location = useLocation()\r\n\r\n\tuseEffect(() => {\r\n\t\tconst resize = () => {\r\n\t\t\tstore.resizeTextarea()\r\n\t\t}\r\n\r\n\t\twindow.addEventListener('resize', resize)\r\n\t\tconst loading = document.querySelector('#loading')\r\n\t\tconst view = document.querySelector('.post')\r\n\t\tif (store.ready) {\r\n\t\t\tif (loading) loading.style.display = 'none'\r\n\t\t\tif (view) view.style.display = 'block'\r\n\r\n\t\t\tsetTimeout(function () {\r\n\t\t\t\tstore.resizeTextarea()\r\n\t\t\t}, 10)\r\n\t\t} else {\r\n\t\t\tif (loading) loading.style.display = 'flex'\r\n\t\t\tif (view) view.style.display = 'none'\r\n\t\t}\r\n\t\treturn window.removeEventListener('resize', resize)\r\n\t}, [location.hash, store])\r\n\r\n\tconst scrollUp = (e) => {\r\n\t\t// content의 스크롤을 가장 위로\r\n\t\tconst content = document.querySelector('#content')\r\n\t\tlet contentScroll = content.scrollTop\r\n\t\tlet dif = contentScroll / 50\r\n\t\tconst frame = setInterval(function () {\r\n\t\t\tif (content.scrollTop <= 0) {\r\n\t\t\t\tclearInterval(frame)\r\n\t\t\t} else {\r\n\t\t\t\tcontent.scrollTop -= dif\r\n\t\t\t}\r\n\t\t}, 10)\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div id=\"content\" className=\"slideMenu\">\r\n\t\t\t{/* FAB */}\r\n\t\t\t{store.login && store.login.username === 'imki123' && (\r\n\t\t\t\t<Link id=\"postFAB\" className=\"hover\" to=\"/quill\">\r\n\t\t\t\t\t<AddCircleOutlineIcon />\r\n\t\t\t\t</Link>\r\n\t\t\t)}\r\n\t\t\t<div id=\"scrollFAB\" className=\"hover\" onClick={scrollUp}>\r\n\t\t\t\t<ArrowUpwardIcon />\r\n\t\t\t</div>\r\n\t\t\t<div id=\"menuFAB\" className=\"hover\" onClick={store.slideMenu}>\r\n\t\t\t\t<img alt=\"MENU\" src={process.env.PUBLIC_URL + '/images/guide_icon.png'} />\r\n\t\t\t</div>\r\n\r\n\t\t\t{/* 로딩 */}\r\n\t\t\t<div id=\"loading\">\r\n\t\t\t\t<img alt=\"Loading\" src={process.env.PUBLIC_URL + '/images/loading.gif'} />\r\n\t\t\t</div>\r\n\r\n\t\t\t<Switch>\r\n\t\t\t\t<Route path={['/login', '/register', '/loginStatus', '/withdraw']} component={Login} />\r\n\t\t\t\t<Route path=\"/quill/:postId?\" component={Quill} />\r\n\t\t\t\t<Route path=\"/tags/:tag\" component={Tags} />\r\n\t\t\t\t<Route path=\"/\" exact component={Post} />\r\n\t\t\t\t<Route path=\"/posts/:postId\" component={Post} />\r\n\t\t\t\t<Route path=\"/NotFoundPage\" component={NotFoundPage} />\r\n\t\t\t\t<Route path=\"*\" component={NotFoundPage} />\r\n\t\t\t</Switch>\r\n\r\n\t\t\t{/* 텍스트 에어리어 높이 조정을 위한 안보이는 가짜 텍스트에어리어 */}\r\n\t\t\t<textarea disabled id=\"fakeTextarea\" />\r\n\t\t</div>\r\n\t)\r\n}\r\nexport default React.memo(Content)\r\n","import React from 'react'\r\nimport './Setting.css'\r\nimport { Link} from 'react-router-dom'\r\nimport { AppContext } from '../App'\r\n\r\nfunction Setting(props) {\r\n    const store = React.useContext(AppContext)\r\n\r\n    const closeSetting = e => {\r\n        const settingWrapper = document.querySelector('#settingWrapper')\r\n        e.stopPropagation()\r\n        setTimeout(function(){\r\n            settingWrapper.style.display = 'none'\r\n        },200)\r\n    }\r\n\r\n    const logout = e => {\r\n        if(window.confirm('로그아웃 하시겠습니까?')){\r\n            let url = process.env.REACT_APP_URL+'/auth/logout'\r\n            //url = process.env.REACT_APP_LOCAL_URL+'/auth/logout'\r\n\r\n            fetch(url,{\r\n                mode: 'cors',\r\n                method: 'POST',\r\n                credentials: \"include\",\r\n            })\r\n            .then(res => {\r\n                if(res.status===204) { //로그아웃 하면 204\r\n                    console.log('로그아웃 성공')\r\n                    store.setLogin(false)\r\n                }\r\n                else{\r\n                    console.log('로그아웃 실패')\r\n                }\r\n            })\r\n            .catch(e => console.error(e))\r\n        }\r\n    }\r\n\r\n\treturn(\r\n        <div id=\"settingWrapper\" onClick={closeSetting}>\r\n            <div id=\"setting\">\r\n                <div id=\"settingListWrapper\">\r\n                    {store.login ? \r\n                        <Link className=\"settingList\" to=\"/loginStatus\">{store.login.username}</Link> :\r\n                        <Link className=\"settingList\" to=\"/login\">로그인</Link>    \r\n                    }\r\n                    {store.login && <div className=\"settingList\" onClick={logout}>로그아웃</div>}\r\n                    {!store.login && <Link className=\"settingList\" to=\"/register\">회원가입</Link>}\r\n                    {store.login && <Link className=\"settingList\" to=\"/withdraw\">회원탈퇴</Link>}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    ) \r\n}\r\nexport default React.memo(Setting)\r\n","import React, { createContext, useEffect, useState } from 'react'\r\nimport './App.css'\r\nimport { useLocation } from 'react-router-dom'\r\n\r\nimport Header from './components/Header'\r\nimport Body from './components/Body'\r\nimport Guide from './components/Guide'\r\nimport Content from './components/Content'\r\nimport Setting from './components/Setting'\r\nimport Axios from 'axios'\r\nimport Meta from './components/Meta'\r\n\r\nconst AppContext = createContext()\r\n\r\nfunction App() {\r\n\tconst location = useLocation() //페이지 경로 변경 감지\r\n\tconst [ready, setReady] = useState(false)\r\n\tconst [posts, setPosts] = useState([])\r\n\tconst [headers, setHeaders] = useState({})\r\n\tconst [login, setLogin] = useState(false)\r\n\tconst [refresh, setRefresh] = useState(false)\r\n\tconst [menus, setMenus] = useState([\r\n\t\t{ name: 'home', count: 1, order: 1 },\r\n\t\t{ name: 'programming', order: 2 },\r\n\t\t{ name: 'article', order: 3 },\r\n\t])\r\n\r\n\tconst resizeTextarea = (e) => {\r\n\t\t//텍스트에어리어를 찾아서 크기를 글자 높이에 맞게 변경하기\r\n\t\t//textarea 높이 조정\r\n\t\tconst fake = document.querySelector('#fakeTextarea')\r\n\t\tlet textareas = []\r\n\t\tif (e && e.target) {\r\n\t\t\ttextareas.push(e.target)\r\n\t\t} else {\r\n\t\t\ttextareas = document.querySelectorAll('textarea')\r\n\t\t}\r\n\r\n\t\tif (textareas && fake) {\r\n\t\t\tfor (let i = 0; i < textareas.length; i++) {\r\n\t\t\t\tfake.style.height = '1px'\r\n\t\t\t\tfake.style.width = textareas[i].clientWidth + 'px'\r\n\t\t\t\tfake.value = textareas[i].value\r\n\t\t\t\ttextareas[i].style.height = 5 + fake.scrollHeight + 'px'\r\n\t\t\t}\r\n\t\t\tfake.value = ''\r\n\t\t\tfake.style.height = '0px'\r\n\t\t}\r\n\t}\r\n\r\n\tconst slideMenu = () => {\r\n\t\t//메뉴버튼 클릭 시 메뉴 보이기 & 숨기기\r\n\t\tconst body = document.querySelector('#body')\r\n\t\tconst guideWrapper = document.querySelector('#guideWrapper')\r\n\t\tconst content = document.querySelector('#content')\r\n\r\n\t\tif (!guideWrapper.style.left) {\r\n\t\t\t//스타일 속성이 없으면 초기값 지정\r\n\t\t\tif (body.clientWidth < 500) {\r\n\t\t\t\tguideWrapper.style.left = '-312px' //모바일\r\n\t\t\t} else {\r\n\t\t\t\tguideWrapper.style.left = '0px' //PC\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (guideWrapper.style.left && guideWrapper.style.left.replace('px', '') > -100) {\r\n\t\t\tconsole.log(guideWrapper.style.left)\r\n\t\t\tconsole.log('close')\r\n\t\t\t//메뉴 닫기\r\n\t\t\tguideWrapper.parentNode.style.width = '0' // 회색 0\r\n\t\t\tcontent.style.width = 'calc(100% - 16px)' //콘텐트 100% - 16px\r\n\t\t\tguideWrapper.style.left = '-312px' // 메뉴 왼쪽으로\r\n\t\t} else {\r\n\t\t\tconsole.log(guideWrapper.style.left)\r\n\t\t\tconsole.log('open')\r\n\t\t\t//메뉴 열기\r\n\t\t\tguideWrapper.style.left = '0px' // 메뉴 0\r\n\t\t\tif (body.clientWidth < 500) {\r\n\t\t\t\t//모바일\r\n\t\t\t\tguideWrapper.parentNode.style.width = '100%' // 회색 100%\r\n\t\t\t} else {\r\n\t\t\t\t//PC\r\n\t\t\t\tcontent.style.width = `calc(100% - 312px - 16px)`\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t//모바일에서 회색부분 클릭 시 메뉴 닫기\r\n\tconst closeMenuMobile = (e) => {\r\n\t\tconst body = document.querySelector('#body')\r\n\t\tconst guideWrapper = document.querySelector('#guideWrapper')\r\n\t\tconst content = document.querySelector('#content')\r\n\r\n\t\tguideWrapper.parentNode.style.width = '0' // 회색 0\r\n\t\tif (body.clientWidth < 500) {\r\n\t\t\t//모바일\r\n\t\t\tguideWrapper.style.left = '-312px' // 메뉴 0\r\n\t\t\tcontent.style.width = 'calc(100% - 16px)'\r\n\t\t} else {\r\n\t\t\tcontent.style.width = 'calc(100% - 312px - 16px)'\r\n\t\t}\r\n\t}\r\n\tconst checkToken = (func) => {\r\n\t\t//로그인 되어있는지 토큰 체크하기\r\n\t\tlet url = process.env.REACT_APP_URL + '/auth/check'\r\n\t\t//url = process.env.REACT_APP_LOCAL_URL+'/auth/check'\r\n\t\tAxios.get(url, { withCredentials: true })\r\n\t\t\t.then((res) => {\r\n\t\t\t\tif (res.data) {\r\n\t\t\t\t\tconsole.log('토큰 체크 성공')\r\n\t\t\t\t\tsetLogin(res.data)\r\n\t\t\t\t} else {\r\n\t\t\t\t\tconsole.log('토큰 없음') //res.status===204(No Content)\r\n\t\t\t\t\tsetLogin(false)\r\n\t\t\t\t}\r\n\t\t\t\tif (func) func()\r\n\t\t\t})\r\n\t\t\t.catch((e) => {\r\n\t\t\t\t//실패\r\n\t\t\t\tif (func) func()\r\n\t\t\t})\r\n\t}\r\n\r\n\t//useContext 이용하여 하위 컴포넌트에 상태 전달\r\n\tconst store = {\r\n\t\tready,\r\n\t\tsetReady,\r\n\t\tposts,\r\n\t\tsetPosts,\r\n\t\theaders,\r\n\t\tsetHeaders,\r\n\t\tlogin,\r\n\t\tsetLogin,\r\n\t\trefresh,\r\n\t\tsetRefresh,\r\n\t\tmenus,\r\n\t\tsetMenus,\r\n\t\tresizeTextarea,\r\n\t\tslideMenu,\r\n\t\tcloseMenuMobile,\r\n\t\tcheckToken,\r\n\t}\r\n\r\n\t// 포스트에서 태그 정보를 가져와서 메뉴에 표시함, Quill의 태그목록에 표시\r\n\tuseEffect(() => {\r\n\t\tlet url = process.env.REACT_APP_URL + '/menus'\r\n\t\t//url = process.env.REACT_APP_LOCAL_URL+'/menus'\r\n\r\n\t\tAxios.get(url, {\r\n\t\t\twithCredentials: true,\r\n\t\t}) //메뉴 태그 가져오기\r\n\t\t\t.then((res) => {\r\n\t\t\t\tsetMenus(res.data)\r\n\t\t\t})\r\n\t\t\t.catch((e) => alert(e)) //실패\r\n\t}, [location.pathname, refresh])\r\n\r\n\t//주소 변경될 때, 토큰 체크하고 포스트 조회하기\r\n\tuseEffect(() => {\r\n\t\tcheckToken()\r\n\t}, [location.pathname, location.search, refresh])\r\n\r\n\treturn (\r\n\t\t<AppContext.Provider value={store}>\r\n\t\t\t<div id=\"app\">\r\n\t\t\t\t<Meta\r\n\t\t\t\t\tdata={{\r\n\t\t\t\t\t\ttitle: '임기의 코딩 블로그 :D',\r\n\t\t\t\t\t\tdiscription: 'imki123의 임기의 코딩 블로그입니다 :D',\r\n\t\t\t\t\t\timage: process.env.PUBLIC_URL + '/images/imcat_800x400.png',\r\n\t\t\t\t\t}}\r\n\t\t\t\t/>\r\n\t\t\t\t<Header />\r\n\t\t\t\t<Setting />\r\n\t\t\t\t<Body>\r\n\t\t\t\t\t<Guide />\r\n\t\t\t\t\t<Content />\r\n\t\t\t\t</Body>\r\n\t\t\t</div>\r\n\t\t</AppContext.Provider>\r\n\t)\r\n}\r\nexport { AppContext }\r\nexport default React.memo(App)\r\n","import React from 'react'\r\nimport ReactDOM, { hydrate } from 'react-dom'\r\nimport { BrowserRouter } from 'react-router-dom'\r\nimport App from './App'\r\n\r\nconst rootElement = document.getElementById('root')\r\n\r\nif (rootElement.hasChildNodes()) {\r\n\thydrate(\r\n\t\t<BrowserRouter>\r\n\t\t\t<App />\r\n\t\t</BrowserRouter>,\r\n\t\trootElement,\r\n\t)\r\n} else {\r\n\tReactDOM.render(\r\n\t\t<BrowserRouter basename={process.env.PUBLIC_URL}>\r\n\t\t\t<App />\r\n\t\t</BrowserRouter>,\r\n\t\tdocument.getElementById('root'),\r\n\t)\r\n}\r\n"],"sourceRoot":""}