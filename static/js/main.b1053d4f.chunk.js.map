{"version":3,"sources":["utils/util.js","components/Header.js","components/Body.js","components/Menus.js","components/Guide.js","components/Comment.js","components/Meta.js","components/PostList.js","components/Recents.js","components/CommentLists.js","components/Emoji.js","components/Post.js","components/NotFoundPage.js","components/Login.js","components/Quill.js","components/Paging.js","components/Tags.js","components/Content.js","components/Setting.js","App.js","index.js"],"names":["resizeTextarea","e","fake","document","querySelector","textareas","target","push","querySelectorAll","i","length","style","height","width","offsetWidth","value","scrollHeight","slideMenu","body","guideBack","guideWrapper","content","left","replace","boxShadow","maxWidth","closeMenuMobile","resize","$header","clientWidth","offsetHeight","editor","toolbar","marginBottom","React","memo","props","store","useContext","AppContext","id","Button","className","onClick","to","startIcon","alt","src","setting","display","login","imageUrl","Math","floor","random","onError","children","menus","map","key","name","exact","activeClassName","substring","toUpperCase","count","subMenus","j","title","href","preventDefault","window","open","comment","post","refreshComment","useState","setImageUrl","update","date","publishedDate","useEffect","postId","commentId","username","url","process","REACT_APP_URL","Axios","withCredentials","data","then","res","catch","fontWeight","updated","readOnly","onChange","textarea","confirm","classList","remove","patch","console","log","alert","add","focus","backgroundColor","locales","en","ko","Meta","lang","locale","description","image","undefined","canonical","type","Helmet","titleTemplate","rel","itemprop","property","hreflang","list","no","tags","views","thumbnail","loading","text","idx","location","comments","setComments","commentCnt","setCommentCnt","recentAll","setRecentAll","pathname","get","setReady","reduce","a","b","splited","emojis","split","copied","emoji","background","setTimeout","options","format","match","history","params","setPost","postBody","setPostBody","recents","setRecents","popular","setPopular","recentComments","setRecentComments","useQuill","modules","syntax","formats","quill","quillRef","hash","elem","scrollTop","offsetTop","setContents","setText","activeTags","deletePost","delete","go","func","svg","ref","variant","color","placeholder","useHistory","browser","agent","navigator","userAgent","toLowerCase","indexOf","checkUsername","setCheckUsername","checkPassword","setCheckPassword","checkPasswordConfirm","setCheckPasswordConfirm","buttonName","setButtonName","userinfo","setUserinfo","frame","userinfoElem","setInterval","clearInterval","user","JSON","parse","host","email","naverLogout","click","profile_image","kakaoLogout","profile","thumbnail_image_url","fetch","mode","method","credentials","headers","stringify","status","json","message","error","setLogin","clickButton","password","fontSize","naverIdLogin","firstChild","kakaoLogin","googleLogin","passwordConfirm","autoComplete","textAlign","ready","setSubMenus","size","header","align","indent","imageCompress","quality","maxHeight","imageType","debug","Quill","register","Number","checked","mainMenu","getElementById","res2","subMenu","newSubMenu","clickPost","getContents","getText","$img","newMainMenu","getLength","changeMainMenu","changeSubMenu","postCount","useLocation","search","queryString","paging","pages","page","parseInt","startPost","lastPage","ceil","links","innerHTML","p","path","tag","lists","setLists","titles","setTitles","setPostCount","setPage","pageNum","tempTitles","component","Login","Tags","CommentLists","Post","NotFoundPage","disabled","settingWrapper","stopPropagation","naverIdLogout","googleLogout","oAuth","createContext","order","setMenus","checkToken","Provider","rootElement","hasChildNodes","hydrate","basename","ReactDOM","render","timer","debounce","addEventListener","scroll","$FABs","top","forEach","right","event","clearTimeout"],"mappings":"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","file":"static/js/main.b1053d4f.chunk.js","sourcesContent":["import Axios from 'axios'\n\nexport const resizeTextarea = (e) => {\n  //텍스트에어리어를 찾아서 크기를 글자 높이에 맞게 변경하기\n  //textarea 높이 조정\n  const fake = document.querySelector('#fakeTextarea')\n  let textareas = []\n  if (e && e.target) {\n    textareas.push(e.target)\n  } else {\n    textareas = document.querySelectorAll('textarea')\n  }\n\n  if (textareas && fake) {\n    for (let i = 0; i < textareas.length; i++) {\n      fake.style.height = '1px'\n      fake.style.width = textareas[i].offsetWidth + 'px'\n      fake.value = textareas[i].value\n      textareas[i].style.height = 5 + fake.scrollHeight + 'px'\n    }\n    fake.value = ''\n    fake.style.height = '0px'\n  }\n}\n\nexport const slideMenu = () => {\n  //메뉴버튼 클릭 시 메뉴 보이기 & 숨기기\n  //guideWrapper는 PC에서 width조절, 모바일에서 absolute left조절\n  const body = document.body\n  const guideBack = document.querySelector('#guideBack')\n  const guideWrapper = document.querySelector('#guideWrapper')\n  const content = document.querySelector('#content')\n\n  guideBack.style.width = '0' // 회색 0\n\n  if (body.offsetWidth < 500) {\n    //모바일 메뉴 동작\n    if (guideWrapper.style.left && guideWrapper.style.left.replace('px', '') > -100) {\n      //메뉴 닫기\n      guideWrapper.style.left = null // 메뉴 -310px\n      content.style.width = 'calc(100% - 16px)'\n    } else {\n      //메뉴 열기\n      guideBack.style.width = '100%' // 회색 100%\n      guideWrapper.style.width = '300px' //너비 300px\n      guideWrapper.style.left = '0px' // 메뉴 0\n    }\n  } else {\n    //데스크탑 메뉴 동작\n    if (guideWrapper.offsetWidth > 0) {\n      //메뉴 닫기\n      guideWrapper.style.width = 0\n      guideWrapper.style.boxShadow = 'unset'\n      content.style.maxWidth = `calc(1280px - 16px)`\n      content.style.width = `calc(100% - 16px)`\n    } else {\n      //메뉴 열기\n      content.style.maxWidth = `calc(1280px - 300px - 16px)`\n      content.style.width = `calc(100% - 300px - 16px)`\n      guideWrapper.style.width = '300px'\n      guideWrapper.style.boxShadow = '2px 2px 3px 1px gray'\n    }\n  }\n}\n\n//모바일에서 회색부분 클릭 시 메뉴 닫기\nexport const closeMenuMobile = (e) => {\n  const guideBack = document.querySelector('#guideBack')\n  const guideWrapper = document.querySelector('#guideWrapper')\n  const content = document.querySelector('#content')\n\n  guideBack.style.width = '0' // 회색 0\n  if (document.body.offsetWidth < 500) {\n    //모바일\n    guideWrapper.style.left = null // 메뉴 -310px\n    content.style.width = 'calc(100% - 16px)'\n  }\n}\n\nexport const checkToken = (setLogin) => {\n  //로그인 되어있는지 토큰 체크하기\n  let url = process.env.REACT_APP_URL + '/auth/check'\n  //url = process.env.REACT_APP_LOCAL_URL+'/auth/check'\n  Axios.get(url, { withCredentials: true })\n    .then((res) => {\n      if (res.data) {\n        //console.log('토큰 체크 성공')\n        setLogin(res.data)\n      } else {\n        //console.log('토큰 없음') //res.status===204(No Content)\n        setLogin(false)\n      }\n    })\n    .catch((e) => {\n      //실패\n      console.log(e)\n    })\n}\n\n//리사이즈시에 동작\nexport const resize = () => {\n  //댓글 textarea 사이즈 조정\n  resizeTextarea()\n\n  //화면 리사이즈 되면 스크립트로 작성한 스타일 지우기\n  const $header = document.querySelector('#headerWrapper')\n  const guideBack = document.querySelector('#guideBack')\n  const guideWrapper = document.querySelector('#guideWrapper')\n  const content = document.querySelector('#content')\n\n  //헤더 너비 지정\n  if ($header) {\n    $header.style.width = document.body.clientWidth + 'px'\n  }\n\n  if (document.body.offsetWidth < 500 && guideWrapper.style.left.replace('px', '') * 1 >= 0) {\n    //모바일이고 메뉴가 켜져있다면 메뉴 유지함\n  } else if (document.body.offsetWidth >= 500 && guideWrapper.offsetWidth === 0) {\n    //PC이고 메뉴가 꺼져있다면 메뉴 유지함\n  } else {\n    guideBack.style = null\n    guideWrapper.style = null\n    content.style = null\n  }\n\n  //윈도우 사이즈에 맞춰서 콘텐트 사이즈 설정해줌\n  if (content) {\n    content.style.height = document.body.offsetHeight - 48 - 16 + 'px'\n  }\n\n  // Quill editor 아래 마진 변경\n  const editor = document.querySelector('#editor')\n  const toolbar = document.querySelector('.ql-toolbar')\n  if (editor && toolbar) {\n    editor.style.marginBottom = toolbar.offsetHeight + 10 + 'px'\n  }\n}\n","import React from 'react'\nimport './Header.scss'\nimport { Link } from 'react-router-dom'\nimport { AppContext } from '../App'\nimport MenuIcon from '@material-ui/icons/Menu'\nimport { closeMenuMobile, slideMenu } from '../utils/util'\nimport { Button } from '@material-ui/core'\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle'\n\nfunction Header(props) {\n  const store = React.useContext(AppContext)\n\n  const toggleSetting = () => {\n    const setting = document.querySelector('#settingWrapper')\n    if (setting) {\n      if (setting.style.display === 'block') {\n        setting.style.display = 'none'\n      } else {\n        setting.style.display = 'block'\n      }\n    }\n  }\n\n  return (\n    <div id=\"headerWrapper\">\n      <div id=\"header\">\n        <Button className=\"menu\" onClick={slideMenu}>\n          <MenuIcon />\n        </Button>\n        <Link to=\"/\">\n          <Button id=\"title\" startIcon={<img id=\"logo\" alt=\"logo\" src={process.env.PUBLIC_URL + '/favicon.ico'} />} onClick={closeMenuMobile}>\n            임기의 코딩 블로그\n          </Button>\n        </Link>\n        <Button className=\"hover profile\" onClick={toggleSetting}>\n          {!store.login ? (\n            <AccountCircleIcon />\n          ) : (\n            <img\n              alt=\"PROFILE\"\n              src={store.login.imageUrl ? store.login.imageUrl : 'noimage' + Math.floor(Math.random() * 100)}\n              onError={(e) => {\n                e.target.src = process.env.PUBLIC_URL + '/images/dog' + (Math.floor(Math.random() * (3 - 1 + 1)) + 1) + '.png'\n              }}\n            />\n          )}\n        </Button>\n      </div>\n    </div>\n  )\n}\nexport default React.memo(Header)\n","import React from 'react'\nimport './Body.scss'\n\nfunction Body(props) {\n  return <div id=\"body\">{props.children}</div>\n}\nexport default React.memo(Body)\n","import React from 'react'\nimport { NavLink } from 'react-router-dom'\nimport './Menus.scss'\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore'\nimport { Button } from '@material-ui/core'\n\nfunction Menus(props) {\n  const { menus } = props\n\n  //menu정보를 받아서 링크 메뉴 생성하기\n  //menu { name: string, cnt: number, Object{ name: string, cnt: number}, Object{...}}\n  return (\n    <>\n      {menus &&\n        menus.map((i) => (\n          <div key={i.name}>\n            <NavLink exact to={i.name === 'home' ? '/' : `/tags/${i.name}`} className=\"list\" activeClassName=\"activeList\">\n              <Button>\n                <span className=\"menuName\">{i.name.substring(0, 1).toUpperCase() + i.name.substring(1)}</span>\n                <span className=\"menuOptions\">\n                  <span className=\"menuCnt\">{i.count}</span>\n                  <span className=\"menuExpandIcon\">{i.subMenus && i.subMenus.length >= 1 && <ExpandMoreIcon />}</span>\n                </span>\n              </Button>\n            </NavLink>\n            {i.subMenus &&\n              i.subMenus.length > 0 &&\n              i.subMenus.map((j) => (\n                <NavLink exact to={`/tags/${j.name}`} className=\"list subList\" activeClassName=\"activeList\" key={j.name}>\n                  <Button>\n                    <span className=\"menuName\">{j.name.substring(0, 1).toUpperCase() + j.name.substring(1)}</span>\n                    <span className=\"menuOptions\">\n                      <span className=\"menuCnt\">{j.count}</span>\n                    </span>\n                  </Button>\n                </NavLink>\n              ))}\n          </div>\n        ))}\n    </>\n  )\n}\nexport default React.memo(Menus)\n","import React from 'react'\nimport './Guide.scss'\nimport { AppContext } from '../App'\nimport Menus from './Menus'\nimport OpenInNewIcon from '@material-ui/icons/OpenInNew'\nimport { closeMenuMobile } from '../utils/util'\nimport { Button } from '@material-ui/core'\n\nfunction Guide(props) {\n  const store = React.useContext(AppContext)\n\n  return (\n    <>\n      <div id=\"guideBack\" onClick={closeMenuMobile}></div>\n      <div id=\"guideWrapper\" className=\"slideMenu\" onClick={closeMenuMobile}>\n        <div id=\"avatar\">\n          <img alt=\"avatar\" src={process.env.PUBLIC_URL + '/images/avatar.jpg'} title=\"Hello 😄\" />\n          <div id=\"name\">Im Geeyoung(Hoodie)</div>\n          <div id=\"nickName\">imki123</div>\n          <div id=\"github\">\n            <a href=\"https://github.com/imki123\">\n              <img alt=\"github\" src={process.env.PUBLIC_URL + '/images/GitHub-Mark-32px.png'} /> <span>https://github.com/imki123</span>\n            </a>\n          </div>\n          <div id=\"introduction\">A web programmer who dreams of becoming a wise developer.</div>\n        </div>\n        <div className=\"menus\">\n          <Menus menus={store.menus} />\n        </div>\n        <div className=\"menus\">\n          <a\n            href=\"https://imki123.github.io/interactive_coding\"\n            className=\"list\"\n            onClick={(e) => {\n              e.preventDefault()\n              window.open('https://imki123.github.io/interactive_coding')\n            }}\n          >\n            <Button className=\"menuLink\">\n              <div>\n                <img alt=\"onandoff\" src={process.env.PUBLIC_URL + '/favicon.ico'} />\n                Interactive Coding\n              </div>\n              <OpenInNewIcon />\n            </Button>\n          </a>\n          <a\n            href=\"https://imki123.github.io/catbook\"\n            className=\"list\"\n            onClick={(e) => {\n              e.preventDefault()\n              window.open('https://imki123.github.io/catbook')\n            }}\n          >\n            <Button className=\"menuLink\">\n              <div>\n                <img alt=\"catbook\" src={process.env.PUBLIC_URL + '/images/catbook_64.png'} />\n                Catbook\n              </div>\n              <OpenInNewIcon />\n            </Button>\n          </a>\n          <a\n            href=\"https://imki123.github.io/onandoff\"\n            className=\"list\"\n            onClick={(e) => {\n              e.preventDefault()\n              window.open('https://imki123.github.io/onandoff')\n            }}\n          >\n            <Button className=\"menuLink\">\n              <div>\n                <img alt=\"onandoff\" src={process.env.PUBLIC_URL + '/favicon.ico'} />\n                OnAndOff\n              </div>\n              <OpenInNewIcon />\n            </Button>\n          </a>\n        </div>\n      </div>\n    </>\n  )\n}\nexport default React.memo(Guide)\n","import React, { useEffect, useState } from 'react'\nimport './Comment.scss'\nimport { AppContext } from '../App'\nimport Axios from 'axios'\nimport { resizeTextarea } from '../utils/util'\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle'\n\nfunction Comment(props) {\n  const store = React.useContext(AppContext)\n  const { comment, post, refreshComment } = props\n  const [imageUrl, setImageUrl] = useState('noimage')\n  let update = false\n  let date = comment.publishedDate.substring(0, 16).replace('T', ' ')\n  useEffect(() => {\n    const textarea = document.querySelector(`#comment_${post.postId}_${comment.commentId} textarea`)\n    textarea.value = comment.content\n\n    //댓글 프로필 이미지 가져오기\n    if (comment.username) {\n      let url = process.env.REACT_APP_URL + '/auth/user'\n      //url = process.env.REACT_APP_LOCAL_URL + '/auth/user'\n      Axios.post(url, {\n        withCredentials: true, //CORS\n        data: {\n          username: comment.username,\n        },\n      })\n        .then((res) => {\n          if (!res.data.imageUrl) setImageUrl('noimage' + Math.floor(Math.random() * 100))\n          else setImageUrl(res.data.imageUrl)\n        })\n        .catch((e) => {\n          setImageUrl('noimage' + Math.floor(Math.random() * 100))\n        })\n    }\n  }, [comment, post.postId, setImageUrl])\n\n  const updateComment = (e) => {\n    //댓글 수정\n    const textarea = document.querySelector(`#comment_${post.postId}_${comment.commentId} textarea`)\n    if (!update) {\n      update = true\n      textarea.classList.add('updateMode')\n      textarea.readOnly = false\n      textarea.focus()\n    } else if (window.confirm('댓글을 수정하시겠습니까?')) {\n      update = false\n      textarea.classList.remove('updateMode')\n      textarea.readOnly = true\n\n      let url = process.env.REACT_APP_URL + `/comments/${post.postId}/${comment.commentId}`\n      //url = process.env.REACT_APP_LOCAL_URL+`/comments/${post.postId}/${comment.commentId}`\n\n      Axios.patch(url, {\n        //댓글 수정\n        withCredentials: true, //CORS\n        data: {\n          content: textarea.value,\n        },\n      })\n        .then((res) => {\n          console.log(`${comment.commentId}번 댓글 수정 성공`)\n          refreshComment() //포스트 다시 불러오기\n        })\n        .catch((e) => alert(e)) //실패\n    }\n  }\n\n  const deleteComment = (e) => {\n    if (window.confirm('삭제 후에는 복구가 불가합니다. 정말로 댓글을 삭제하시겠습니까?')) {\n      let url = process.env.REACT_APP_URL + `/comments/delete/${post.postId}/${comment.commentId}`\n      //url = process.env.REACT_APP_LOCAL_URL+`/comments/delete/${post.postId}/${comment.commentId}`\n\n      Axios.patch(url, {\n        //포스트 삭제\n        withCredentials: true, //CORS\n      })\n        .then((res) => {\n          console.log(`${comment.commentId}번 댓글 삭제 성공`)\n          refreshComment() //포스트 다시 불러오기\n        })\n        .catch((e) => alert(e)) //실패\n    }\n  }\n\n  return (\n    <div className=\"commentWrapper\" id={`comment_${post.postId}_${comment.commentId}`}>\n      <div className=\"comment\">\n        <div className=\"commentProfile\">\n          {!comment.username ? (\n            <AccountCircleIcon />\n          ) : (\n            <img\n              alt=\"PROFILE\"\n              src={imageUrl}\n              onError={(e) => {\n                e.target.src = process.env.PUBLIC_URL + '/images/dog' + (Math.floor(Math.random() * (3 - 1 + 1)) + 1) + '.png'\n              }}\n            />\n          )}\n        </div>\n        <div className=\"commentContent\">\n          {comment.username === store.login.username ? (\n            <span className=\"commentUsername\" style={{ fontWeight: 'bold' }}>\n              {comment.username}\n            </span>\n          ) : (\n            <span className=\"commentUsername\">{comment.username}</span>\n          )}\n          <span className=\"commentDate\">\n            {' '}\n            - {date} {comment.updated && '(수정됨)'}\n          </span>\n          <textarea readOnly onChange={resizeTextarea} />\n        </div>\n      </div>\n      {((comment.username && comment.username === store.login.username) || store.login.username === 'imki123') && (\n        <div className=\"commentButtons\">\n          <button className=\"commentButton\" onClick={updateComment}>\n            수정\n          </button>\n          <button className=\"commentButton\" style={{ backgroundColor: 'red' }} onClick={deleteComment}>\n            삭제\n          </button>\n        </div>\n      )}\n    </div>\n  )\n}\nexport default React.memo(Comment)\n","// components/Meta\n/* eslint-disable no-undefined */\nimport React from 'react'\nimport { Helmet } from 'react-helmet'\n\nconst locales = {\n  en: 'en_US',\n  ko: 'ko_KR',\n}\n\nconst Meta = ({ data }) => {\n  const lang = locales[data.locale] || locales['en']\n  const title = data.title\n  const description = data.description\n  const image = data.image !== undefined && `${data.image}`\n  const canonical = data.canonical === undefined ? null : `https://imki123.github.io/${data.canonical}`\n  const type = data.type === undefined ? 'website' : data.type\n  const width = data.image && (data.width || 1200)\n  const height = data.image && (data.height || 630)\n\n  return (\n    <Helmet titleTemplate=\"%s\">\n      <html lang={lang} />\n      <title>{title}</title>\n      <meta name=\"description\" content={description} />\n      {canonical ? <link rel=\"canonical\" href={canonical} /> : null}\n      {image ? <link rel=\"image_src\" href={image} /> : null}\n      {image ? <meta itemprop=\"image\" content={image} /> : null}\n\n      <meta property=\"og:site_name\" content=\"임기의 코딩 블로그\" />\n      <meta property=\"og:title\" content={title} />\n      {description ? <meta property=\"og:description\" content={description} /> : null}\n      {canonical ? <meta property=\"og:url\" content={canonical} /> : null}\n      <meta property=\"og:locale\" content={locales[lang]} />\n      <meta property=\"og:type\" content={type} />\n      {image ? <meta property=\"og:image\" content={image} /> : null}\n      {width ? <meta property=\"og:image:width\" content={width} /> : null}\n      {height ? <meta property=\"og:image:height\" content={height} /> : null}\n      <meta property=\"fb:pages\" content=\"임기의 코딩 블로그\" />\n\n      {/* change type of twitter if there is no image? */}\n      <meta name=\"twitter:card\" content=\"summary_large_image\" />\n      <meta name=\"twitter:title\" content={title} />\n      {description ? <meta name=\"twitter:description\" content={description} /> : null}\n      {image ? <meta name=\"twitter:image\" content={image} /> : null}\n      <meta name=\"twitter:site\" content=\"@임기의 코딩 블로그\" />\n      {canonical ? <link rel=\"alternate\" href={canonical} hreflang={lang} /> : null}\n    </Helmet>\n  )\n}\n\nexport default Meta\n","import React from 'react'\nimport './PostList.scss'\nimport { Link } from 'react-router-dom'\nimport { Button } from '@material-ui/core'\n\nfunction PostList(props) {\n  const { list, no } = props\n  let date = list.publishedDate.substring(0, 10).replace('T', ' ')\n\n  return (\n    <Link to={`/posts/${list.postId}`}>\n      <Button className=\"postList no-drag\">\n        <div className=\"postListTags\">\n          <span className=\"postTags\">\n            Tag : {list.tags[0]}\n            {list.tags[1] ? `, ${list.tags[1]}` : ''}\n          </span>\n          <span className=\"postDate\">\n            {list.views ? list.views : 0}, {date}\n          </span>\n        </div>\n        <div className=\"postListHeader\">\n          <div>\n            <span className=\"postId\">{no}.</span>\n            <span className=\"postTitle\">{list.title}</span>\n          </div>\n        </div>\n        <div className=\"postBody\">\n        {list.thumbnail && <img className=\"thumbnail\" alt=\"\" src={list.thumbnail} loading=\"lazy\"/>}\n        {list.text}\n        </div>\n      </Button>\n    </Link>\n  )\n}\nexport default React.memo(PostList)\n","import React from 'react'\nimport './Recents.scss'\n\nimport PostList from './PostList'\n\nfunction Recents(props) {\n  const { title, list } = props\n  return (\n    <div className=\"post recents\">\n      <div className=\"postListTitle\">{title}</div>\n      {list && list.map((i, idx) => <PostList no={idx + 1} list={i} key={i.postId} />)}\n    </div>\n  )\n}\nexport default React.memo(Recents)\n","import { Button } from '@material-ui/core'\nimport Axios from 'axios'\nimport React, { useEffect, useState } from 'react'\nimport { Link } from 'react-router-dom'\nimport { AppContext } from '../App'\nimport './CommentLists.scss'\nimport Meta from './Meta'\n\nfunction CommentLists(props) {\n  const store = React.useContext(AppContext)\n  const { list, location } = props\n  const [comments, setComments] = useState()\n  const [commentCnt, setCommentCnt] = useState(10)\n  const [recentAll, setRecentAll] = useState('')\n\n  useEffect(() => {\n    if (list) setComments(list) //props로 받은 list가 있으면 comments에 저장\n\n    if (location && (location.pathname === '/comments' || location.pathname === '/comments/')) {\n      //전체리스트면 Axios로 comments 가져옴\n      setRecentAll('recentAll')\n      let url = process.env.REACT_APP_URL + '/comments/recentAll'\n      //url = process.env.REACT_APP_LOCAL_URL + '/comments/recentAll'\n      Axios.get(url)\n        .then((res) => {\n          //console.log('comments:', res.data)\n          setComments(res.data)\n          setCommentCnt(20)\n          if (!res.data) {\n            setComments('')\n          }\n        })\n        .catch((res) => {\n          setComments('')\n          //console.log(res)\n        })\n    }\n  }, [location, list])\n\n  useEffect(() => {\n    if (store) store.setReady(false)\n    if (comments) {\n      store.setReady(true)\n    } else if (comments === '') {\n      store.setReady(true)\n    }\n  })\n\n  //댓글 10개 더보기\n  const more = (e) => {\n    setCommentCnt(commentCnt + 10)\n  }\n\n  return (\n    <div className={`post recents recentComment ${recentAll}`}>\n      {location && (location.pathname === '/comments' || location.pathname === '/comments/') && (\n        <Meta\n          data={{\n            title: '최근 댓글 목록',\n            description: comments && comments.reduce((a, b) => a + ' / ' + b.content, ''),\n            canonical: `comments`,\n          }}\n        />\n      )}\n      <div className=\"postListTitle\">최신 댓글 {list && <Link to=\"/comments\">더보기</Link>}</div>\n      {comments &&\n        comments.map((i, idx) => (\n          <div key={i.title + idx}>\n            {idx < commentCnt && (\n              <Link to={`/posts/${i.postId}/#comments`}>\n                <Button className=\"postList no-drag\">\n                  <div className=\"postListHeader\">\n                    <div>\n                      <span className=\"postId\">{idx + 1}.</span>\n                      <span className=\"username\">{i.username}</span>\n                    </div>\n                    <span className=\"postDate\">{i.publishedDate && i.publishedDate.substring(0, 19).replace('T', ' ')}</span>\n                  </div>\n                  <div className=\"postBody\">{i.content}</div>\n                  <div className=\"postTitle\">{i.title}</div>\n                </Button>\n              </Link>\n            )}\n          </div>\n        ))}\n      {comments && comments.length > commentCnt && (\n        <div className=\"more\">\n          <span className=\"moreButton\" onClick={more}>\n            댓글 더보기\n          </span>\n        </div>\n      )}\n    </div>\n  )\n}\nexport default React.memo(CommentLists)\n","/* eslint-disable jsx-a11y/accessible-emoji */\nimport React from 'react'\nimport './Emoji.scss'\nimport { CopyToClipboard } from 'react-copy-to-clipboard'\n\nfunction Emoji(props) {\n  const { emojis } = props\n  let splited = emojis.split(',')\n\n  const copied = (e) => {\n    let emoji = e.target\n    emoji.style.background = 'blue'\n    setTimeout(function () {\n      emoji.style.background = 'unset'\n    }, 1000)\n  }\n\n  return (\n    <span className=\"Emoji\">\n      {splited &&\n        splited.map((i, idx) => (\n          <CopyToClipboard key={idx} options={{ format: 'text/plain' }} text={i}>\n            <span onClick={copied}>{i}</span>\n          </CopyToClipboard>\n        ))}\n      <span\n        className=\"EmojiLink\"\n        onClick={() => {\n          window.open('https://copy.emojiall.com/ko/')\n        }}\n      >\n        [이모지🔗]\n      </span>\n    </span>\n  )\n}\nexport default React.memo(Emoji)\n","/* eslint-disable jsx-a11y/accessible-emoji */\nimport React, { useEffect, useState } from 'react'\nimport './Post.scss'\nimport { Link } from 'react-router-dom'\nimport { useQuill } from 'react-quilljs'\nimport Comment from './Comment'\nimport { AppContext } from '../App'\nimport RefreshIcon from '@material-ui/icons/Refresh'\nimport Axios from 'axios'\nimport Meta from './Meta'\nimport Recents from './Recents'\nimport CommentLists from './CommentLists'\nimport Emoji from './Emoji'\nimport { resizeTextarea } from '../utils/util'\nimport { Button } from '@material-ui/core'\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle'\n\nfunction Post({ match, location, history }) {\n  const store = React.useContext(AppContext)\n  let { postId } = match.params\n  const [post, setPost] = useState(false)\n  const [postBody, setPostBody] = useState()\n  const [comments, setComments] = useState([])\n  const [commentCnt, setCommentCnt] = useState(3)\n\n  const [recents, setRecents] = useState([])\n  const [popular, setPopular] = useState([])\n  const [recentComments, setRecentComments] = useState([])\n\n  const modules = { syntax: true }\n  const formats = ['bold', 'italic', 'underline', 'strike', 'code-block', 'blockquote', 'size', 'header', 'align', 'color', 'background', 'indent', 'list', 'link', 'image', 'video', 'clean']\n  const { quill, quillRef } = useQuill({ modules, formats, readOnly: true })\n\n  useEffect(() => {\n    setPost(false)\n    setPostBody(false)\n    //포스트 가져오기\n    let id = 1\n    if (postId) id = postId\n    let url = process.env.REACT_APP_URL + '/posts/' + id\n    //url = process.env.REACT_APP_LOCAL_URL + '/posts/' + id\n    Axios.get(url, {\n      withCredentials: true,\n    })\n      .then((res) => {\n        setComments(res.data.comments)\n        setPost(res.data)\n      })\n      .catch((e) => {\n        // alert('찾으시는 페이지가 없습니다.\\n' + e)\n        // history.go(-1)\n      }) //실패\n\n    //포스트바디 가져오기\n    url = process.env.REACT_APP_URL + '/posts/postBody/' + id\n    //url = process.env.REACT_APP_LOCAL_URL + '/posts/postBody/' + id\n    Axios.get(url)\n      .then((res) => {\n        setPostBody(res.data.body)\n\n        if (location.hash) {\n          //hash가 있으면 해당 엘리먼트로 스크롤\n          setTimeout(() => {\n            const elem = document.querySelector(location.hash)\n            document.body.scrollTop = elem.offsetTop\n          }, 10)\n        }\n      })\n      .catch((e) => {\n        console.log(e)\n      }) //실패\n\n    //홈일경우 recents, popular, recentComments 가져옴\n    if (location.pathname === '/') {\n      url = process.env.REACT_APP_URL + '/posts/popular'\n      //url = process.env.REACT_APP_LOCAL_URL + '/posts/popular'\n      Axios.get(url).then((res) => {\n        setPopular(res.data)\n      })\n\n      url = process.env.REACT_APP_URL + '/posts/recents'\n      //url = process.env.REACT_APP_LOCAL_URL + '/posts/recents'\n      Axios.get(url).then((res) => {\n        setRecents(res.data)\n      })\n\n      url = process.env.REACT_APP_URL + '/comments/recent'\n      //url = process.env.REACT_APP_LOCAL_URL + '/comments/recent'\n      Axios.get(url).then((res) => {\n        setRecentComments(res.data)\n      })\n    }\n  }, [location, postId, history])\n\n  //포스트 바디가 준비되면 quill에 포스트 바디를 그리고\n  //포스트 바디가 없으면 포스트가 있으면 quill에 포스트 텍스트를 그리기.\n  useEffect(() => {\n    if (quill) {\n      if (postBody) {\n        quill.setContents(postBody)\n      } else if (post) {\n        quill.setText(post.text)\n      }\n    }\n  }, [quill, postBody, post])\n\n  //포스트가 준비되면 화면 보이기\n  useEffect(() => {\n    store.setReady(false)\n    if (post) {\n      store.setReady(true)\n\n      //태그 찾아서 activeListManual 적용\n      let activeTags\n      if (post.tags[1]) {\n        activeTags = document.querySelectorAll(`a[href=\"/tags/${post.tags[1]}\"]`)\n      } else if (post.tags[0]) {\n        activeTags = document.querySelectorAll(`a[href=\"/tags/${post.tags[0]}\"]`)\n      }\n      if (activeTags) {\n        for (let i of activeTags) {\n          i.classList.add('activeListManual')\n        }\n      }\n    }\n  })\n\n  const deletePost = (e) => {\n    if (window.confirm('글 삭제 시 복구가 불가합니다. 해당 글을 정말로 삭제하시겠습니까?')) {\n      const postId = e.target.id\n      let url = process.env.REACT_APP_URL + '/posts/' + postId\n      //url = process.env.REACT_APP_LOCAL_URL+'/posts/'+postId\n\n      Axios.delete(url, {\n        //글 삭제\n        withCredentials: true, //CORS\n      })\n        .then((res) => {\n          console.log(`${postId}번 글 삭제 성공`)\n          history.go(-1)\n        })\n        .catch((e) => alert(e)) //실패\n    }\n  }\n\n  const postComment = (e) => {\n    const comment = document.querySelector(`.commentContent textarea`) //댓글 텍스트\n    if (comment && comment.value !== '' && window.confirm('댓글을 작성하시겠습니까?')) {\n      let url = process.env.REACT_APP_URL + '/comments/' + post.postId\n      //url = process.env.REACT_APP_LOCAL_URL+'/comments/'+post.postId\n\n      Axios.patch(url, {\n        //댓글 작성\n        withCredentials: true, //CORS\n        data: {\n          username: store.login.username,\n          content: comment.value,\n        },\n      })\n        .then((res) => {\n          console.log(`${post.postId} 댓글 추가 성공`)\n          refreshComment(null, setCommentCnt(res.data.comments.length)) //포스트 다시 불러오고 댓글 끝까지 보이기\n          comment.value = ''\n        })\n        .catch((e) => alert(e)) //실패\n    }\n  }\n\n  const refreshComment = (e, func) => {\n    //댓글 가져오기\n    let url = process.env.REACT_APP_URL + '/comments/' + post.postId\n    //url = process.env.REACT_APP_LOCAL_URL+'/comments/'+post.postId\n\n    let svg //refresh 아이콘\n    if (e && e.target) svg = e.target.querySelector('svg')\n    if (svg) svg.classList.add('refreshing') //refresh 애니메이션 시작\n\n    Axios.get(url, {\n      withCredentials: true,\n    }) //댓글 새로고치기\n      .then((res) => {\n        console.log(`${post.postId} 댓글 새로고침`)\n        setComments(res.data) //댓글 저장\n        if (svg) svg.classList.remove('refreshing') //refresh 애니메이션 끝\n\n        if (func) func() //파라미터에 함수가 있으면 함수 실행\n      })\n      .catch((e) => {\n        //실패\n        if (svg) svg.classList.remove('refreshing') //refresh 애니메이션 끝\n        console.log(e)\n      })\n  }\n\n  //댓글 10개 더보기\n  const more = (e) => {\n    setCommentCnt(commentCnt + 10)\n  }\n\n  //댓글 더보기, 댓글 새로고침 하면 리사이즈\n  useEffect(() => {\n    resizeTextarea()\n  }, [commentCnt, store, comments])\n\n  return (\n    <>\n      <div className=\"post\">\n        {location.pathname === '/' ? (\n          <Meta\n            data={{\n              title: '임기의 코딩 블로그',\n              description: post.text ? post.text.replace(/\\n/g, ' ') : '',\n              canonical: '',\n            }}\n          />\n        ) : (\n          <Meta data={{ title: post.title, description: post.text ? post.text.replace(/\\n/g, ' ') : '', canonical: `posts/${post.postId}` }} />\n        )}\n        {/* 태그 */}\n        <div className=\"nav\">\n          <div>\n            <span>Tag : </span>\n            {post.tags &&\n              post.tags.map((i, idx) =>\n                idx === 0 ? (\n                  <span key={i}>\n                    <Link to={i === 'home' ? '/' : `/tags/${i}`}>{i}</Link>\n                  </span>\n                ) : (\n                  <span key={i}>\n                    , <Link to={`/tags/${i}`}>{i}</Link>\n                  </span>\n                ),\n              )}\n          </div>\n          <div>\n            {/* 조회수 */}\n            {\n              /* post.postId !== 1 &&  */ <span>\n                조회수: {post.views ? post.views + 1 : 1}\n                {', '}\n              </span>\n            }\n            {/* 게시일자 */}\n            {post && post.publishedDate.substring(0, 16).replace('T', ' ')}\n          </div>\n        </div>\n\n        {/* 글 수정 삭제 버튼 */}\n        {store.login && store.login.username === 'imki123' && (\n          <div className=\"postButtons\">\n            <Link to={`/quill/${post.postId}`} className=\"hover no-drag\">\n              수정\n            </Link>\n            &nbsp;\n            <button onClick={deletePost} id={post.postId} style={{ background: 'red' }}>\n              삭제\n            </button>\n          </div>\n        )}\n\n        <h2 className=\"postTitle\">{post.title}</h2>\n        <div className=\"postContent\">\n          {/* 본문 */}\n          <div id=\"editor\">\n            <div ref={quillRef} />\n          </div>\n          <div className=\"hiddenText\">{post.text}</div>\n\n          {/* 글 수정 삭제 버튼 */}\n          {store.login && store.login.username === 'imki123' && (\n            <div className=\"postButtons\">\n              <Link to={`/quill/${post.postId}`} className=\"hover no-drag\">\n                수정\n              </Link>\n              &nbsp;\n              <button onClick={deletePost} id={post.postId} style={{ background: 'red' }}>\n                삭제\n              </button>\n            </div>\n          )}\n        </div>\n\n        {/* 댓글 작성*/}\n        {location.pathname !== '/' && (\n          <>\n            <div className=\"EmojiDiv\">\n              <Emoji emojis={'😄,🤣,🥰,😍,😝,😭,👍,🐕,🐈,☀,🌙,⭐,☁,🌧,💧,♥,❤,💕'} />\n            </div>\n            <div className=\"writeComment\">\n              <div className=\"commentProfile\">\n                {!store.login ? (\n                  <AccountCircleIcon />\n                ) : (\n                  <img\n                    alt=\"PROFILE\"\n                    src={store.login.imageUrl + ''}\n                    onError={(e) => {\n                      e.target.src = process.env.PUBLIC_URL + '/images/dog' + (Math.floor(Math.random() * (3 - 1 + 1)) + 1) + '.png'\n                    }}\n                  />\n                )}\n              </div>\n              <div className=\"commentContent\">\n                {store.login ? (\n                  <span className=\"commentUsername\">{store.login.username}</span>\n                ) : (\n                  <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    className=\"loginButton\"\n                    onClick={() => {\n                      history.push('/login')\n                    }}\n                  >\n                    로그인\n                  </Button>\n                )}\n                {store.login ? <textarea onChange={resizeTextarea} placeholder=\" 댓글을 남겨주세요 😄\" /> : <textarea readOnly placeholder=\" 로그인 후에 댓글을 남겨주세요 😄\" />}\n              </div>\n            </div>\n            <div className=\"commentButtons\">\n              {store.login && (\n                <button className=\"commentButton\" onClick={postComment}>\n                  댓글작성\n                </button>\n              )}\n            </div>\n          </>\n        )}\n\n        {/* 댓글 목록 */}\n        {comments && comments.length > 0 && (\n          <div id=\"comments\">\n            <div className=\"commentTitle\">\n              <div className=\"commentCnt\">댓글 {comments.length}개</div>\n              <span className=\"commentRefresh\" onClick={refreshComment}>\n                댓글 새로고침 <RefreshIcon />\n              </span>\n            </div>\n            {comments.map((i, idx) => idx < commentCnt && <Comment post={post} comment={i} key={i.commentId} refreshComment={refreshComment} />)}\n            {comments.length > commentCnt && (\n              <div className=\"more\">\n                <span className=\"moreButton\" onClick={more}>\n                  댓글 더보기\n                </span>\n              </div>\n            )}\n          </div>\n        )}\n      </div>\n      {location.pathname === '/' && (\n        <div className=\"homeLists\">\n          <Recents title=\"최신글\" list={recents} />\n          <Recents title=\"인기글\" list={popular} />\n          <CommentLists list={recentComments} />\n        </div>\n      )}\n    </>\n  )\n}\nexport default React.memo(Post)\n","import React, { useEffect } from 'react'\nimport { useHistory } from 'react-router-dom'\nimport { AppContext } from '../App'\nimport './NotFoundPage.scss'\n\nfunction NotFoundPage() {\n  const store = React.useContext(AppContext)\n  const history = useHistory()\n  useEffect(() => {\n    //console.log(`Not found page! https://imki123.github.io/`)\n    store.setReady(true)\n  })\n\n  const goBack = (e) => {\n    history.go(-1)\n  }\n\n  return (\n    <div className=\"notFound\">\n      <div className=\"title\">Not Found Page</div>\n      <div className=\"goHome\">\n        <span onClick={goBack}>Go back</span>\n      </div>\n    </div>\n  )\n}\nexport default React.memo(NotFoundPage)\n","import React, { useState, useEffect } from 'react'\nimport './Login.scss'\nimport { Link } from 'react-router-dom'\nimport { AppContext } from '../App'\nimport MoreVertIcon from '@material-ui/icons/MoreVert'\nimport Meta from './Meta'\nimport { Button } from '@material-ui/core'\n\nfunction Login({ history, match, location }) {\n  const store = React.useContext(AppContext)\n  let browser = ''\n  const agent = navigator.userAgent.toLowerCase()\n  if (agent.indexOf('chrome') > -1) browser = 'chrome'\n  else if (agent.indexOf('safari') > -1) browser = 'safari'\n\n  const [checkUsername, setCheckUsername] = useState('')\n  const [checkPassword, setCheckPassword] = useState('')\n  const [checkPasswordConfirm, setCheckPasswordConfirm] = useState('')\n  const [buttonName, setButtonName] = useState('로그인')\n  const [userinfo, setUserinfo] = useState()\n\n  useEffect(() => {\n    //로그인화면에서 로그인은 안되어있는데 유저정보가 있으면 로그인 처리\n    let frame\n    const userinfoElem = document.querySelector('#userinfo')\n    if (location.pathname === '/login' || location.pathname === '/login/' || location.pathname === '/register' || location.pathname === '/register/') {\n      if (!store.login) {\n        frame = setInterval(function () {\n          //console.log('유저정보 체크')\n          if (userinfoElem && userinfoElem.value) {\n            //userinfo가 있으면 로그인 처리\n            //새로고침되거나, 로그인 버튼을 누르면 userinfo를 가져옴\n            clearInterval(frame) //userinfo 있으면 로그인 체크 중지\n            let user = JSON.parse(userinfoElem.value)\n\n            if (user.host === 'naver') {\n              let email = user.email\n              let username\n              if (email) {\n                username = email.substring(0, email.indexOf('@')) + '_n'\n                if (username === 'popping2606_n') username = 'imki123' //내아이디\n                console.log('네이버 로그인 성공:', username)\n                user = {\n                  username: username,\n                  email: email,\n                  imageUrl: user.profile_image,\n                  host: user.host,\n                }\n              } else {\n                console.log('이메일 정보 없음. 로그아웃.')\n                alert('이메일이 없으면 로그인이 불가해요. 이메일 동의 부탁드려요 😄')\n                //네이버 로그아웃\n                const naverLogout = document.querySelector('#naverLogout')\n                if (naverLogout) naverLogout.click()\n                userinfoElem.value = ''\n                history.replace()\n                return\n              }\n            } else if (user.host === 'kakao') {\n              let email = user.email\n              let username\n              if (email) {\n                username = email.substring(0, email.indexOf('@')) + '_k'\n                if (username === 'popping2606_k') username = 'imki123' //내아이디\n                console.log('카카오 로그인 성공:', username)\n                user = {\n                  username: username,\n                  email: email,\n                  imageUrl: user.profile.thumbnail_image_url,\n                  host: user.host,\n                }\n              } else {\n                console.log('이메일 정보 없음. 로그아웃.')\n                alert('이메일이 없으면 로그인이 불가해요. 이메일 동의 부탁드려요 😄')\n                //카카오 로그아웃\n                const kakaoLogout = document.querySelector('#kakaoLogout')\n                if (kakaoLogout) kakaoLogout.click()\n                userinfoElem.value = ''\n                history.replace()\n                return\n              }\n            } else {\n              let email = user.email\n              let username = email.substring(0, email.indexOf('@')) + '_g'\n              if (username === 'popping2606_g') username = 'imki123' //내아이디\n              console.log('구글 로그인 성공:', username)\n              user = {\n                username: username,\n                email: email,\n                name: user.name,\n                imageUrl: user.imageUrl,\n                host: user.host,\n              }\n            }\n            //console.log(user)\n\n            let url = process.env.REACT_APP_URL + '/auth/oauth'\n            //url = process.env.REACT_APP_LOCAL_URL + '/auth/oauth'\n            //로그인 성공시 토큰에 name, email, imageUrl 저장\n            fetch(url, {\n              mode: 'cors',\n              method: 'POST',\n              credentials: 'include',\n              headers: { 'Content-Type': 'application/json' },\n              body: JSON.stringify(user),\n            })\n              .then((res) => {\n                if (res.status === 200 || res.status === 201) {\n                  //성공하면 아래 then 작동\n                  res.json().then((res) => {\n                    alert(res.username + '님 환영합니다 😄')\n                    setUserinfo(res)\n                    //로그인 시 홈으로 이동\n                    history.replace('/')\n                    //history.go(-1) //뒤로가기\n                  })\n                } else {\n                  let message = '로그인에 실패했습니다 :('\n                  if (res.status === 401) {\n                    message += '\\n로그인 정보를 확인해주세요.'\n                  }\n                  console.log(message)\n                }\n              })\n              .catch((e) => console.error(e))\n          }\n        }, 500)\n      }\n    } else if (location.pathname === '/loginStatus' || location.pathname === '/loginStatus/') {\n      if (userinfoElem && !userinfoElem.value) {\n        setUserinfo(false)\n      }\n    }\n    return () => clearInterval(frame)\n  }, [store.login, location, history])\n\n  useEffect(() => {\n    //유저인포가 있으면 로그인처리\n    if (store) {\n      store.setReady(true)\n      if (userinfo) {\n        store.setLogin(userinfo)\n      }\n    }\n  })\n\n  useEffect(() => {\n    //이미 로그인이 되어있다면 스테이터스로 이동\n    if (location.pathname === '/login' || location.pathname === '/login/') {\n      if (store.login) {\n        history.replace('/loginStatus')\n      }\n    }\n\n    //로그인이 안되어있으면 로그인으로 이동\n    if (location.pathname === '/loginStatus' || location.pathname === '/loginStatus/') {\n      //console.log(store.login)\n      if (!store.login) {\n        setTimeout(function () {\n          if (!store.login) {\n            history.replace('/login')\n          }\n        }, 1000)\n      }\n    }\n    if (location.pathname.indexOf('register') > -1) {\n      setButtonName('회원가입')\n    } else if (location.pathname.indexOf('withdraw') > -1) {\n      setButtonName('회원탈퇴')\n    } else {\n      setButtonName('로그인')\n    }\n  }, [location, store.login, history])\n\n  const changeUsername = (e) => {\n    const pattern = /[^a-zA-Z0-9ㄱ-ㅎㅏ-ㅣ가-힣_]/g\n    const value = (e.target.value = e.target.value.replace(/\\s/g, '_').replace(pattern, ''))\n    if (value.length < 3) {\n      //3글자 이상\n      setCheckUsername('- 3자 이상 입력해주세요')\n    } else if (value.length > 20) {\n      //20글자 이하\n      setCheckUsername('- 20자 이하로 입력해주세요')\n    } else {\n      setCheckUsername('')\n    }\n  }\n  const changePassword = (e) => {\n    const { value } = e.target\n    const passwordConfirm = document.querySelector('[name=passwordConfirm]')\n\n    //비밀번호가 변경되면 비밀번호 확인은 초기화\n    if (passwordConfirm) {\n      passwordConfirm.value = ''\n      setCheckPasswordConfirm('')\n    }\n\n    if (value.length < 6) {\n      //6글자 이상\n      setCheckPassword('- 6자 이상 입력해주세요')\n    } else if (value.length > 20) {\n      //20글자 이하\n      setCheckPassword('- 20자 이하로 입력해주세요')\n    } else {\n      setCheckPassword('')\n    }\n  }\n  const changePasswordConfirm = (e) => {\n    const { value } = e.target\n    const password = document.querySelector('[name=password]')\n\n    if (value !== password.value && value.length >= 1) {\n      //password와 같으면\n      setCheckPasswordConfirm('- 비밀번호가 일치하지 않습니다')\n    } else {\n      setCheckPasswordConfirm('')\n    }\n  }\n  const clickButton = (e) => {\n    e.preventDefault()\n    let url = process.env.REACT_APP_URL + '/auth'\n    //url = process.env.REACT_APP_LOCAL_URL+'/auth'\n\n    const pattern = /[^a-zA-Z0-9가-힣_]/g\n    let username = document.querySelector('[name=username]')\n    if (username) username = username.value = username.value.replace(pattern, '')\n    let password = document.querySelector('[name=password]')\n    if (password) password = password.value\n\n    if (checkUsername === '' && password.length >= 1 && checkPassword === '' && checkPasswordConfirm === '') {\n      //입력폼에 이상이 없으면 fetch submit\n      if (buttonName === '회원가입') {\n        url += '/register'\n        fetch(url, {\n          mode: 'cors',\n          method: 'POST',\n          credentials: 'include',\n          headers: { 'Content-Type': 'application/json' },\n          body: JSON.stringify({\n            username: username,\n            password: password,\n          }),\n        })\n          .then((res) => {\n            if (res.status === 200 || res.status === 201) {\n              //성공하면 아래 then 작동\n              res.json().then((res) => {\n                alert(res.username + '님의 회원가입에 성공했습니다 😄')\n                history.go(-1)\n              })\n            } else {\n              let message = '회원가입에 실패했습니다 :('\n              if (res.status === 409) {\n                message += '\\n이미 존재하는 아이디입니다.'\n              }\n              if (res.status === 400) {\n                message += '\\n아이디나 비밀번호를 확인해주세요.'\n              }\n              alert(message)\n            }\n          })\n          .catch((e) => console.error(e))\n      } else if (buttonName === '회원탈퇴') {\n        if (window.confirm('계정 탈퇴시 복구할 수 없습니다. 정말로 탈퇴하시겠습니까?')) {\n          url += '/withdraw'\n          fetch(url, {\n            mode: 'cors',\n            method: 'DELETE',\n            credentials: 'include',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify({\n              username: store.login.username,\n              password: password,\n            }),\n          })\n            .then((res) => {\n              if (res.status === 200) {\n                //삭제하면 Ok\n                alert('계정이 탈퇴되었습니다. 또 들러 주세요 😄')\n                history.push('/')\n              } else {\n                let message = '탈퇴에 실패했습니다 :('\n                if (res.status === 204) {\n                  message += '\\n존재하지 않는 아이디입니다.'\n                }\n                if (res.status === 401) {\n                  message += '\\n비밀번호를 확인해주세요.'\n                }\n                alert(message)\n              }\n            })\n            .catch((e) => console.error(e))\n        }\n      } else {\n        //로그인\n        url += '/login'\n        fetch(url, {\n          mode: 'cors',\n          method: 'POST',\n          credentials: 'include',\n          headers: { 'Content-Type': 'application/json' },\n          body: JSON.stringify({\n            username: username,\n            password: password,\n          }),\n        })\n          .then((res) => {\n            if (res.status === 200 || res.status === 201) {\n              //성공하면 아래 then 작동\n              res.json().then((res) => {\n                store.setLogin(res)\n                alert(res.username + '님 환영합니다 😄')\n                history.go(-1)\n              })\n            } else {\n              let message = '로그인에 실패했습니다 :('\n              if (res.status === 401) {\n                message += '\\n로그인 정보를 확인해주세요.'\n              }\n              alert(message)\n            }\n          })\n          .catch((e) => console.error(e))\n      }\n    } else {\n      alert('입력 정보를 확인해주세요.')\n    }\n  }\n\n  const naverLogin = (e) => {\n    const naverIdLogin = document.querySelector('#naverIdLogin')\n    if (naverIdLogin) {\n      console.log('네이버 로그인 요청')\n      naverIdLogin.firstChild.click()\n    }\n  }\n  const kakaoLogin = (e) => {\n    const kakaoLogin = document.querySelector('#kakaoLogin')\n    if (kakaoLogin) {\n      console.log('카카오 로그인 요청')\n      kakaoLogin.click()\n    }\n  }\n  const googleLogin = (e) => {\n    const googleLogin = document.querySelector('#googleLogin')\n    if (googleLogin) {\n      console.log('구글 로그인 요청')\n      googleLogin.firstChild.firstChild.click()\n    }\n  }\n\n  return (\n    <div id=\"background\">\n      <div id=\"loginWrapper\">\n        <Meta\n          data={{\n            title: '임기의 코딩 블로그',\n            description: '네이버, 카카오, 구글 계정으로 로그인 해보세요!',\n            canonical: `login`,\n          }}\n        />\n        {location.pathname.indexOf('/loginStatus') > -1 ? (\n          <>\n            {store.login ? (\n              <div className=\"center\">\n                {store.login.username}님은 현재 <span style={{ color: 'blue' }}>로그인</span> 되어있습니다 😄\n                <br />\n                <span style={{ fontSize: '0.8rem' }}>(로그인은 최대 일주일간 유지됩니다.)</span>\n              </div>\n            ) : (\n              <div className=\"login center\">\n                재 로그인이 필요합니다\n                <Link to=\"/login\" className=\"loginLink\">\n                  로그인\n                </Link>\n              </div>\n            )}\n          </>\n        ) : (\n          <>\n            {(buttonName === '로그인' || buttonName === '회원가입') && (\n              <div className=\"oAuth\">\n                <div className=\"login\">\n                  {/* 네이버 로그인 */}\n                  <div className=\"naverLogin no-drag\" onClick={naverLogin}>\n                    <img alt=\"\" src={process.env.PUBLIC_URL + '/images/naver.png'} />\n                    Log in with Naver\n                  </div>\n                  {/* 카카오 로그인 */}\n                  <div className=\"naverLogin kakaoLogin no-drag\" onClick={kakaoLogin}>\n                    <img alt=\"\" src={process.env.PUBLIC_URL + '/images/kakao.png'} />\n                    Log in with Kakao\n                  </div>\n                  {/* 구글 로그인 */}\n                  <div className=\"naverLogin googleLogin no-drag\" onClick={googleLogin}>\n                    <img alt=\"\" src={process.env.PUBLIC_URL + '/images/google.png'} />\n                    Log in with Google\n                  </div>\n                  <div className=\"googleWarning\">\n                    구글 로그인은 <span style={{ color: 'red' }}>인앱 브라우저(카카오톡 등)</span>에서 지원되지 않습니다. 오류 발생 시 더보기(\n                    <MoreVertIcon />, <img alt=\"\" src={process.env.PUBLIC_URL + '/images/share.png'} />\n                    )를 눌러서 <span>다른 브라우저(Chrome, Safari 등)</span>에서 실행해주세요.\n                  </div>\n                </div>\n              </div>\n            )}\n            <form className=\"login\">\n              <div className=\"text\">아이디</div>\n              {buttonName === '회원탈퇴' ? <div>{store.login.username}</div> : <input name=\"username\" onChange={changeUsername} />}\n\n              <div className=\"check\">{checkUsername}</div>\n\n              <div className=\"text\">비밀번호</div>\n              <input name=\"password\" type=\"password\" onChange={changePassword} autoComplete=\"currnet-password\" />\n              <div className=\"check\">{checkPassword}</div>\n\n              {buttonName === '회원가입' && (\n                <>\n                  <div className=\"text\">비밀번호 확인</div>\n                  <input name=\"passwordConfirm\" type=\"password\" onChange={changePasswordConfirm} autoComplete=\"currnet-password\" />\n                  <div className=\"check\" id=\"checkPasswordConfirm\">\n                    {checkPasswordConfirm}\n                  </div>\n                </>\n              )}\n\n              {/* 버튼 */}\n              {buttonName === '회원탈퇴' ? (\n                <Button variant=\"contained\" color=\"primary\" style={{ backgroundColor: 'red' }} onClick={clickButton}>\n                  {buttonName}\n                </Button>\n              ) : (\n                <Button variant=\"contained\" color=\"primary\" onClick={clickButton}>\n                  {buttonName}\n                </Button>\n              )}\n\n              {/* 로그인 or 회원가입 */}\n              {buttonName === '로그인' && (\n                <div className=\"loginLink\">\n                  <Link to=\"/register\">회원가입</Link>\n                </div>\n              )}\n              {buttonName === '회원가입' && (\n                <div className=\"loginLink\">\n                  <Link to=\"/login\" className=\"loginLink\">\n                    로그인\n                  </Link>\n                </div>\n              )}\n\n              {browser === 'safari' && (\n                <div className=\"text\" style={{ fontSize: '0.8rem', textAlign: 'center' }}>\n                  (Safari의 설정을 변경해야 로그인이 가능합니다.)\n                  <br />\n                  설정 → Safari → 개인 정보 보호 및 보안 → <br />\n                  크로스 사이트 추적방지 OFF, 모든 쿠키 차단 OFF)\n                </div>\n              )}\n            </form>\n          </>\n        )}\n      </div>\n    </div>\n  )\n}\nexport default React.memo(Login)\n","/* eslint-disable jsx-a11y/accessible-emoji */\nimport React, { useEffect, useState } from 'react'\nimport './Quill.scss'\nimport 'quill/dist/quill.snow.css'\nimport { useQuill } from 'react-quilljs'\nimport imageCompress from 'quill-image-compress'\nimport { AppContext } from '../App'\nimport Axios from 'axios'\nimport Emoji from './Emoji'\n\nfunction Quill({ match, location, history }) {\n  const store = React.useContext(AppContext)\n  let { postId } = match.params\n  const [post, setPost] = useState()\n  const [ready, setReady] = useState()\n  const [subMenus, setSubMenus] = useState()\n\n  const modules = {\n    toolbar: [\n      ['bold', 'italic', 'underline', 'strike'],\n      [{ size: ['small', false, 'large', 'huge'] }, { header: 1 }, { header: 2 }],\n      [{ align: [] }],\n      [{ color: [] }, { background: [] }],\n      [{ indent: '-1' }, { indent: '+1' }],\n      [{ list: 'ordered' }, { list: 'bullet' }],\n      ['code-block', 'blockquote'],\n      ['link', 'image', 'video'],\n      ['clean'],\n    ],\n    syntax: true,\n    imageCompress: {\n      quality: 0.7, // default\n      maxWidth: 1000, // default 1000\n      maxHeight: 1000, // default 1000\n      imageType: 'image/jpeg', // default\n      debug: true, // default\n    },\n  }\n  const formats = ['bold', 'italic', 'underline', 'strike', 'code-block', 'blockquote', 'size', 'header', 'align', 'color', 'background', 'indent', 'list', 'link', 'image', 'video', 'clean']\n\n  const { quill, quillRef, Quill } = useQuill({ modules, formats })\n  if (Quill && !quill) {\n    // For execute this line only once.\n    Quill.register('modules/imageCompress', imageCompress)\n  }\n\n  useEffect(() => {\n    setReady(false)\n    //포스트 불러오기 axios\n    if (postId !== undefined && Number(postId) >= 1 && quill) {\n      //postId가 없으면 포스트 내용 가져오지 않기\n      let url = process.env.REACT_APP_URL + '/posts/' + postId\n      //url = process.env.REACT_APP_LOCAL_URL+'/posts/' + postId\n\n      Axios.get(url, {\n        withCredentials: true,\n      }) //포스트 불러오기\n        .then((res) => {\n          let title = document.querySelector('[name=title]')\n          title.value = res.data.title\n\n          const tags = document.querySelectorAll('[type=radio]')\n          for (let i of tags) {\n            //체크 초기화\n            i.checked = false\n          }\n          if (res.data.tags) {\n            //체크박스 체크\n            const mainMenu = document.getElementById(res.data.tags[0])\n            if (mainMenu) mainMenu.checked = true\n            for (let i of store.menus) {\n              if (i.name === res.data.tags[0]) {\n                //선택된 메인메뉴의 서브메뉴를 그리기\n                setSubMenus(i.subMenus)\n              }\n            }\n          }\n\n          //포스트바디 가져오기\n          url = process.env.REACT_APP_URL + '/posts/postBody/' + postId\n          //url = process.env.REACT_APP_LOCAL_URL + '/posts/postBody/' + postId\n          Axios.get(url)\n            .then((res2) => {\n              if (typeof res2.data.body === 'string') quill.setText(res2.data.body)\n              //body가 string이면 setText\n              else quill.setContents(res2.data.body) //body가 string이 아니면 setContents : Delta\n              setPost({\n                ...res.data,\n                body: res2.data.body,\n              })\n            })\n            .catch((e) => {\n              alert(e)\n              setReady(true)\n            }) //실패\n        })\n        .catch((e) => {\n          alert(e)\n          setReady(true)\n        }) //실패\n    } else {\n      setReady(true)\n    }\n  }, [location, quill, postId, store.menus])\n\n  useEffect(() => {\n    if (subMenus && post) {\n      const subMenu = document.getElementById(post.tags[1])\n      if (subMenu) subMenu.checked = true\n    }\n    const newSubMenu = document.querySelector('[name=newSubMenu]')\n    if (newSubMenu) newSubMenu.value = ''\n  }, [subMenus, post])\n\n  useEffect(() => {\n    store.setReady(false)\n    if (post || ready) {\n      store.setReady(true)\n    }\n  })\n\n  //글 작성 or 수정\n  const clickPost = (e) => {\n    if (!store.login || (store.login && store.login.username !== 'imki123')) {\n      alert('글 작성은 블로그 주인만 가능합니다 ^^;')\n      return\n    }\n    if (!window.confirm('글을 게시하시겠습니까?')) {\n      return\n    }\n    //제목, 내용, 태그가 있는지 검사\n    let title = document.querySelector('[name=title]')\n    const content = quill.getContents()\n    const text = quill.getText()\n    const mainMenu = document.querySelector('[name=mainMenu]:checked')\n    let $img = document.querySelector('#editor img') //첫 이미지를 썸네일에 저장\n    let thumbnail = null\n    if ($img) thumbnail = $img.src\n\n    let tags = []\n    const subMenu = document.querySelector('[name=subMenu]:checked')\n    const newMainMenu = document.querySelector('[name=newMainMenu]')\n    const newSubMenu = document.querySelector('[name=newSubMenu]')\n\n    if (mainMenu) {\n      tags[0] = mainMenu.value\n    }\n    if (newMainMenu.value !== '') {\n      tags[0] = newMainMenu.value\n    }\n    if (subMenu) {\n      if (subMenu.value !== '') tags[1] = subMenu.value //체크 된 서브메뉴 추가\n    }\n    if (newSubMenu.value !== '') {\n      tags[1] = newSubMenu.value\n    }\n\n    if (title.value.length === 0) {\n      alert('제목을 입력해주세요.')\n      return\n    } else if (quill.getLength() === 1) {\n      alert('내용을 입력해주세요.')\n      return\n    } else if (tags.length < 1 && newMainMenu.value === '') {\n      alert('메인메뉴를 1개 선택해주세요.')\n      return\n    }\n\n    //url에 POST 또는 PATCH 요청\n    let url = process.env.REACT_APP_URL + '/posts'\n    //url = process.env.REACT_APP_LOCAL_URL + '/posts'\n    let method = 'POST',\n      message = '글 작성 성공'\n    if (e.target.id === 'PATCH') {\n      if (postId !== undefined && Number(postId) >= 1) {\n        url += '/' + postId\n        method = 'PATCH'\n        message = '글 수정 성공'\n      } else {\n        console.log('postId 비정상, 글 수정 실패')\n        return\n      }\n    }\n\n    Axios(url, {\n      //포스트 작성, 수정 (최대 10mb. koa-bodyparser에서 설정.)\n      method: method,\n      withCredentials: true, //CORS\n      data: {\n        title: title.value,\n        body: content,\n        text: text,\n        tags: tags,\n        thumbnail: thumbnail,\n      },\n    })\n      .then((res) => {\n        alert(message) //성공\n        postId = res.data.postId\n        if (postId > 1) {\n          history.push(`/posts/${postId}`) //수정 성공하면 해당 글로 이동함\n        } else {\n          history.push(`/posts/1`) //인사말은 홈으로 이동\n        }\n      })\n      .catch((e) => alert(e)) //실패\n  }\n\n  //메인메뉴 추가시 라디오박스 체크 해제, 띄어쓰기를 _로 변경\n  const changeMainMenu = (e) => {\n    if (store.menus) {\n      for (let i of store.menus) {\n        if (i.name === e.target.value) {\n          setSubMenus(i.subMenus)\n        }\n      }\n    }\n\n    if (e.target.type !== 'radio') {\n      //인풋박스 입력하면 라디오 체크 해제\n      e.target.value = e.target.value.replace(/\\s/g, '_')\n      const mainMenu = document.querySelector('[name=mainMenu]:checked')\n      if (mainMenu) mainMenu.checked = false\n    }\n  }\n  //서브메뉴 추가시 라디오박스 체크 해제, 띄어쓰기를 _로 변경\n  const changeSubMenu = (e) => {\n    if (e.target.type !== 'radio') {\n      //인풋박스 입력하면 라디오 체크 해제\n      e.target.value = e.target.value.replace(/\\s/g, '_')\n      const subMenu = document.querySelector('[name=subMenu]:checked')\n      if (subMenu) subMenu.checked = false\n    } else {\n      const newSubMenu = document.querySelector('[name=newSubMenu]')\n      if (newSubMenu) newSubMenu.value = ''\n    }\n  }\n\n  return (\n    <div className=\"quill\">\n      <div className=\"quillTitle\">\n        <input name=\"title\" placeholder=\"제목\" />\n      </div>\n      <div id=\"editor\">\n        <div ref={quillRef} />\n        <div id=\"tags\">\n          <div id=\"tagsTitle\">\n            tags\n            {postId !== undefined && Number(postId) >= 1 ? (\n              <button className=\"editorButton no-drag\" onClick={clickPost} id=\"PATCH\">\n                글 수정\n              </button>\n            ) : (\n              <button className=\"editorButton no-drag\" onClick={clickPost}>\n                새글 작성\n              </button>\n            )}\n            <Emoji emojis={'😄,🤣,🥰,😍,😝,😭,👍,🐕,🐈,☀,🌙,⭐,☁,🌧,💧,♥,❤,💕'} />\n          </div>\n          <div>\n            메인메뉴:\n            {store.menus &&\n              store.menus.map((i) => (\n                <label key={i.name}>\n                  <input type=\"radio\" name=\"mainMenu\" value={i.name} id={i.name} onClick={changeMainMenu} />\n                  {i.name}\n                </label>\n              ))}\n            <input name=\"newMainMenu\" placeholder=\"메인메뉴 추가\" onChange={changeMainMenu} autoComplete=\"off\"></input>\n          </div>\n          <div>\n            서브메뉴:\n            <label>\n              <input type=\"radio\" name=\"subMenu\" value=\"\" onClick={changeSubMenu} /> 선택안함\n            </label>\n            {subMenus &&\n              subMenus.map((i) => (\n                <label key={i.name}>\n                  <input type=\"radio\" name=\"subMenu\" value={i.name} id={i.name} onClick={changeSubMenu} /> {i.name}\n                </label>\n              ))}\n            <input name=\"newSubMenu\" placeholder=\"서브메뉴 추가\" autoComplete=\"off\" onChange={changeSubMenu}></input>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\nexport default React.memo(Quill)\n","import React, { useEffect } from 'react'\nimport './Paging.scss'\nimport { NavLink, useLocation } from 'react-router-dom'\nimport queryString from 'query-string'\n\nfunction Paging(props) {\n  const { postCount } = props\n  const location = useLocation()\n  const search = queryString.parse(location.search)\n  let paging = null\n  const pages = []\n  let page = 1\n  if (postCount) {\n    page = parseInt(search.page) || 1 //페이지를 숫자로 변환. 없다면 1\n    if (page < 1) page = 1\n    const startPost = postCount - (page - 1) * 10\n    paging = {\n      page: page,\n      lastPage: Math.ceil(postCount / 10),\n      postCount: postCount,\n      startPost: startPost,\n    }\n\n    for (let i = 0; i < paging.lastPage; i++) {\n      pages.push(i + 1)\n    }\n  }\n\n  useEffect(() => {\n    const links = document.querySelectorAll('.paging a')\n    for (let i = 0; i < links.length; i++) {\n      if (parseInt(links[i].innerHTML) === page) {\n        links[i].className = 'activePage'\n      } else {\n        links[i].className = 'inactivePage'\n      }\n    }\n  })\n\n  return (\n    <div className=\"paging\">\n      {pages.map((p, idx) => (\n        <NavLink path={location.pathname} to={`${location.pathname}?page=${p}`} className=\"inactivePage\" key={idx}>\n          {p}\n        </NavLink>\n      ))}\n    </div>\n  )\n}\nexport default React.memo(Paging)\n","import Axios from 'axios'\nimport React, { useEffect, useState } from 'react'\nimport { AppContext } from '../App'\nimport Paging from './Paging'\nimport PostList from './PostList'\n\nimport Meta from './Meta'\nimport queryString from 'query-string'\n\nfunction Tags({ match, location, history }) {\n  const store = React.useContext(AppContext)\n  const { tag } = match.params\n  const [lists, setLists] = useState([])\n  const [titles, setTitles] = useState('')\n  const [postCount, setPostCount] = useState(0)\n  const [page, setPage] = useState(1)\n  useEffect(() => {\n    setLists([])\n    const search = queryString.parse(location.search)\n    let pageNum = parseInt(search.page) || 1 //페이지를 숫자로 변환. 없다면 1\n    if (pageNum < 1) pageNum = 1\n    setPage(pageNum)\n\n    let url = process.env.REACT_APP_URL + '/posts/tag/' + tag + location.search\n    //url = process.env.REACT_APP_LOCAL_URL + '/posts/tag/' + tag + location.search\n\n    Axios.get(url, {\n      withCredentials: true,\n    })\n      .then((res) => {\n        if (res.data.list.length < 1) {\n          // alert('찾으시는 페이지가 없습니다.')\n          // history.go(-1)\n        } else {\n          setLists(res.data.list)\n          let tempTitles = ''\n          for (let i of res.data.list) {\n            tempTitles += ' ' + i.title\n          }\n          setTitles(tempTitles)\n          setPostCount(res.data.postCount)\n        }\n      })\n      .catch((e) => console.log(e)) //실패\n  }, [tag, location, history])\n\n  useEffect(() => {\n    store.setReady(false)\n    if (lists) {\n      store.setReady(true)\n    }\n  })\n\n  return (\n    <div className=\"postListWrapper\">\n      <Meta data={{ title: tag + ' 목록', description: titles, canonical: `tags/${tag}` }} />\n      <div className=\"postListTitle\">{tag.substring(0, 1).toUpperCase() + tag.substring(1) + ' 목록'}</div>\n      {lists && lists.map((i, idx) => <PostList no={postCount - idx - (page - 1) * 10} list={i} key={i.postId} />)}\n      {<Paging postCount={postCount} />}\n    </div>\n  )\n}\nexport default React.memo(Tags)\n","import React, { useEffect } from 'react'\nimport AddCircleOutlineIcon from '@material-ui/icons/AddCircleOutline'\nimport ArrowUpwardIcon from '@material-ui/icons/ArrowUpward'\nimport './Content.scss'\nimport { Link, Route, useLocation, Switch, useHistory } from 'react-router-dom'\nimport { AppContext } from '../App'\n\nimport Post from './Post'\nimport NotFoundPage from './NotFoundPage'\nimport Login from './Login'\nimport Quill from './Quill'\nimport Tags from './Tags'\nimport CommentLists from './CommentLists'\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack'\nimport MenuIcon from '@material-ui/icons/Menu'\nimport { resize, resizeTextarea, slideMenu } from '../utils/util'\n\nfunction Content(props) {\n  const store = React.useContext(AppContext)\n  const location = useLocation() //hash 사용\n  const history = useHistory()\n\n  useEffect(resize, [])\n\n  useEffect(() => {\n    const loading = document.querySelector('#loading')\n    if (store.ready) {\n      if (loading) loading.style.display = 'none'\n      setTimeout(function () {\n        resizeTextarea()\n      }, 10)\n    } else {\n      if (loading) loading.style.display = 'flex'\n    }\n  }, [location.hash, store])\n\n  const scrollUp = (e) => {\n    // body의 스크롤을 가장 위로\n    document.body.scrollTop = 0\n  }\n\n  return (\n    <div id=\"content\" className=\"slideMenu\">\n      {/* 로딩 */}\n      <div id=\"loading\">\n        <div className=\"modal\">\n          <div>\n            블로그를 이전했습니다.\n            <br />\n            벨로그에서 만나요~ ^-^\n          </div>\n          <br />\n          <a href=\"https://velog.io/@goyoung2\">https://velog.io/@goyoung2</a>\n        </div>\n      </div>\n\n      <Switch>\n        <Route path={['/login', '/register', '/loginStatus', '/withdraw']} component={Login} />\n        <Route path=\"/quill/:postId?\" component={Quill} />\n        <Route path=\"/tags/:tag\" component={Tags} />\n        <Route path=\"/comments\" component={CommentLists} />\n        <Route path=\"/\" exact component={Post} />\n        <Route path=\"/posts/:postId\" component={Post} />\n        <Route path=\"/NotFoundPage\" component={NotFoundPage} />\n        <Route path=\"*\" component={NotFoundPage} />\n      </Switch>\n\n      {/* FABs */}\n      <div className=\"FABs\">\n        {store.login && store.login.username === 'imki123' && (\n          <Link id=\"postFAB\" className=\"hover FAB\" to=\"/quill\">\n            <AddCircleOutlineIcon />\n          </Link>\n        )}\n        <div id=\"scrollFAB\" className=\"hover FAB\" onClick={scrollUp}>\n          <ArrowUpwardIcon />\n        </div>\n        <div id=\"backFAB\" className=\"hover FAB\" onClick={() => history.go(-1)}>\n          <ArrowBackIcon />\n        </div>\n        <div id=\"menuFAB\" className=\"hover FAB\" onClick={slideMenu}>\n          <MenuIcon />\n        </div>\n      </div>\n\n      {/* 텍스트 에어리어 높이 조정을 위한 안보이는 가짜 텍스트에어리어 */}\n      <textarea disabled id=\"fakeTextarea\" />\n    </div>\n  )\n}\nexport default React.memo(Content)\n","import React from 'react'\nimport './Setting.scss'\nimport { Link } from 'react-router-dom'\nimport { AppContext } from '../App'\nimport { Button } from '@material-ui/core'\n\nfunction Setting(props) {\n  const store = React.useContext(AppContext)\n\n  const closeSetting = (e) => {\n    const settingWrapper = document.querySelector('#settingWrapper')\n    e.stopPropagation()\n    setTimeout(function () {\n      settingWrapper.style.display = 'none'\n    }, 200)\n  }\n\n  const logout = (e) => {\n    if (window.confirm('로그아웃 하시겠습니까?')) {\n      let url = process.env.REACT_APP_URL + '/auth/logout'\n      //url = process.env.REACT_APP_LOCAL_URL + '/auth/logout'\n\n      fetch(url, {\n        mode: 'cors',\n        method: 'POST',\n        credentials: 'include',\n      })\n        .then((res) => {\n          if (res.status === 204) {\n            //로그아웃 하면 204\n            console.log('로그아웃 성공')\n            store.setLogin(false)\n\n            //유저정보 지우기\n            const userinfo = document.querySelector('#userinfo')\n            if (userinfo) userinfo.value = ''\n\n            //네이버 로그아웃\n            const naverIdLogout = document.querySelector('#naverIdLogout')\n            if (naverIdLogout) naverIdLogout.click()\n\n            //카카오 로그아웃\n            const kakaoLogout = document.querySelector('#kakaoLogout')\n            if (kakaoLogout) kakaoLogout.click()\n\n            //구글 로그아웃\n            const googleLogout = document.querySelector('#googleLogout')\n            if (googleLogout) googleLogout.click()\n          } else {\n            console.log('로그아웃 실패')\n          }\n        })\n        .catch((e) => console.error(e))\n    }\n  }\n\n  return (\n    <div id=\"settingWrapper\" onClick={closeSetting}>\n      <div id=\"setting\">\n        {store.login ? (\n          <Link to=\"/loginStatus\">\n            <Button className=\"settingList\">{store.login.username}</Button>\n          </Link>\n        ) : (\n          <Link to=\"/login\">\n            <Button className=\"settingList\">로그인</Button>\n          </Link>\n        )}\n        {store.login && (\n          <Button onClick={logout} className=\"settingList\">\n            로그아웃\n          </Button>\n        )}\n        {!store.login && (\n          <Link to=\"/register\">\n            <Button className=\"settingList\">회원가입</Button>\n          </Link>\n        )}\n        {store.login && !store.login.oAuth && (\n          <Link to=\"/withdraw\">\n            <Button className=\"settingList\">회원탈퇴</Button>\n          </Link>\n        )}\n      </div>\n    </div>\n  )\n}\nexport default React.memo(Setting)\n","import React, { createContext, useEffect, useState } from 'react'\nimport './App.scss'\nimport { useLocation } from 'react-router-dom'\n\nimport Header from './components/Header'\nimport Body from './components/Body'\nimport Guide from './components/Guide'\nimport Content from './components/Content'\nimport Setting from './components/Setting'\nimport Axios from 'axios'\nimport Meta from './components/Meta'\nimport { checkToken } from './utils/util'\n\nconst AppContext = createContext()\n\nfunction App() {\n  const location = useLocation() //페이지 경로 변경 감지\n  const [ready, setReady] = useState(false)\n  const [login, setLogin] = useState(false)\n  const [menus, setMenus] = useState([\n    { name: 'home', count: 1, order: 1 },\n    { name: 'programming', order: 2 },\n    { name: 'article', order: 3 },\n  ])\n\n  //useContext 이용하여 하위 컴포넌트에 상태 전달\n  const store = {\n    ready,\n    setReady,\n    login,\n    setLogin,\n    menus,\n    setMenus,\n  }\n\n  // 포스트에서 태그 정보를 가져와서 메뉴에 표시함, Quill의 태그목록에 표시\n  useEffect(() => {\n    let url = process.env.REACT_APP_URL + '/menus'\n    //url = process.env.REACT_APP_LOCAL_URL+'/menus'\n\n    Axios.get(url, {\n      withCredentials: true,\n    }) //메뉴 태그 가져오기\n      .then((res) => {\n        setMenus(res.data)\n      })\n      .catch((e) => console.log(e)) //실패\n  }, [location.pathname])\n\n  //주소 변경될 때, 토큰 체크하고 스크롤을 가장 위로\n  useEffect(() => {\n    checkToken(setLogin)\n    //최상단으로 스크롤 이동\n    document.body.scrollTop = 0\n\n    //페이지 이동할 때 activeListManual 스타일을 모두 지움\n    const tags = document.querySelectorAll('.activeListManual')\n    if (tags) {\n      for (let i of tags) {\n        i.classList.remove('activeListManual')\n      }\n    }\n  }, [location.pathname, location.search])\n\n  useEffect(() => {\n    const editor = document.querySelector('#editor')\n    const toolbar = document.querySelector('.ql-toolbar')\n\n    if (editor && toolbar) {\n      editor.style.marginBottom = toolbar.offsetHeight + 10 + 'px'\n    }\n  })\n\n  return (\n    <AppContext.Provider value={store}>\n      <div id=\"app\">\n        <Meta\n          data={{\n            title: '임기의 코딩 블로그',\n            description: '주로 Javascript, React, ReactNative, Node 관련 글을 포스팅합니다. 감사합니다. 😄',\n            image: process.env.PUBLIC_URL + '/favicon.ico',\n          }}\n        />\n        <Header />\n        <Setting />\n        <Body>\n          <Guide />\n          <Content />\n        </Body>\n      </div>\n    </AppContext.Provider>\n  )\n}\nexport { AppContext }\nexport default React.memo(App)\n","import React from 'react'\nimport ReactDOM, { hydrate } from 'react-dom'\nimport { BrowserRouter } from 'react-router-dom'\nimport App from './App'\nimport { resize } from './utils/util'\n\nconst rootElement = document.getElementById('root')\n\nif (rootElement.hasChildNodes()) {\n  hydrate(\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\n      <App />\n    </BrowserRouter>,\n    rootElement,\n  )\n} else {\n  ReactDOM.render(\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\n      <App />\n    </BrowserRouter>,\n    document.getElementById('root'),\n  )\n}\n\n//리사이즈 이벤트 등록\nlet timer = null\nlet debounce = null\nwindow.addEventListener('resize', function () {\n  //스로틀링 구현\n  if (!timer) {\n    timer = setTimeout(() => {\n      timer = null\n      resize()\n    }, 100)\n  }\n})\n\n//윈도우 로드 이벤트 등록.\nlet scroll = 0\nwindow.addEventListener('load', function () {\n  resize()\n  const $header = document.querySelector('#headerWrapper')\n  $header.style.top = '0px'\n\n  //로드후에 FABs 숨기기\n  let $FABs\n  setTimeout(() => {\n    $FABs = document.querySelectorAll('.FAB')\n    $FABs.forEach((i, idx) => {\n      setTimeout(() => {\n        i.style.right = '0px'\n      }, 150 * (idx + 1))\n    })\n  }, 1000)\n\n  //스크롤 이벤트 등록. 스크롤이 위로 올라가면 헤더 보이고 내려가면 숨김.\n  document.body.addEventListener('scroll', function (event) {\n    $FABs = document.querySelectorAll('.FAB')\n    //스로틀링 구현\n    if (!timer) {\n      timer = setTimeout(() => {\n        timer = null\n        //여기에 스로틀링 내부에서 할일 작성\n        if (document.body.scrollTop >= scroll) {\n          $header.style.top = '-48px'\n        } else {\n          $header.style.top = '0px'\n        }\n        scroll = document.body.scrollTop\n        //스크롤하면 FABs 보이기\n        $FABs.forEach((i, idx) => {\n          setTimeout(() => {\n            i.style.right = null\n          }, 150 * idx)\n        })\n      }, 100)\n    }\n    //디바운싱. 스크롤 끝나고 1.5초 후에 FABs 숨기기\n    if (debounce) {\n      clearTimeout(debounce)\n    }\n    debounce = setTimeout(() => {\n      $FABs.forEach((i, idx) => {\n        setTimeout(() => {\n          i.style.right = '0px'\n        }, 150 * (idx + 1))\n      })\n    }, 1500)\n  })\n})\n"],"sourceRoot":""}