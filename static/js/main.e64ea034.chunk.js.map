{"version":3,"sources":["utils/util.js","components/Header.js","components/Body.js","components/Menus.js","components/Guide.js","components/Comment.js","components/Meta.js","components/PostList.js","components/Recents.js","components/CommentLists.js","components/Emoji.js","components/Post.js","components/NotFoundPage.js","components/Login.js","components/Quill.js","components/Paging.js","components/Tags.js","components/Content.js","components/Setting.js","App.js","index.js"],"names":["resizeTextarea","e","fake","document","querySelector","textareas","target","push","querySelectorAll","i","length","style","height","width","offsetWidth","value","scrollHeight","slideMenu","body","guideBack","guideWrapper","content","diff","scrollTop","interval","setInterval","clearInterval","left","replace","boxShadow","maxWidth","closeMenuMobile","resize","loading","offsetHeight","console","log","editor","toolbar","marginBottom","React","memo","props","store","useContext","AppContext","id","Button","className","onClick","to","startIcon","alt","src","setting","display","login","imageUrl","Math","floor","random","onError","children","menus","map","key","name","exact","activeClassName","substring","toUpperCase","count","subMenus","j","title","href","preventDefault","window","open","comment","post","refreshComment","useState","setImageUrl","update","date","publishedDate","useEffect","postId","commentId","username","Axios","process","withCredentials","data","then","res","catch","fontWeight","updated","readOnly","onChange","textarea","confirm","classList","remove","url","patch","alert","add","focus","background","locales","en","ko","Meta","lang","locale","description","image","undefined","canonical","type","Helmet","titleTemplate","rel","itemprop","property","hreflang","list","no","tags","views","text","idx","location","comments","setComments","commentCnt","setCommentCnt","recentAll","setRecentAll","pathname","get","setReady","reduce","a","b","splited","emojis","split","copied","emoji","setTimeout","options","format","match","history","params","setPost","postBody","setPostBody","recents","setRecents","popular","setPopular","recentComments","setRecentComments","useQuill","modules","syntax","formats","quill","quillRef","go","hash","elem","frame","contentScroll","elemTop","offsetTop","dif","setContents","setText","activeTags","deletePost","delete","func","svg","ref","variant","color","placeholder","useHistory","browser","agent","navigator","userAgent","toLowerCase","indexOf","checkUsername","setCheckUsername","checkPassword","setCheckPassword","checkPasswordConfirm","setCheckPasswordConfirm","buttonName","setButtonName","userinfo","setUserinfo","userinfoElem","user","JSON","parse","host","email","naverLogout","click","profile_image","kakaoLogout","profile","thumbnail_image_url","fetch","mode","method","credentials","headers","stringify","status","json","message","error","setLogin","clickButton","password","fontSize","naverIdLogin","firstChild","kakaoLogin","googleLogin","passwordConfirm","autoComplete","textAlign","ready","setSubMenus","size","header","align","indent","imageCompress","quality","maxHeight","imageType","debug","Quill","register","Number","checked","mainMenu","getElementById","res2","subMenu","newSubMenu","clickPost","getContents","getText","newMainMenu","getLength","changeMainMenu","changeSubMenu","postCount","useLocation","search","queryString","paging","pages","page","parseInt","startPost","lastPage","ceil","links","innerHTML","p","path","tag","lists","setLists","titles","setTitles","setPostCount","setPage","pageNum","tempTitles","component","Login","Tags","CommentLists","Post","NotFoundPage","disabled","settingWrapper","stopPropagation","naverIdLogout","googleLogout","oAuth","createContext","order","setMenus","checkToken","addEventListener","removeEventListener","toggleHeader","$header","top","timer","useToggleHeader","Provider","rootElement","hasChildNodes","hydrate","basename","ReactDOM","render"],"mappings":"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","file":"static/js/main.e64ea034.chunk.js","sourcesContent":["import Axios from 'axios'\r\nimport { useEffect } from 'react'\r\n\r\nexport const resizeTextarea = (e) => {\r\n  //텍스트에어리어를 찾아서 크기를 글자 높이에 맞게 변경하기\r\n  //textarea 높이 조정\r\n  const fake = document.querySelector('#fakeTextarea')\r\n  let textareas = []\r\n  if (e && e.target) {\r\n    textareas.push(e.target)\r\n  } else {\r\n    textareas = document.querySelectorAll('textarea')\r\n  }\r\n\r\n  if (textareas && fake) {\r\n    for (let i = 0; i < textareas.length; i++) {\r\n      fake.style.height = '1px'\r\n      fake.style.width = textareas[i].offsetWidth + 'px'\r\n      fake.value = textareas[i].value\r\n      textareas[i].style.height = 5 + fake.scrollHeight + 'px'\r\n    }\r\n    fake.value = ''\r\n    fake.style.height = '0px'\r\n  }\r\n}\r\n\r\nexport const slideMenu = () => {\r\n  //메뉴버튼 클릭 시 메뉴 보이기 & 숨기기\r\n  //guideWrapper는 PC에서 width조절, 모바일에서 absolute left조절\r\n  const body = document.body\r\n  const guideBack = document.querySelector('#guideBack')\r\n  const guideWrapper = document.querySelector('#guideWrapper')\r\n  const content = document.querySelector('#content')\r\n\r\n  guideBack.style.width = '0' // 회색 0\r\n\r\n  if (body.offsetWidth < 500) {\r\n    //모바일 메뉴 동작\r\n    //맨 위로 스크롤 0.1초\r\n    let diff = body.scrollTop / 10\r\n    const interval = setInterval(() => {\r\n      body.scrollTop -= diff\r\n      if (body.scrollTop <= 0) clearInterval(interval)\r\n    }, 10)\r\n    if (guideWrapper.style.left && guideWrapper.style.left.replace('px', '') > -100) {\r\n      guideWrapper.style.left = '-300px' // 메뉴 0\r\n      content.style.width = 'calc(100% - 16px)'\r\n    } else {\r\n      guideBack.style.width = '100%' // 회색 100%\r\n      guideWrapper.style.left = '0px' // 메뉴 0\r\n    }\r\n  } else {\r\n    //데스크탑 메뉴 동작\r\n    if (guideWrapper.offsetWidth > 0) {\r\n      //메뉴닫기\r\n      guideWrapper.style.width = 0\r\n      guideWrapper.style.boxShadow = 'unset'\r\n      content.style.maxWidth = `calc(1280px - 16px)`\r\n      content.style.width = `calc(100% - 16px)`\r\n    } else {\r\n      //메뉴열기\r\n      content.style.maxWidth = `calc(1280px - 300px - 16px)`\r\n      content.style.width = `calc(100% - 300px - 16px)`\r\n      guideWrapper.style.width = '300px'\r\n      guideWrapper.style.boxShadow = '2px 2px 3px 1px gray'\r\n    }\r\n  }\r\n}\r\n\r\n//모바일에서 회색부분 클릭 시 메뉴 닫기\r\nexport const closeMenuMobile = (e) => {\r\n  const body = document.querySelector('#body')\r\n  const guideBack = document.querySelector('#guideBack')\r\n  const guideWrapper = document.querySelector('#guideWrapper')\r\n  const content = document.querySelector('#content')\r\n\r\n  guideBack.style.width = '0' // 회색 0\r\n  if (body.offsetWidth < 500) {\r\n    //모바일\r\n    guideWrapper.style.left = '-300px' // 메뉴 0\r\n    content.style.width = 'calc(100% - 16px)'\r\n  }\r\n}\r\n\r\nexport const checkToken = (login, setLogin) => {\r\n  //로그인 되어있는지 토큰 체크하기\r\n  let url = process.env.REACT_APP_URL + '/auth/check'\r\n  //url = process.env.REACT_APP_LOCAL_URL+'/auth/check'\r\n  Axios.get(url, { withCredentials: true })\r\n    .then((res) => {\r\n      if (res.data) {\r\n        //console.log('토큰 체크 성공')\r\n        setLogin(res.data)\r\n      } else {\r\n        //console.log('토큰 없음') //res.status===204(No Content)\r\n        setLogin(false)\r\n      }\r\n    })\r\n    .catch((e) => {\r\n      //실패\r\n      console.log(e)\r\n    })\r\n}\r\n\r\n//리사이즈시에 동작\r\nexport const resize = () => {\r\n  //윈도우 사이즈에 맞춰서 로딩 사이즈 설정해줌\r\n  const loading = document.querySelector('#loading')\r\n  if (loading) {\r\n    loading.style.height = document.body.offsetHeight - 48 - 16 + 'px'\r\n  }\r\n  //댓글 textarea 사이즈 조정\r\n  resizeTextarea()\r\n\r\n  //화면 리사이즈 되면 스크립트로 작성한 스타일 지우기\r\n  const guideBack = document.querySelector('#guideBack')\r\n  const guideWrapper = document.querySelector('#guideWrapper')\r\n  const content = document.querySelector('#content')\r\n  console.log(document.body.offsetWidth, guideWrapper.style.left.replace('px','')*1)\r\n  if (document.body.offsetWidth < 500 && guideWrapper.style.left.replace('px','')*1 >= 0) {\r\n    //모바일이고 메뉴가 켜져있다면 메뉴 유지함\r\n  }if(document.body.offsetWidth >= 500 && guideWrapper.offsetWidth === 0){\r\n    //PC이고 메뉴가 꺼져있다면 메뉴 유지함\r\n  } else {\r\n    guideBack.style = null\r\n    guideWrapper.style = null\r\n    content.style = null\r\n  }\r\n\r\n  // Quill editor 아래 마진 변경\r\n  const editor = document.querySelector('#editor')\r\n  const toolbar = document.querySelector('.ql-toolbar')\r\n  if (editor && toolbar) {\r\n    editor.style.marginBottom = toolbar.offsetHeight + 10 + 'px'\r\n  }\r\n}\r\n\r\n//스크롤되면 헤더 감추는 hook\r\nexport function useToggleHeader() {\r\n  useEffect(() => {\r\n    toggleHeader()\r\n\r\n    let timer = null\r\n    document.body.addEventListener('scroll', function () {\r\n      //스로틀링 구현\r\n      if (!timer) {\r\n        timer = setTimeout(() => {\r\n          timer = null\r\n          toggleHeader()\r\n        }, 100)\r\n      }\r\n    })\r\n    return () => document.body.removeEventListener('scroll', toggleHeader)\r\n  })\r\n\r\n  document.body.addEventListener('scroll', toggleHeader)\r\n  function toggleHeader() {\r\n    const $header = document.querySelector('#headerWrapper')\r\n    if (document.body.scrollTop <= 0) {\r\n      $header.style.top = 0\r\n    } else {\r\n      $header.style.top = '-48px'\r\n    }\r\n  }\r\n}\r\n","import React from 'react'\r\nimport './Header.scss'\r\nimport { Link } from 'react-router-dom'\r\nimport { AppContext } from '../App'\r\nimport MenuIcon from '@material-ui/icons/Menu'\r\nimport { closeMenuMobile, slideMenu } from '../utils/util'\r\nimport { Button } from '@material-ui/core'\r\n\r\nfunction Header(props) {\r\n  const store = React.useContext(AppContext)\r\n\r\n  const toggleSetting = () => {\r\n    const setting = document.querySelector('#settingWrapper')\r\n    if (setting) {\r\n      if (setting.style.display === 'block') {\r\n        setting.style.display = 'none'\r\n      } else {\r\n        setting.style.display = 'block'\r\n      }\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div id=\"headerWrapper\">\r\n      <div id=\"header\">\r\n        <Button className=\"menu\" onClick={slideMenu}>\r\n          <MenuIcon />\r\n        </Button>\r\n        <Link to=\"/\">\r\n          <Button id=\"title\" startIcon={<img id=\"logo\" alt=\"logo\" src={process.env.PUBLIC_URL + '/images/imcat_64.png'} />} onClick={closeMenuMobile}>\r\n            임기의 코딩 블로그\r\n          </Button>\r\n        </Link>\r\n        <Button className=\"hover\" onClick={toggleSetting}>\r\n          {!store.login ? (\r\n            <img className=\"profile\" alt=\"PROFILE\" src={process.env.PUBLIC_URL + '/images/noavatar.png'} />\r\n          ) : (\r\n            <img\r\n              className=\"profile\"\r\n              alt=\"PROFILE\"\r\n              src={store.login.imageUrl ? store.login.imageUrl : 'noimage' + Math.floor(Math.random() * 100)}\r\n              onError={(e) => {\r\n                e.target.src = process.env.PUBLIC_URL + '/images/dog' + (Math.floor(Math.random() * (3 - 1 + 1)) + 1) + '.png'\r\n              }}\r\n            />\r\n          )}\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\nexport default React.memo(Header)\r\n","import React from 'react'\r\nimport './Body.scss'\r\n\r\nfunction Body(props) {\r\n  return <div id=\"body\">{props.children}</div>\r\n}\r\nexport default React.memo(Body)\r\n","import React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\nimport './Menus.scss'\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore'\r\nimport { Button } from '@material-ui/core'\r\n\r\nfunction Menus(props) {\r\n  const { menus } = props\r\n\r\n  //menu정보를 받아서 링크 메뉴 생성하기\r\n  //menu { name: string, cnt: number, Object{ name: string, cnt: number}, Object{...}}\r\n  return (\r\n    <>\r\n      {menus &&\r\n        menus.map((i) => (\r\n          <div key={i.name}>\r\n            <NavLink exact to={i.name === 'home' ? '/' : `/tags/${i.name}`} className=\"list\" activeClassName=\"activeList\">\r\n              <Button>\r\n                <span className=\"menuName\">{i.name.substring(0, 1).toUpperCase() + i.name.substring(1)}</span>\r\n                <span className=\"menuOptions\">\r\n                  <span className=\"menuCnt\">{i.count}</span>\r\n                  <span className=\"menuExpandIcon\">{i.subMenus && i.subMenus.length >= 1 && <ExpandMoreIcon />}</span>\r\n                </span>\r\n              </Button>\r\n            </NavLink>\r\n            {i.subMenus &&\r\n              i.subMenus.length > 0 &&\r\n              i.subMenus.map((j) => (\r\n                <NavLink exact to={`/tags/${j.name}`} className=\"list subList\" activeClassName=\"activeList\" key={j.name}>\r\n                  <Button>\r\n                    <span className=\"menuName\">{j.name.substring(0, 1).toUpperCase() + j.name.substring(1)}</span>\r\n                    <span className=\"menuOptions\">\r\n                      <span className=\"menuCnt\">{j.count}</span>\r\n                    </span>\r\n                  </Button>\r\n                </NavLink>\r\n              ))}\r\n          </div>\r\n        ))}\r\n    </>\r\n  )\r\n}\r\nexport default React.memo(Menus)\r\n","import React from 'react'\r\nimport './Guide.scss'\r\nimport { AppContext } from '../App'\r\nimport Menus from './Menus'\r\nimport OpenInNewIcon from '@material-ui/icons/OpenInNew'\r\nimport { closeMenuMobile } from '../utils/util'\r\nimport { Button } from '@material-ui/core'\r\n\r\nfunction Guide(props) {\r\n  const store = React.useContext(AppContext)\r\n\r\n  return (\r\n    <>\r\n      <div id=\"guideBack\" onClick={closeMenuMobile}></div>\r\n      <div id=\"guideWrapper\" className=\"slideMenu\" onClick={closeMenuMobile}>\r\n        <div id=\"avatar\">\r\n          <img alt=\"avatar\" src={process.env.PUBLIC_URL + '/images/avatar.png'} title=\"Hello 😄\" />\r\n          <div id=\"name\">Im kiyoung</div>\r\n          <div id=\"nickName\">imki123</div>\r\n          <div id=\"github\">\r\n            <a href=\"https://github.com/imki123\">\r\n              <img alt=\"github\" src={process.env.PUBLIC_URL + '/images/GitHub-Mark-32px.png'} /> <span>https://github.com/imki123</span>\r\n            </a>\r\n          </div>\r\n          <div id=\"introduction\">A web programmer who dreams of becoming a wise developer.</div>\r\n        </div>\r\n        <div className=\"menus\">\r\n          <Menus menus={store.menus} />\r\n        </div>\r\n        <div className=\"menus\">\r\n          <a\r\n            href=\"https://imki123.github.io/interactive_coding\"\r\n            className=\"list\"\r\n            onClick={(e) => {\r\n              e.preventDefault()\r\n              window.open('https://imki123.github.io/interactive_coding')\r\n            }}\r\n          >\r\n            <Button className=\"menuLink\">\r\n              <div>\r\n                <img alt=\"onandoff\" src={process.env.PUBLIC_URL + '/images/imcat_64.png'} />\r\n                Interactive Coding\r\n              </div>\r\n              <OpenInNewIcon />\r\n            </Button>\r\n          </a>\r\n          <a\r\n            href=\"https://imki123.github.io/catbook\"\r\n            className=\"list\"\r\n            onClick={(e) => {\r\n              e.preventDefault()\r\n              window.open('https://imki123.github.io/catbook')\r\n            }}\r\n          >\r\n            <Button className=\"menuLink\">\r\n              <div>\r\n                <img alt=\"catbook\" src={process.env.PUBLIC_URL + '/images/catbook_64.png'} />\r\n                Catbook\r\n              </div>\r\n              <OpenInNewIcon />\r\n            </Button>\r\n          </a>\r\n          <a\r\n            href=\"https://imki123.github.io/onandoff\"\r\n            className=\"list\"\r\n            onClick={(e) => {\r\n              e.preventDefault()\r\n              window.open('https://imki123.github.io/onandoff')\r\n            }}\r\n          >\r\n            <Button className=\"menuLink\">\r\n              <div>\r\n                <img alt=\"onandoff\" src={process.env.PUBLIC_URL + '/images/imcat_64.png'} />\r\n                OnAndOff\r\n              </div>\r\n              <OpenInNewIcon />\r\n            </Button>\r\n          </a>\r\n        </div>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\nexport default React.memo(Guide)\r\n","import React, { useEffect, useState } from 'react'\r\nimport './Comment.scss'\r\nimport { AppContext } from '../App'\r\nimport Axios from 'axios'\r\nimport { resizeTextarea } from '../utils/util'\r\n\r\nfunction Comment(props) {\r\n  const store = React.useContext(AppContext)\r\n  const { comment, post, refreshComment } = props\r\n  const [imageUrl, setImageUrl] = useState('noimage')\r\n  let update = false\r\n  let date = comment.publishedDate.substring(0, 16).replace('T', ' ')\r\n  useEffect(() => {\r\n    const textarea = document.querySelector(`#comment_${post.postId}_${comment.commentId} textarea`)\r\n    textarea.value = comment.content\r\n\r\n    //댓글 프로필 이미지 가져오기\r\n    if (comment.username) {\r\n      let url = process.env.REACT_APP_URL + '/auth/user'\r\n      //url = process.env.REACT_APP_LOCAL_URL + '/auth/user'\r\n      Axios.post(url, {\r\n        withCredentials: true, //CORS\r\n        data: {\r\n          username: comment.username,\r\n        },\r\n      })\r\n        .then((res) => {\r\n          if (!res.data.imageUrl) setImageUrl('noimage' + Math.floor(Math.random() * 100))\r\n          else setImageUrl(res.data.imageUrl)\r\n        })\r\n        .catch((e) => {\r\n          setImageUrl('noimage' + Math.floor(Math.random() * 100))\r\n        })\r\n    }\r\n  }, [comment, post.postId, setImageUrl])\r\n\r\n  const updateComment = (e) => {\r\n    //댓글 수정\r\n    const textarea = document.querySelector(`#comment_${post.postId}_${comment.commentId} textarea`)\r\n    if (!update) {\r\n      update = true\r\n      textarea.classList.add('updateMode')\r\n      textarea.readOnly = false\r\n      textarea.focus()\r\n    } else if (window.confirm('댓글을 수정하시겠습니까?')) {\r\n      update = false\r\n      textarea.classList.remove('updateMode')\r\n      textarea.readOnly = true\r\n\r\n      let url = process.env.REACT_APP_URL + `/comments/${post.postId}/${comment.commentId}`\r\n      //url = process.env.REACT_APP_LOCAL_URL+`/comments/${post.postId}/${comment.commentId}`\r\n\r\n      Axios.patch(url, {\r\n        //댓글 수정\r\n        withCredentials: true, //CORS\r\n        data: {\r\n          content: textarea.value,\r\n        },\r\n      })\r\n        .then((res) => {\r\n          console.log(`${comment.commentId}번 댓글 수정 성공`)\r\n          refreshComment() //포스트 다시 불러오기\r\n        })\r\n        .catch((e) => alert(e)) //실패\r\n    }\r\n  }\r\n\r\n  const deleteComment = (e) => {\r\n    if (window.confirm('삭제 후에는 복구가 불가합니다. 정말로 댓글을 삭제하시겠습니까?')) {\r\n      let url = process.env.REACT_APP_URL + `/comments/delete/${post.postId}/${comment.commentId}`\r\n      //url = process.env.REACT_APP_LOCAL_URL+`/comments/delete/${post.postId}/${comment.commentId}`\r\n\r\n      Axios.patch(url, {\r\n        //포스트 삭제\r\n        withCredentials: true, //CORS\r\n      })\r\n        .then((res) => {\r\n          console.log(`${comment.commentId}번 댓글 삭제 성공`)\r\n          refreshComment() //포스트 다시 불러오기\r\n        })\r\n        .catch((e) => alert(e)) //실패\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"commentWrapper\" id={`comment_${post.postId}_${comment.commentId}`}>\r\n      <div className=\"comment\">\r\n        <div className=\"commentProfile\">\r\n          {!comment.username ? (\r\n            <img alt=\"PROFILE\" src={process.env.PUBLIC_URL + '/images/noavatar.png'} />\r\n          ) : (\r\n            <img\r\n              alt=\"PROFILE\"\r\n              src={imageUrl}\r\n              onError={(e) => {\r\n                e.target.src = process.env.PUBLIC_URL + '/images/dog' + (Math.floor(Math.random() * (3 - 1 + 1)) + 1) + '.png'\r\n              }}\r\n            />\r\n          )}\r\n        </div>\r\n        <div className=\"commentContent\">\r\n          {comment.username === store.login.username ? (\r\n            <span className=\"commentUsername\" style={{ fontWeight: 'bold' }}>\r\n              {comment.username}\r\n            </span>\r\n          ) : (\r\n            <span className=\"commentUsername\">{comment.username}</span>\r\n          )}\r\n          <span className=\"commentDate\">\r\n            {' '}\r\n            - {date} {comment.updated && '(수정됨)'}\r\n          </span>\r\n          <textarea readOnly onChange={resizeTextarea} />\r\n        </div>\r\n      </div>\r\n      {((comment.username && comment.username === store.login.username) || store.login.username === 'imki123') && (\r\n        <div className=\"commentButtons\">\r\n          <button className=\"commentButton\" onClick={updateComment}>\r\n            수정\r\n          </button>\r\n          <button className=\"commentButton\" style={{ background: 'red' }} onClick={deleteComment}>\r\n            삭제\r\n          </button>\r\n        </div>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\nexport default React.memo(Comment)\r\n","// components/Meta\r\n/* eslint-disable no-undefined */\r\nimport React from 'react'\r\nimport { Helmet } from 'react-helmet'\r\n\r\nconst locales = {\r\n  en: 'en_US',\r\n  ko: 'ko_KR',\r\n}\r\n\r\nconst Meta = ({ data }) => {\r\n  const lang = locales[data.locale] || locales['en']\r\n  const title = data.title\r\n  const description = data.description\r\n  const image = data.image !== undefined && `${data.image}`\r\n  const canonical = data.canonical === undefined ? null : `https://imki123.github.io/${data.canonical}`\r\n  const type = data.type === undefined ? 'website' : data.type\r\n  const width = data.image && (data.width || 1200)\r\n  const height = data.image && (data.height || 630)\r\n\r\n  return (\r\n    <Helmet titleTemplate=\"%s\">\r\n      <html lang={lang} />\r\n      <title>{title}</title>\r\n      <meta name=\"description\" content={description} />\r\n      {canonical ? <link rel=\"canonical\" href={canonical} /> : null}\r\n      {image ? <link rel=\"image_src\" href={image} /> : null}\r\n      {image ? <meta itemprop=\"image\" content={image} /> : null}\r\n\r\n      <meta property=\"og:site_name\" content=\"임기의 코딩 블로그\" />\r\n      <meta property=\"og:title\" content={title} />\r\n      {description ? <meta property=\"og:description\" content={description} /> : null}\r\n      {canonical ? <meta property=\"og:url\" content={canonical} /> : null}\r\n      <meta property=\"og:locale\" content={locales[lang]} />\r\n      <meta property=\"og:type\" content={type} />\r\n      {image ? <meta property=\"og:image\" content={image} /> : null}\r\n      {width ? <meta property=\"og:image:width\" content={width} /> : null}\r\n      {height ? <meta property=\"og:image:height\" content={height} /> : null}\r\n      <meta property=\"fb:pages\" content=\"임기의 코딩 블로그\" />\r\n\r\n      {/* change type of twitter if there is no image? */}\r\n      <meta name=\"twitter:card\" content=\"summary_large_image\" />\r\n      <meta name=\"twitter:title\" content={title} />\r\n      {description ? <meta name=\"twitter:description\" content={description} /> : null}\r\n      {image ? <meta name=\"twitter:image\" content={image} /> : null}\r\n      <meta name=\"twitter:site\" content=\"@임기의 코딩 블로그\" />\r\n      {canonical ? <link rel=\"alternate\" href={canonical} hreflang={lang} /> : null}\r\n    </Helmet>\r\n  )\r\n}\r\n\r\nexport default Meta\r\n","import React from 'react'\r\nimport './PostList.scss'\r\nimport { Link } from 'react-router-dom'\r\nimport { Button } from '@material-ui/core'\r\n\r\nfunction PostList(props) {\r\n  const { list, no } = props\r\n  let date = list.publishedDate.substring(0, 10).replace('T', ' ')\r\n\r\n  return (\r\n    <Link to={`/posts/${list.postId}`}>\r\n      <Button className=\"postList no-drag\">\r\n        <div className=\"postListTags\">\r\n          <span className=\"postTags\">\r\n            Tag : {list.tags[0]}\r\n            {list.tags[1] ? `, ${list.tags[1]}` : ''}\r\n          </span>\r\n          <span className=\"postDate\">\r\n            {list.views ? list.views : 0}, {date}\r\n          </span>\r\n        </div>\r\n        <div className=\"postListHeader\">\r\n          <div>\r\n            <span className=\"postId\">{no}.</span>\r\n            <span className=\"postTitle\">{list.title}</span>\r\n          </div>\r\n        </div>\r\n        <div className=\"postBody\">{list.text}</div>\r\n      </Button>\r\n    </Link>\r\n  )\r\n}\r\nexport default React.memo(PostList)\r\n","import React from 'react'\r\nimport './Recents.scss'\r\n\r\nimport PostList from './PostList'\r\n\r\nfunction Recents(props) {\r\n  const { title, list } = props\r\n  return (\r\n    <div className=\"post recents\">\r\n      <div className=\"postListTitle\">{title}</div>\r\n      {list && list.map((i, idx) => <PostList no={idx + 1} list={i} key={i.postId} />)}\r\n    </div>\r\n  )\r\n}\r\nexport default React.memo(Recents)\r\n","import Axios from 'axios'\r\nimport React, { useEffect, useState } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { AppContext } from '../App'\r\nimport './CommentLists.scss'\r\nimport Meta from './Meta'\r\n\r\nfunction CommentLists(props) {\r\n  const store = React.useContext(AppContext)\r\n  const { list, location } = props\r\n  const [comments, setComments] = useState()\r\n  const [commentCnt, setCommentCnt] = useState(10)\r\n  const [recentAll, setRecentAll] = useState('')\r\n\r\n  useEffect(() => {\r\n    if (list) setComments(list) //props로 받은 list가 있으면 comments에 저장\r\n\r\n    if (location && (location.pathname === '/comments' || location.pathname === '/comments/')) {\r\n      //전체리스트면 Axios로 comments 가져옴\r\n      setRecentAll('recentAll')\r\n      let url = process.env.REACT_APP_URL + '/comments/recentAll'\r\n      //url = process.env.REACT_APP_LOCAL_URL + '/comments/recentAll'\r\n      Axios.get(url)\r\n        .then((res) => {\r\n          //console.log('comments:', res.data)\r\n          setComments(res.data)\r\n          setCommentCnt(20)\r\n          if (!res.data) {\r\n            setComments('')\r\n          }\r\n        })\r\n        .catch((res) => {\r\n          setComments('')\r\n          //console.log(res)\r\n        })\r\n    }\r\n  }, [location, list])\r\n\r\n  useEffect(() => {\r\n    if (store) store.setReady(false)\r\n    if (comments) {\r\n      store.setReady(true)\r\n    } else if (comments === '') {\r\n      store.setReady(true)\r\n    }\r\n  })\r\n\r\n  //댓글 10개 더보기\r\n  const more = (e) => {\r\n    setCommentCnt(commentCnt + 10)\r\n  }\r\n\r\n  return (\r\n    <div className={`post recents recentComment ${recentAll}`}>\r\n      {location && (location.pathname === '/comments' || location.pathname === '/comments/') && (\r\n        <Meta\r\n          data={{\r\n            title: '최근 댓글 목록',\r\n            description: comments && comments.reduce((a, b) => a + ' / ' + b.content, ''),\r\n            canonical: `comments`,\r\n          }}\r\n        />\r\n      )}\r\n      <div className=\"postListTitle\">최신 댓글 {list && <Link to=\"/comments\">더보기</Link>}</div>\r\n      {comments &&\r\n        comments.map((i, idx) => (\r\n          <div key={i.title + idx}>\r\n            {idx < commentCnt && (\r\n              <Link to={`/posts/${i.postId}/#comments`}>\r\n                <div className=\"postList no-drag\">\r\n                  <div className=\"postListHeader\">\r\n                    <div>\r\n                      <span className=\"postId\">{idx + 1}.</span>\r\n                      <span className=\"username\">{i.username}</span>\r\n                    </div>\r\n                    <span className=\"postDate\">{i.publishedDate && i.publishedDate.substring(0, 19).replace('T', ' ')}</span>\r\n                  </div>\r\n                  <div className=\"postBody\">{i.content}</div>\r\n                  <div className=\"postTitle\">{i.title}</div>\r\n                </div>\r\n              </Link>\r\n            )}\r\n          </div>\r\n        ))}\r\n      {comments && comments.length > commentCnt && (\r\n        <div className=\"more\">\r\n          <span className=\"moreButton\" onClick={more}>\r\n            댓글 더보기\r\n          </span>\r\n        </div>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\nexport default React.memo(CommentLists)\r\n","/* eslint-disable jsx-a11y/accessible-emoji */\r\nimport React from 'react'\r\nimport './Emoji.scss'\r\nimport { CopyToClipboard } from 'react-copy-to-clipboard'\r\n\r\nfunction Emoji(props) {\r\n  const { emojis } = props\r\n  let splited = emojis.split(',')\r\n\r\n  const copied = (e) => {\r\n    let emoji = e.target\r\n    emoji.style.background = 'blue'\r\n    setTimeout(function () {\r\n      emoji.style.background = 'unset'\r\n    }, 1000)\r\n  }\r\n\r\n  return (\r\n    <span className=\"Emoji\">\r\n      {splited &&\r\n        splited.map((i, idx) => (\r\n          <CopyToClipboard key={idx} options={{ format: 'text/plain' }} text={i}>\r\n            <span onClick={copied}>{i}</span>\r\n          </CopyToClipboard>\r\n        ))}\r\n      <span\r\n        className=\"EmojiLink\"\r\n        onClick={() => {\r\n          window.open('https://copy.emojiall.com/ko/')\r\n        }}\r\n      >\r\n        [이모지🔗]\r\n      </span>\r\n    </span>\r\n  )\r\n}\r\nexport default React.memo(Emoji)\r\n","/* eslint-disable jsx-a11y/accessible-emoji */\r\nimport React, { useEffect, useState } from 'react'\r\nimport './Post.scss'\r\nimport { Link } from 'react-router-dom'\r\nimport { useQuill } from 'react-quilljs'\r\nimport Comment from './Comment'\r\nimport { AppContext } from '../App'\r\nimport RefreshIcon from '@material-ui/icons/Refresh'\r\nimport Axios from 'axios'\r\nimport Meta from './Meta'\r\nimport Recents from './Recents'\r\nimport CommentLists from './CommentLists'\r\nimport Emoji from './Emoji'\r\nimport { resizeTextarea } from '../utils/util'\r\nimport { Button } from '@material-ui/core'\r\n\r\nfunction Post({ match, location, history }) {\r\n  const store = React.useContext(AppContext)\r\n  let { postId } = match.params\r\n  const [post, setPost] = useState(false)\r\n  const [postBody, setPostBody] = useState()\r\n  const [comments, setComments] = useState([])\r\n  const [commentCnt, setCommentCnt] = useState(3)\r\n\r\n  const [recents, setRecents] = useState([])\r\n  const [popular, setPopular] = useState([])\r\n  const [recentComments, setRecentComments] = useState([])\r\n\r\n  const modules = { syntax: true }\r\n  const formats = ['bold', 'italic', 'underline', 'strike', 'code-block', 'blockquote', 'size', 'header', 'align', 'color', 'background', 'indent', 'list', 'link', 'image', 'video', 'clean']\r\n  const { quill, quillRef } = useQuill({ modules, formats, readOnly: true })\r\n\r\n  useEffect(() => {\r\n    setPost(false)\r\n    setPostBody(false)\r\n    //포스트 가져오기\r\n    let id = 1\r\n    if (postId) id = postId\r\n    let url = process.env.REACT_APP_URL + '/posts/' + id\r\n    //url = process.env.REACT_APP_LOCAL_URL + '/posts/' + id\r\n    Axios.get(url, {\r\n      withCredentials: true,\r\n    })\r\n      .then((res) => {\r\n        setComments(res.data.comments)\r\n        setPost(res.data)\r\n      })\r\n      .catch((e) => {\r\n        alert('찾으시는 페이지가 없습니다.\\n' + e)\r\n        history.go(-1)\r\n      }) //실패\r\n\r\n    //포스트바디 가져오기\r\n    url = process.env.REACT_APP_URL + '/posts/postBody/' + id\r\n    //url = process.env.REACT_APP_LOCAL_URL + '/posts/postBody/' + id\r\n    Axios.get(url)\r\n      .then((res) => {\r\n        setPostBody(res.data.body)\r\n\r\n        if (location.hash) {\r\n          //hash가 있으면 해당 엘리먼트로 스크롤\r\n          setTimeout(function () {\r\n            //postBody가 로드된 이후에 스크롤이 되야해서 0.01초 타임아웃 추가..\r\n            const content = document.body\r\n            const elem = document.querySelector(location.hash)\r\n            if (content && elem) {\r\n              let contentScroll = content.scrollTop\r\n              let elemTop = elem.offsetTop\r\n              let dif = (elemTop - contentScroll) / 100\r\n              let frame\r\n              //프레임이 혹시라도 안멈출 수 있어서 1초 후에 강제로 종료함\r\n              setTimeout(function () {\r\n                clearInterval(frame)\r\n              }, 1100)\r\n              if (elemTop > contentScroll) {\r\n                frame = setInterval(function () {\r\n                  //인터벌\r\n                  if (content.scrollTop + dif >= elemTop || content.scrollTop >= content.scrollHeight - content.offsetHeight) {\r\n                    clearInterval(frame)\r\n                  } else {\r\n                    content.scrollTop += dif\r\n                  }\r\n                }, 10)\r\n              } else {\r\n                frame = setInterval(function () {\r\n                  if (content.scrollTop <= elemTop) {\r\n                    clearInterval(frame)\r\n                  } else {\r\n                    content.scrollTop += dif\r\n                  }\r\n                }, 10)\r\n              }\r\n            }\r\n          }, 10)\r\n        }\r\n      })\r\n      .catch((e) => {\r\n        console.log(e)\r\n      }) //실패\r\n\r\n    //홈일경우 recents, popular, recentComments 가져옴\r\n    if (location.pathname === '/') {\r\n      url = process.env.REACT_APP_URL + '/posts/popular'\r\n      //url = process.env.REACT_APP_LOCAL_URL + '/posts/popular'\r\n      Axios.get(url).then((res) => {\r\n        setPopular(res.data)\r\n      })\r\n\r\n      url = process.env.REACT_APP_URL + '/posts/recents'\r\n      //url = process.env.REACT_APP_LOCAL_URL + '/posts/recents'\r\n      Axios.get(url).then((res) => {\r\n        setRecents(res.data)\r\n      })\r\n\r\n      url = process.env.REACT_APP_URL + '/comments/recent'\r\n      //url = process.env.REACT_APP_LOCAL_URL + '/comments/recent'\r\n      Axios.get(url).then((res) => {\r\n        setRecentComments(res.data)\r\n      })\r\n    }\r\n  }, [location, postId, history])\r\n\r\n  //포스트 바디가 준비되면 quill에 포스트 바디를 그리고\r\n  //포스트 바디가 없으면 포스트가 있으면 quill에 포스트 텍스트를 그리기.\r\n  useEffect(() => {\r\n    if (quill) {\r\n      if (postBody) {\r\n        quill.setContents(postBody)\r\n      } else if (post) {\r\n        quill.setText(post.text)\r\n      }\r\n    }\r\n  }, [quill, postBody, post])\r\n\r\n  //포스트가 준비되면 화면 보이기\r\n  useEffect(() => {\r\n    store.setReady(false)\r\n    if (post) {\r\n      store.setReady(true)\r\n\r\n      //페이지 이동할 때 activeListManual 스타일을 모두 지움\r\n      const tags = document.querySelectorAll('.activeListManual')\r\n      if (tags) {\r\n        for (let i of tags) {\r\n          i.classList.remove('activeListManual')\r\n        }\r\n      }\r\n\r\n      //태그 찾아서 activeListManual 적용\r\n      let activeTags\r\n      if (post.tags[1]) {\r\n        activeTags = document.querySelectorAll(`a[href=\"/tags/${post.tags[1]}\"]`)\r\n      } else if (post.tags[0]) {\r\n        activeTags = document.querySelectorAll(`a[href=\"/tags/${post.tags[0]}\"]`)\r\n      }\r\n      if (activeTags) {\r\n        for (let i of activeTags) {\r\n          i.classList.add('activeListManual')\r\n        }\r\n      }\r\n    }\r\n  })\r\n\r\n  const deletePost = (e) => {\r\n    if (window.confirm('글 삭제 시 복구가 불가합니다. 해당 글을 정말로 삭제하시겠습니까?')) {\r\n      const postId = e.target.id\r\n      let url = process.env.REACT_APP_URL + '/posts/' + postId\r\n      //url = process.env.REACT_APP_LOCAL_URL+'/posts/'+postId\r\n\r\n      Axios.delete(url, {\r\n        //글 삭제\r\n        withCredentials: true, //CORS\r\n      })\r\n        .then((res) => {\r\n          console.log(`${postId}번 글 삭제 성공`)\r\n          history.go(-1)\r\n        })\r\n        .catch((e) => alert(e)) //실패\r\n    }\r\n  }\r\n\r\n  const postComment = (e) => {\r\n    const comment = document.querySelector(`.commentContent textarea`) //댓글 텍스트\r\n    if (comment && comment.value !== '' && window.confirm('댓글을 작성하시겠습니까?')) {\r\n      let url = process.env.REACT_APP_URL + '/comments/' + post.postId\r\n      //url = process.env.REACT_APP_LOCAL_URL+'/comments/'+post.postId\r\n\r\n      Axios.patch(url, {\r\n        //댓글 작성\r\n        withCredentials: true, //CORS\r\n        data: {\r\n          username: store.login.username,\r\n          content: comment.value,\r\n        },\r\n      })\r\n        .then((res) => {\r\n          console.log(`${post.postId} 댓글 추가 성공`)\r\n          refreshComment(null, setCommentCnt(res.data.comments.length)) //포스트 다시 불러오고 댓글 끝까지 보이기\r\n          comment.value = ''\r\n        })\r\n        .catch((e) => alert(e)) //실패\r\n    }\r\n  }\r\n\r\n  const refreshComment = (e, func) => {\r\n    //댓글 가져오기\r\n    let url = process.env.REACT_APP_URL + '/comments/' + post.postId\r\n    //url = process.env.REACT_APP_LOCAL_URL+'/comments/'+post.postId\r\n\r\n    let svg //refresh 아이콘\r\n    if (e && e.target) svg = e.target.querySelector('svg')\r\n    if (svg) svg.classList.add('refreshing') //refresh 애니메이션 시작\r\n\r\n    Axios.get(url, {\r\n      withCredentials: true,\r\n    }) //댓글 새로고치기\r\n      .then((res) => {\r\n        console.log(`${post.postId} 댓글 새로고침`)\r\n        setComments(res.data) //댓글 저장\r\n        if (svg) svg.classList.remove('refreshing') //refresh 애니메이션 끝\r\n\r\n        if (func) func() //파라미터에 함수가 있으면 함수 실행\r\n      })\r\n      .catch((e) => {\r\n        //실패\r\n        if (svg) svg.classList.remove('refreshing') //refresh 애니메이션 끝\r\n        console.log(e)\r\n      })\r\n  }\r\n\r\n  //댓글 10개 더보기\r\n  const more = (e) => {\r\n    setCommentCnt(commentCnt + 10)\r\n  }\r\n\r\n  //댓글 더보기, 댓글 새로고침 하면 리사이즈\r\n  useEffect(() => {\r\n    resizeTextarea()\r\n  }, [commentCnt, store, comments])\r\n\r\n  return (\r\n    <>\r\n      <div className=\"post\">\r\n        {location.pathname === '/' ? (\r\n          <Meta\r\n            data={{\r\n              title: '임기의 코딩 블로그',\r\n              description: post.text ? post.text.replace(/\\n/g, ' ') : '',\r\n              canonical: '',\r\n            }}\r\n          />\r\n        ) : (\r\n          <Meta data={{ title: post.title, description: post.text ? post.text.replace(/\\n/g, ' ') : '', canonical: `posts/${post.postId}` }} />\r\n        )}\r\n        {/* 태그 */}\r\n        <div className=\"nav\">\r\n          <div>\r\n            <span>Tag : </span>\r\n            {post.tags &&\r\n              post.tags.map((i, idx) =>\r\n                idx === 0 ? (\r\n                  <span key={i}>\r\n                    <Link to={i === 'home' ? '/' : `/tags/${i}`}>{i}</Link>\r\n                  </span>\r\n                ) : (\r\n                  <span key={i}>\r\n                    , <Link to={`/tags/${i}`}>{i}</Link>\r\n                  </span>\r\n                ),\r\n              )}\r\n          </div>\r\n          <div>\r\n            {/* 조회수 */}\r\n            {\r\n              /* post.postId !== 1 &&  */ <span>\r\n                조회수: {post.views ? post.views + 1 : 1}\r\n                {', '}\r\n              </span>\r\n            }\r\n            {/* 게시일자 */}\r\n            {post && post.publishedDate.substring(0, 16).replace('T', ' ')}\r\n          </div>\r\n        </div>\r\n\r\n        {/* 글 수정 삭제 버튼 */}\r\n        {store.login && store.login.username === 'imki123' && (\r\n          <div className=\"postButtons\">\r\n            <Link to={`/quill/${post.postId}`} className=\"hover no-drag\">\r\n              수정\r\n            </Link>\r\n            &nbsp;\r\n            <button onClick={deletePost} id={post.postId} style={{ background: 'red' }}>\r\n              삭제\r\n            </button>\r\n          </div>\r\n        )}\r\n\r\n        <h2 className=\"postTitle\">{post.title}</h2>\r\n        <div className=\"postContent\">\r\n          {/* 본문 */}\r\n          <div id=\"editor\">\r\n            <div ref={quillRef} />\r\n          </div>\r\n          <div className=\"hiddenText\">{post.text}</div>\r\n\r\n          {/* 글 수정 삭제 버튼 */}\r\n          {store.login && store.login.username === 'imki123' && (\r\n            <div className=\"postButtons\">\r\n              <Link to={`/quill/${post.postId}`} className=\"hover no-drag\">\r\n                수정\r\n              </Link>\r\n              &nbsp;\r\n              <button onClick={deletePost} id={post.postId} style={{ background: 'red' }}>\r\n                삭제\r\n              </button>\r\n            </div>\r\n          )}\r\n        </div>\r\n\r\n        {/* 댓글 작성*/}\r\n        {location.pathname !== '/' && (\r\n          <>\r\n            <div className=\"EmojiDiv\">\r\n              <Emoji emojis={'😄,🤣,🥰,😍,😝,😭,👍,🐕,🐈,☀,🌙,⭐,☁,🌧,💧,♥,❤,💕'} />\r\n            </div>\r\n            <div className=\"writeComment\">\r\n              <div className=\"commentProfile\">\r\n                {!store.login ? (\r\n                  <img alt=\"PROFILE\" src={process.env.PUBLIC_URL + '/images/noavatar.png'} />\r\n                ) : (\r\n                  <img\r\n                    alt=\"PROFILE\"\r\n                    src={store.login.imageUrl}\r\n                    onError={(e) => {\r\n                      e.target.src = process.env.PUBLIC_URL + '/images/dog' + (Math.floor(Math.random() * (3 - 1 + 1)) + 1) + '.png'\r\n                    }}\r\n                  />\r\n                )}\r\n              </div>\r\n              <div className=\"commentContent\">\r\n                {store.login ? (\r\n                  <span className=\"commentUsername\">{store.login.username}</span>\r\n                ) : (\r\n                  <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    className=\"loginButton\"\r\n                    onClick={() => {\r\n                      history.push('/login')\r\n                    }}\r\n                  >\r\n                    로그인\r\n                  </Button>\r\n                )}\r\n                {store.login ? <textarea onChange={resizeTextarea} placeholder=\" 댓글을 남겨주세요 😄\" /> : <textarea readOnly placeholder=\" 로그인 후에 댓글을 남겨주세요 😄\" />}\r\n              </div>\r\n            </div>\r\n            <div className=\"commentButtons\">\r\n              {store.login && (\r\n                <button className=\"commentButton\" onClick={postComment}>\r\n                  댓글작성\r\n                </button>\r\n              )}\r\n            </div>\r\n          </>\r\n        )}\r\n\r\n        {/* 댓글 목록 */}\r\n        {comments && comments.length > 0 && (\r\n          <div id=\"comments\">\r\n            <div className=\"commentTitle\">\r\n              <div className=\"commentCnt\">댓글 {comments.length}개</div>\r\n              <span className=\"commentRefresh\" onClick={refreshComment}>\r\n                댓글 새로고침 <RefreshIcon />\r\n              </span>\r\n            </div>\r\n            {comments.map((i, idx) => idx < commentCnt && <Comment post={post} comment={i} key={i.commentId} refreshComment={refreshComment} />)}\r\n            {comments.length > commentCnt && (\r\n              <div className=\"more\">\r\n                <span className=\"moreButton\" onClick={more}>\r\n                  댓글 더보기\r\n                </span>\r\n              </div>\r\n            )}\r\n          </div>\r\n        )}\r\n      </div>\r\n      {location.pathname === '/' && (\r\n        <div className=\"homeLists\">\r\n          <Recents title=\"최신글\" list={recents} />\r\n          <Recents title=\"인기글\" list={popular} />\r\n          <CommentLists list={recentComments} />\r\n        </div>\r\n      )}\r\n    </>\r\n  )\r\n}\r\nexport default React.memo(Post)\r\n","import React, { useEffect } from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { AppContext } from '../App'\r\nimport './NotFoundPage.scss'\r\n\r\nfunction NotFoundPage() {\r\n  const store = React.useContext(AppContext)\r\n  const history = useHistory()\r\n  useEffect(() => {\r\n    //console.log(`Not found page! https://imki123.github.io/`)\r\n    store.setReady(true)\r\n  })\r\n\r\n  const goBack = (e) => {\r\n    history.go(-1)\r\n  }\r\n\r\n  return (\r\n    <div className=\"notFound\">\r\n      <div className=\"title\">Not Found Page</div>\r\n      <div className=\"goHome\">\r\n        <span onClick={goBack}>Go back</span>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\nexport default React.memo(NotFoundPage)\r\n","import React, { useState, useEffect } from 'react'\r\nimport './Login.scss'\r\nimport { Link } from 'react-router-dom'\r\nimport { AppContext } from '../App'\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert'\r\nimport Meta from './Meta'\r\nimport { Button } from '@material-ui/core'\r\n\r\nfunction Login({ history, match, location }) {\r\n  const store = React.useContext(AppContext)\r\n  let browser = ''\r\n  const agent = navigator.userAgent.toLowerCase()\r\n  if (agent.indexOf('chrome') > -1) browser = 'chrome'\r\n  else if (agent.indexOf('safari') > -1) browser = 'safari'\r\n\r\n  const [checkUsername, setCheckUsername] = useState('')\r\n  const [checkPassword, setCheckPassword] = useState('')\r\n  const [checkPasswordConfirm, setCheckPasswordConfirm] = useState('')\r\n  const [buttonName, setButtonName] = useState('로그인')\r\n  const [userinfo, setUserinfo] = useState()\r\n\r\n  useEffect(() => {\r\n    //로그인화면에서 로그인은 안되어있는데 유저정보가 있으면 로그인 처리\r\n    let frame\r\n    const userinfoElem = document.querySelector('#userinfo')\r\n    if (location.pathname === '/login' || location.pathname === '/login/' || location.pathname === '/register' || location.pathname === '/register/') {\r\n      if (!store.login) {\r\n        frame = setInterval(function () {\r\n          console.log('유저정보 체크')\r\n          if (userinfoElem && userinfoElem.value) {\r\n            //userinfo가 있으면 로그인 처리\r\n            //새로고침되거나, 로그인 버튼을 누르면 userinfo를 가져옴\r\n            clearInterval(frame) //userinfo 있으면 로그인 체크 중지\r\n            let user = JSON.parse(userinfoElem.value)\r\n\r\n            if (user.host === 'naver') {\r\n              let email = user.email\r\n              let username\r\n              if (email) {\r\n                username = email.substring(0, email.indexOf('@')) + '_n'\r\n                if (username === 'popping2606_n') username = 'imki123' //내아이디\r\n                console.log('네이버 로그인 성공:', username)\r\n                user = {\r\n                  username: username,\r\n                  email: email,\r\n                  imageUrl: user.profile_image,\r\n                  host: user.host,\r\n                }\r\n              } else {\r\n                console.log('이메일 정보 없음. 로그아웃.')\r\n                alert('이메일이 없으면 로그인이 불가해요. 이메일 동의 부탁드려요 😄')\r\n                //네이버 로그아웃\r\n                const naverLogout = document.querySelector('#naverLogout')\r\n                if (naverLogout) naverLogout.click()\r\n                userinfoElem.value = ''\r\n                history.replace()\r\n                return\r\n              }\r\n            } else if (user.host === 'kakao') {\r\n              let email = user.email\r\n              let username\r\n              if (email) {\r\n                username = email.substring(0, email.indexOf('@')) + '_k'\r\n                if (username === 'popping2606_k') username = 'imki123' //내아이디\r\n                console.log('카카오 로그인 성공:', username)\r\n                user = {\r\n                  username: username,\r\n                  email: email,\r\n                  imageUrl: user.profile.thumbnail_image_url,\r\n                  host: user.host,\r\n                }\r\n              } else {\r\n                console.log('이메일 정보 없음. 로그아웃.')\r\n                alert('이메일이 없으면 로그인이 불가해요. 이메일 동의 부탁드려요 😄')\r\n                //카카오 로그아웃\r\n                const kakaoLogout = document.querySelector('#kakaoLogout')\r\n                if (kakaoLogout) kakaoLogout.click()\r\n                userinfoElem.value = ''\r\n                history.replace()\r\n                return\r\n              }\r\n            } else {\r\n              let email = user.email\r\n              let username = email.substring(0, email.indexOf('@')) + '_g'\r\n              if (username === 'popping2606_g') username = 'imki123' //내아이디\r\n              console.log('구글 로그인 성공:', username)\r\n              user = {\r\n                username: username,\r\n                email: email,\r\n                name: user.name,\r\n                imageUrl: user.imageUrl,\r\n                host: user.host,\r\n              }\r\n            }\r\n            //console.log(user)\r\n\r\n            let url = process.env.REACT_APP_URL + '/auth/oauth'\r\n            //url = process.env.REACT_APP_LOCAL_URL + '/auth/oauth'\r\n            //로그인 성공시 토큰에 name, email, imageUrl 저장\r\n            fetch(url, {\r\n              mode: 'cors',\r\n              method: 'POST',\r\n              credentials: 'include',\r\n              headers: { 'Content-Type': 'application/json' },\r\n              body: JSON.stringify(user),\r\n            })\r\n              .then((res) => {\r\n                if (res.status === 200 || res.status === 201) {\r\n                  //성공하면 아래 then 작동\r\n                  res.json().then((res) => {\r\n                    alert(res.username + '님 환영합니다 😄')\r\n                    setUserinfo(res)\r\n                    //로그인 시 홈으로 이동\r\n                    history.replace('/')\r\n                    //history.go(-1) //뒤로가기\r\n                  })\r\n                } else {\r\n                  let message = '로그인에 실패했습니다 :('\r\n                  if (res.status === 401) {\r\n                    message += '\\n로그인 정보를 확인해주세요.'\r\n                  }\r\n                  console.log(message)\r\n                }\r\n              })\r\n              .catch((e) => console.error(e))\r\n          }\r\n        }, 1000)\r\n      }\r\n    } else if (location.pathname === '/loginStatus' || location.pathname === '/loginStatus/') {\r\n      if (userinfoElem && !userinfoElem.value) {\r\n        setUserinfo(false)\r\n      }\r\n    }\r\n    return () => clearInterval(frame)\r\n  }, [store.login, location, history])\r\n\r\n  useEffect(() => {\r\n    //유저인포가 있으면 로그인처리\r\n    if (store) {\r\n      store.setReady(true)\r\n      if (userinfo) {\r\n        store.setLogin(userinfo)\r\n      }\r\n    }\r\n  })\r\n\r\n  useEffect(() => {\r\n    //이미 로그인이 되어있다면 스테이터스로 이동\r\n    if (location.pathname === '/login' || location.pathname === '/login/') {\r\n      if (store.login) {\r\n        history.replace('/loginStatus')\r\n      }\r\n    }\r\n\r\n    //로그인이 안되어있으면 로그인으로 이동\r\n    if (location.pathname === '/loginStatus' || location.pathname === '/loginStatus/') {\r\n      //console.log(store.login)\r\n      if (!store.login) {\r\n        setTimeout(function () {\r\n          if (!store.login) {\r\n            history.replace('/login')\r\n          }\r\n        }, 1000)\r\n      }\r\n    }\r\n    if (location.pathname.indexOf('register') > -1) {\r\n      setButtonName('회원가입')\r\n    } else if (location.pathname.indexOf('withdraw') > -1) {\r\n      setButtonName('회원탈퇴')\r\n    } else {\r\n      setButtonName('로그인')\r\n    }\r\n  }, [location, store.login, history])\r\n\r\n  const changeUsername = (e) => {\r\n    const pattern = /[^a-zA-Z0-9ㄱ-ㅎㅏ-ㅣ가-힣_]/g\r\n    const value = (e.target.value = e.target.value.replace(/\\s/g, '_').replace(pattern, ''))\r\n    if (value.length < 3) {\r\n      //3글자 이상\r\n      setCheckUsername('- 3자 이상 입력해주세요')\r\n    } else if (value.length > 20) {\r\n      //20글자 이하\r\n      setCheckUsername('- 20자 이하로 입력해주세요')\r\n    } else {\r\n      setCheckUsername('')\r\n    }\r\n  }\r\n  const changePassword = (e) => {\r\n    const { value } = e.target\r\n    const passwordConfirm = document.querySelector('[name=passwordConfirm]')\r\n\r\n    //비밀번호가 변경되면 비밀번호 확인은 초기화\r\n    if (passwordConfirm) {\r\n      passwordConfirm.value = ''\r\n      setCheckPasswordConfirm('')\r\n    }\r\n\r\n    if (value.length < 6) {\r\n      //6글자 이상\r\n      setCheckPassword('- 6자 이상 입력해주세요')\r\n    } else if (value.length > 20) {\r\n      //20글자 이하\r\n      setCheckPassword('- 20자 이하로 입력해주세요')\r\n    } else {\r\n      setCheckPassword('')\r\n    }\r\n  }\r\n  const changePasswordConfirm = (e) => {\r\n    const { value } = e.target\r\n    const password = document.querySelector('[name=password]')\r\n\r\n    if (value !== password.value && value.length >= 1) {\r\n      //password와 같으면\r\n      setCheckPasswordConfirm('- 비밀번호가 일치하지 않습니다')\r\n    } else {\r\n      setCheckPasswordConfirm('')\r\n    }\r\n  }\r\n  const clickButton = (e) => {\r\n    e.preventDefault()\r\n    let url = process.env.REACT_APP_URL + '/auth'\r\n    //url = process.env.REACT_APP_LOCAL_URL+'/auth'\r\n\r\n    const pattern = /[^a-zA-Z0-9가-힣_]/g\r\n    let username = document.querySelector('[name=username]')\r\n    if (username) username = username.value = username.value.replace(pattern, '')\r\n    let password = document.querySelector('[name=password]')\r\n    if (password) password = password.value\r\n\r\n    if (checkUsername === '' && password.length >= 1 && checkPassword === '' && checkPasswordConfirm === '') {\r\n      //입력폼에 이상이 없으면 fetch submit\r\n      if (buttonName === '회원가입') {\r\n        url += '/register'\r\n        fetch(url, {\r\n          mode: 'cors',\r\n          method: 'POST',\r\n          credentials: 'include',\r\n          headers: { 'Content-Type': 'application/json' },\r\n          body: JSON.stringify({\r\n            username: username,\r\n            password: password,\r\n          }),\r\n        })\r\n          .then((res) => {\r\n            if (res.status === 200 || res.status === 201) {\r\n              //성공하면 아래 then 작동\r\n              res.json().then((res) => {\r\n                alert(res.username + '님의 회원가입에 성공했습니다 😄')\r\n                history.go(-1)\r\n              })\r\n            } else {\r\n              let message = '회원가입에 실패했습니다 :('\r\n              if (res.status === 409) {\r\n                message += '\\n이미 존재하는 아이디입니다.'\r\n              }\r\n              if (res.status === 400) {\r\n                message += '\\n아이디나 비밀번호를 확인해주세요.'\r\n              }\r\n              alert(message)\r\n            }\r\n          })\r\n          .catch((e) => console.error(e))\r\n      } else if (buttonName === '회원탈퇴') {\r\n        if (window.confirm('계정 탈퇴시 복구할 수 없습니다. 정말로 탈퇴하시겠습니까?')) {\r\n          url += '/withdraw'\r\n          fetch(url, {\r\n            mode: 'cors',\r\n            method: 'DELETE',\r\n            credentials: 'include',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify({\r\n              username: store.login.username,\r\n              password: password,\r\n            }),\r\n          })\r\n            .then((res) => {\r\n              if (res.status === 200) {\r\n                //삭제하면 Ok\r\n                alert('계정이 탈퇴되었습니다. 또 들러 주세요 😄')\r\n                history.push('/')\r\n              } else {\r\n                let message = '탈퇴에 실패했습니다 :('\r\n                if (res.status === 204) {\r\n                  message += '\\n존재하지 않는 아이디입니다.'\r\n                }\r\n                if (res.status === 401) {\r\n                  message += '\\n비밀번호를 확인해주세요.'\r\n                }\r\n                alert(message)\r\n              }\r\n            })\r\n            .catch((e) => console.error(e))\r\n        }\r\n      } else {\r\n        //로그인\r\n        url += '/login'\r\n        fetch(url, {\r\n          mode: 'cors',\r\n          method: 'POST',\r\n          credentials: 'include',\r\n          headers: { 'Content-Type': 'application/json' },\r\n          body: JSON.stringify({\r\n            username: username,\r\n            password: password,\r\n          }),\r\n        })\r\n          .then((res) => {\r\n            if (res.status === 200 || res.status === 201) {\r\n              //성공하면 아래 then 작동\r\n              res.json().then((res) => {\r\n                store.setLogin(res)\r\n                alert(res.username + '님 환영합니다 😄')\r\n                history.go(-1)\r\n              })\r\n            } else {\r\n              let message = '로그인에 실패했습니다 :('\r\n              if (res.status === 401) {\r\n                message += '\\n로그인 정보를 확인해주세요.'\r\n              }\r\n              alert(message)\r\n            }\r\n          })\r\n          .catch((e) => console.error(e))\r\n      }\r\n    } else {\r\n      alert('입력 정보를 확인해주세요.')\r\n    }\r\n  }\r\n\r\n  const naverLogin = (e) => {\r\n    const naverIdLogin = document.querySelector('#naverIdLogin')\r\n    if (naverIdLogin) {\r\n      console.log('네이버 로그인 요청')\r\n      naverIdLogin.firstChild.click()\r\n    }\r\n  }\r\n  const kakaoLogin = (e) => {\r\n    const kakaoLogin = document.querySelector('#kakaoLogin')\r\n    if (kakaoLogin) {\r\n      console.log('카카오 로그인 요청')\r\n      kakaoLogin.click()\r\n    }\r\n  }\r\n  const googleLogin = (e) => {\r\n    const googleLogin = document.querySelector('#googleLogin')\r\n    if (googleLogin) {\r\n      console.log('구글 로그인 요청')\r\n      googleLogin.firstChild.firstChild.click()\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div id=\"background\">\r\n      <div id=\"loginWrapper\">\r\n        <Meta\r\n          data={{\r\n            title: '임기의 코딩 블로그',\r\n            description: '네이버, 카카오, 구글 계정으로 로그인 해보세요!',\r\n            canonical: `login`,\r\n          }}\r\n        />\r\n        {location.pathname.indexOf('/loginStatus') > -1 ? (\r\n          <>\r\n            {store.login ? (\r\n              <div className=\"center\">\r\n                {store.login.username}님은 현재 <span style={{ color: 'green' }}>로그인</span> 되어있습니다 😄\r\n                <br />\r\n                <span style={{ fontSize: '0.8rem' }}>(로그인은 최대 일주일간 유지됩니다.)</span>\r\n              </div>\r\n            ) : (\r\n              <div className=\"login center\">\r\n                재 로그인이 필요합니다\r\n                <Link to=\"/login\" className=\"loginLink\">\r\n                  로그인\r\n                </Link>\r\n              </div>\r\n            )}\r\n          </>\r\n        ) : (\r\n          <>\r\n            {(buttonName === '로그인' || buttonName === '회원가입') && (\r\n              <div className=\"oAuth\">\r\n                <div className=\"login\">\r\n                  {/* 네이버 로그인 */}\r\n                  <div className=\"naverLogin no-drag\" onClick={naverLogin}>\r\n                    <img alt=\"\" src={process.env.PUBLIC_URL + '/images/naver.png'} />\r\n                    Log in with Naver\r\n                  </div>\r\n                  {/* 카카오 로그인 */}\r\n                  <div className=\"naverLogin kakaoLogin no-drag\" onClick={kakaoLogin}>\r\n                    <img alt=\"\" src={process.env.PUBLIC_URL + '/images/kakao.png'} />\r\n                    Log in with Kakao\r\n                  </div>\r\n                  {/* 구글 로그인 */}\r\n                  <div className=\"naverLogin googleLogin no-drag\" onClick={googleLogin}>\r\n                    <img alt=\"\" src={process.env.PUBLIC_URL + '/images/google.png'} />\r\n                    Log in with Google\r\n                  </div>\r\n                  <div className=\"googleWarning\">\r\n                    구글 로그인은 <span style={{ color: 'red' }}>인앱 브라우저(카카오톡 등)</span>에서 지원되지 않습니다. 오류 발생 시 더보기(\r\n                    <MoreVertIcon />, <img alt=\"\" src={process.env.PUBLIC_URL + '/images/share.png'} />\r\n                    )를 눌러서 <span>다른 브라우저(Chrome, Safari 등)</span>에서 실행해주세요.\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            )}\r\n            <form className=\"login\">\r\n              <div className=\"text\">아이디</div>\r\n              {buttonName === '회원탈퇴' ? <div>{store.login.username}</div> : <input name=\"username\" onChange={changeUsername} />}\r\n\r\n              <div className=\"check\">{checkUsername}</div>\r\n\r\n              <div className=\"text\">비밀번호</div>\r\n              <input name=\"password\" type=\"password\" onChange={changePassword} autoComplete=\"currnet-password\" />\r\n              <div className=\"check\">{checkPassword}</div>\r\n\r\n              {buttonName === '회원가입' && (\r\n                <>\r\n                  <div className=\"text\">비밀번호 확인</div>\r\n                  <input name=\"passwordConfirm\" type=\"password\" onChange={changePasswordConfirm} autoComplete=\"currnet-password\" />\r\n                  <div className=\"check\" id=\"checkPasswordConfirm\">\r\n                    {checkPasswordConfirm}\r\n                  </div>\r\n                </>\r\n              )}\r\n\r\n              {/* 버튼 */}\r\n              {buttonName === '회원탈퇴' ? (\r\n                <Button variant=\"contained\" color=\"primary\" style={{ background: 'red' }} onClick={clickButton}>\r\n                  {buttonName}\r\n                </Button>\r\n              ) : (\r\n                <Button variant=\"contained\" color=\"primary\" onClick={clickButton}>\r\n                  {buttonName}\r\n                </Button>\r\n              )}\r\n\r\n              {/* 로그인 or 회원가입 */}\r\n              {buttonName === '로그인' && (\r\n                <div className=\"loginLink\">\r\n                  <Link to=\"/register\">회원가입</Link>\r\n                </div>\r\n              )}\r\n              {buttonName === '회원가입' && (\r\n                <div className=\"loginLink\">\r\n                  <Link to=\"/login\" className=\"loginLink\">\r\n                    로그인\r\n                  </Link>\r\n                </div>\r\n              )}\r\n\r\n              {browser === 'safari' && (\r\n                <div className=\"text\" style={{ fontSize: '0.8rem', textAlign: 'center' }}>\r\n                  (Safari의 설정을 변경해야 로그인이 가능합니다.)\r\n                  <br />\r\n                  설정 → Safari → 개인 정보 보호 및 보안 → <br />\r\n                  크로스 사이트 추적방지 OFF, 모든 쿠키 차단 OFF)\r\n                </div>\r\n              )}\r\n            </form>\r\n          </>\r\n        )}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\nexport default React.memo(Login)\r\n","/* eslint-disable jsx-a11y/accessible-emoji */\r\nimport React, { useEffect, useState } from 'react'\r\nimport './Quill.scss'\r\nimport 'quill/dist/quill.snow.css'\r\nimport { useQuill } from 'react-quilljs'\r\nimport imageCompress from 'quill-image-compress'\r\nimport { AppContext } from '../App'\r\nimport Axios from 'axios'\r\nimport Emoji from './Emoji'\r\n\r\nfunction Quill({ match, location, history }) {\r\n  const store = React.useContext(AppContext)\r\n  let { postId } = match.params\r\n  const [post, setPost] = useState()\r\n  const [ready, setReady] = useState()\r\n  const [subMenus, setSubMenus] = useState()\r\n\r\n  const modules = {\r\n    toolbar: [\r\n      ['bold', 'italic', 'underline', 'strike'],\r\n      [{ size: ['small', false, 'large', 'huge'] }, { header: 1 }, { header: 2 }],\r\n      [{ align: [] }],\r\n      [{ color: [] }, { background: [] }],\r\n      [{ indent: '-1' }, { indent: '+1' }],\r\n      [{ list: 'ordered' }, { list: 'bullet' }],\r\n      ['code-block', 'blockquote'],\r\n      ['link', 'image', 'video'],\r\n      ['clean'],\r\n    ],\r\n    syntax: true,\r\n    imageCompress: {\r\n      quality: 0.7, // default\r\n      maxWidth: 1000, // default 1000\r\n      maxHeight: 1000, // default 1000\r\n      imageType: 'image/jpeg', // default\r\n      debug: true, // default\r\n    },\r\n  }\r\n  const formats = ['bold', 'italic', 'underline', 'strike', 'code-block', 'blockquote', 'size', 'header', 'align', 'color', 'background', 'indent', 'list', 'link', 'image', 'video', 'clean']\r\n\r\n  const { quill, quillRef, Quill } = useQuill({ modules, formats })\r\n  if (Quill && !quill) {\r\n    // For execute this line only once.\r\n    Quill.register('modules/imageCompress', imageCompress)\r\n  }\r\n\r\n  useEffect(() => {\r\n    setReady(false)\r\n    //포스트 불러오기 axios\r\n    if (postId !== undefined && Number(postId) >= 1 && quill) {\r\n      //postId가 없으면 포스트 내용 가져오지 않기\r\n      let url = process.env.REACT_APP_URL + '/posts/' + postId\r\n      //url = process.env.REACT_APP_LOCAL_URL+'/posts/' + postId\r\n\r\n      Axios.get(url, {\r\n        withCredentials: true,\r\n      }) //포스트 불러오기\r\n        .then((res) => {\r\n          let title = document.querySelector('[name=title]')\r\n          title.value = res.data.title\r\n\r\n          const tags = document.querySelectorAll('[type=radio]')\r\n          for (let i of tags) {\r\n            //체크 초기화\r\n            i.checked = false\r\n          }\r\n          if (res.data.tags) {\r\n            //체크박스 체크\r\n            const mainMenu = document.getElementById(res.data.tags[0])\r\n            if (mainMenu) mainMenu.checked = true\r\n            for (let i of store.menus) {\r\n              if (i.name === res.data.tags[0]) {\r\n                //선택된 메인메뉴의 서브메뉴를 그리기\r\n                setSubMenus(i.subMenus)\r\n              }\r\n            }\r\n          }\r\n\r\n          //포스트바디 가져오기\r\n          url = process.env.REACT_APP_URL + '/posts/postBody/' + postId\r\n          //url = process.env.REACT_APP_LOCAL_URL + '/posts/postBody/' + postId\r\n          Axios.get(url)\r\n            .then((res2) => {\r\n              if (typeof res2.data.body === 'string') quill.setText(res2.data.body)\r\n              //body가 string이면 setText\r\n              else quill.setContents(res2.data.body) //body가 string이 아니면 setContents : Delta\r\n              setPost({\r\n                ...res.data,\r\n                body: res2.data.body,\r\n              })\r\n            })\r\n            .catch((e) => {\r\n              alert(e)\r\n              setReady(true)\r\n            }) //실패\r\n        })\r\n        .catch((e) => {\r\n          alert(e)\r\n          setReady(true)\r\n        }) //실패\r\n    } else {\r\n      setReady(true)\r\n    }\r\n  }, [location, quill, postId, store.menus])\r\n\r\n  useEffect(() => {\r\n    if (subMenus && post) {\r\n      const subMenu = document.getElementById(post.tags[1])\r\n      if (subMenu) subMenu.checked = true\r\n    }\r\n    const newSubMenu = document.querySelector('[name=newSubMenu]')\r\n    if (newSubMenu) newSubMenu.value = ''\r\n  }, [subMenus, post])\r\n\r\n  useEffect(() => {\r\n    store.setReady(false)\r\n    if (post || ready) {\r\n      store.setReady(true)\r\n    }\r\n  })\r\n\r\n  //글 작성 or 수정\r\n  const clickPost = (e) => {\r\n    if (!store.login || (store.login && store.login.username !== 'imki123')) {\r\n      alert('글 작성은 블로그 주인만 가능합니다 ^^;')\r\n      return\r\n    }\r\n    if (!window.confirm('글을 게시하시겠습니까?')) {\r\n      return\r\n    }\r\n    //제목, 내용, 태그가 있는지 검사\r\n    let title = document.querySelector('[name=title]')\r\n    const content = quill.getContents()\r\n    const text = quill.getText()\r\n    const mainMenu = document.querySelector('[name=mainMenu]:checked')\r\n    let tags = []\r\n    const subMenu = document.querySelector('[name=subMenu]:checked')\r\n    const newMainMenu = document.querySelector('[name=newMainMenu]')\r\n    const newSubMenu = document.querySelector('[name=newSubMenu]')\r\n\r\n    if (mainMenu) {\r\n      tags[0] = mainMenu.value\r\n    }\r\n    if (newMainMenu.value !== '') {\r\n      tags[0] = newMainMenu.value\r\n    }\r\n    if (subMenu) {\r\n      if (subMenu.value !== '') tags[1] = subMenu.value //체크 된 서브메뉴 추가\r\n    }\r\n    if (newSubMenu.value !== '') {\r\n      tags[1] = newSubMenu.value\r\n    }\r\n\r\n    if (title.value.length === 0) {\r\n      alert('제목을 입력해주세요.')\r\n      return\r\n    } else if (quill.getLength() === 1) {\r\n      alert('내용을 입력해주세요.')\r\n      return\r\n    } else if (tags.length < 1 && newMainMenu.value === '') {\r\n      alert('메인메뉴를 1개 선택해주세요.')\r\n      return\r\n    }\r\n\r\n    //url에 POST 또는 PATCH 요청\r\n    let url = process.env.REACT_APP_URL + '/posts'\r\n    //url = process.env.REACT_APP_LOCAL_URL + '/posts'\r\n    let method = 'POST',\r\n      message = '글 작성 성공'\r\n    if (e.target.id === 'PATCH') {\r\n      if (postId !== undefined && Number(postId) >= 1) {\r\n        url += '/' + postId\r\n        method = 'PATCH'\r\n        message = '글 수정 성공'\r\n      } else {\r\n        console.log('postId 비정상, 글 수정 실패')\r\n        return\r\n      }\r\n    }\r\n\r\n    Axios(url, {\r\n      //포스트 작성, 수정 (최대 10mb. koa-bodyparser에서 설정.)\r\n      method: method,\r\n      withCredentials: true, //CORS\r\n      data: {\r\n        title: title.value,\r\n        body: content,\r\n        text: text,\r\n        tags: tags,\r\n      },\r\n    })\r\n      .then((res) => {\r\n        alert(message) //성공\r\n        postId = res.data.postId\r\n        if (postId > 1) {\r\n          history.push(`/posts/${postId}`) //수정 성공하면 해당 글로 이동함\r\n        } else {\r\n          history.push(`/posts/1`) //인사말은 홈으로 이동\r\n        }\r\n      })\r\n      .catch((e) => alert(e)) //실패\r\n  }\r\n\r\n  //메인메뉴 추가시 라디오박스 체크 해제, 띄어쓰기를 _로 변경\r\n  const changeMainMenu = (e) => {\r\n    if (store.menus) {\r\n      for (let i of store.menus) {\r\n        if (i.name === e.target.value) {\r\n          setSubMenus(i.subMenus)\r\n        }\r\n      }\r\n    }\r\n\r\n    if (e.target.type !== 'radio') {\r\n      //인풋박스 입력하면 라디오 체크 해제\r\n      e.target.value = e.target.value.replace(/\\s/g, '_')\r\n      const mainMenu = document.querySelector('[name=mainMenu]:checked')\r\n      if (mainMenu) mainMenu.checked = false\r\n    }\r\n  }\r\n  //서브메뉴 추가시 라디오박스 체크 해제, 띄어쓰기를 _로 변경\r\n  const changeSubMenu = (e) => {\r\n    if (e.target.type !== 'radio') {\r\n      //인풋박스 입력하면 라디오 체크 해제\r\n      e.target.value = e.target.value.replace(/\\s/g, '_')\r\n      const subMenu = document.querySelector('[name=subMenu]:checked')\r\n      if (subMenu) subMenu.checked = false\r\n    } else {\r\n      const newSubMenu = document.querySelector('[name=newSubMenu]')\r\n      if (newSubMenu) newSubMenu.value = ''\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"quill\">\r\n      <div className=\"quillTitle\">\r\n        <input name=\"title\" placeholder=\"제목\" />\r\n      </div>\r\n      <div id=\"editor\">\r\n        <div ref={quillRef} />\r\n        <div id=\"tags\">\r\n          <div id=\"tagsTitle\">\r\n            tags\r\n            {postId !== undefined && Number(postId) >= 1 ? (\r\n              <button className=\"editorButton no-drag\" onClick={clickPost} id=\"PATCH\">\r\n                글 수정\r\n              </button>\r\n            ) : (\r\n              <button className=\"editorButton no-drag\" onClick={clickPost}>\r\n                새글 작성\r\n              </button>\r\n            )}\r\n            <Emoji emojis={'😄,🤣,🥰,😍,😝,😭,👍,🐕,🐈,☀,🌙,⭐,☁,🌧,💧,♥,❤,💕'} />\r\n          </div>\r\n          <div>\r\n            메인메뉴:\r\n            {store.menus &&\r\n              store.menus.map((i) => (\r\n                <label key={i.name}>\r\n                  <input type=\"radio\" name=\"mainMenu\" value={i.name} id={i.name} onClick={changeMainMenu} />\r\n                  {i.name}\r\n                </label>\r\n              ))}\r\n            <input name=\"newMainMenu\" placeholder=\"메인메뉴 추가\" onChange={changeMainMenu} autoComplete=\"off\"></input>\r\n          </div>\r\n          <div>\r\n            서브메뉴:\r\n            <label>\r\n              <input type=\"radio\" name=\"subMenu\" value=\"\" onClick={changeSubMenu} /> 선택안함\r\n            </label>\r\n            {subMenus &&\r\n              subMenus.map((i) => (\r\n                <label key={i.name}>\r\n                  <input type=\"radio\" name=\"subMenu\" value={i.name} id={i.name} onClick={changeSubMenu} /> {i.name}\r\n                </label>\r\n              ))}\r\n            <input name=\"newSubMenu\" placeholder=\"서브메뉴 추가\" autoComplete=\"off\" onChange={changeSubMenu}></input>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\nexport default React.memo(Quill)\r\n","import React, { useEffect } from 'react'\r\nimport './Paging.scss'\r\nimport { NavLink, useLocation } from 'react-router-dom'\r\nimport queryString from 'query-string'\r\n\r\nfunction Paging(props) {\r\n  const { postCount } = props\r\n  const location = useLocation()\r\n  const search = queryString.parse(location.search)\r\n  let paging = null\r\n  const pages = []\r\n  let page = 1\r\n  if (postCount) {\r\n    page = parseInt(search.page) || 1 //페이지를 숫자로 변환. 없다면 1\r\n    if (page < 1) page = 1\r\n    const startPost = postCount - (page - 1) * 10\r\n    paging = {\r\n      page: page,\r\n      lastPage: Math.ceil(postCount / 10),\r\n      postCount: postCount,\r\n      startPost: startPost,\r\n    }\r\n\r\n    for (let i = 0; i < paging.lastPage; i++) {\r\n      pages.push(i + 1)\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    const links = document.querySelectorAll('.paging a')\r\n    for (let i = 0; i < links.length; i++) {\r\n      if (parseInt(links[i].innerHTML) === page) {\r\n        links[i].className = 'activePage'\r\n      } else {\r\n        links[i].className = 'inactivePage'\r\n      }\r\n    }\r\n  })\r\n\r\n  return (\r\n    <div className=\"paging\">\r\n      {pages.map((p, idx) => (\r\n        <NavLink path={location.pathname} to={`${location.pathname}?page=${p}`} className=\"inactivePage\" key={idx}>\r\n          {p}\r\n        </NavLink>\r\n      ))}\r\n    </div>\r\n  )\r\n}\r\nexport default React.memo(Paging)\r\n","import Axios from 'axios'\r\nimport React, { useEffect, useState } from 'react'\r\nimport { AppContext } from '../App'\r\nimport Paging from './Paging'\r\nimport PostList from './PostList'\r\n\r\nimport Meta from './Meta'\r\nimport queryString from 'query-string'\r\n\r\nfunction Tags({ match, location, history }) {\r\n  const store = React.useContext(AppContext)\r\n  const { tag } = match.params\r\n  const [lists, setLists] = useState([])\r\n  const [titles, setTitles] = useState('')\r\n  const [postCount, setPostCount] = useState(0)\r\n  const [page, setPage] = useState(1)\r\n  useEffect(() => {\r\n    setLists([])\r\n    const search = queryString.parse(location.search)\r\n    let pageNum = parseInt(search.page) || 1 //페이지를 숫자로 변환. 없다면 1\r\n    if (pageNum < 1) pageNum = 1\r\n    setPage(pageNum)\r\n\r\n    let url = process.env.REACT_APP_URL + '/posts/tag/' + tag + location.search\r\n    //url = process.env.REACT_APP_LOCAL_URL + '/posts/tag/' + tag + location.search\r\n\r\n    Axios.get(url, {\r\n      withCredentials: true,\r\n    })\r\n      .then((res) => {\r\n        if (res.data.list.length < 1) {\r\n          alert('찾으시는 페이지가 없습니다.')\r\n          history.go(-1)\r\n        } else {\r\n          setLists(res.data.list)\r\n          let tempTitles = ''\r\n          for (let i of res.data.list) {\r\n            tempTitles += ' ' + i.title\r\n          }\r\n          setTitles(tempTitles)\r\n          setPostCount(res.data.postCount)\r\n        }\r\n      })\r\n      .catch((e) => console.log(e)) //실패\r\n  }, [tag, location, history])\r\n\r\n  useEffect(() => {\r\n    store.setReady(false)\r\n    if (lists) {\r\n      store.setReady(true)\r\n    }\r\n  })\r\n\r\n  return (\r\n    <div className=\"postListWrapper\">\r\n      <Meta data={{ title: tag + ' 목록', description: titles, canonical: `tags/${tag}` }} />\r\n      <div className=\"postListTitle\">{tag.substring(0, 1).toUpperCase() + tag.substring(1) + ' 목록'}</div>\r\n      {lists && lists.map((i, idx) => <PostList no={postCount - idx - (page - 1) * 10} list={i} key={i.postId} />)}\r\n      {<Paging postCount={postCount} />}\r\n    </div>\r\n  )\r\n}\r\nexport default React.memo(Tags)\r\n","import React, { useEffect } from 'react'\r\nimport AddCircleOutlineIcon from '@material-ui/icons/AddCircleOutline'\r\nimport ArrowUpwardIcon from '@material-ui/icons/ArrowUpward'\r\nimport './Content.scss'\r\nimport { Link, Route, useLocation, Switch, useHistory } from 'react-router-dom'\r\nimport { AppContext } from '../App'\r\n\r\nimport Post from './Post'\r\nimport NotFoundPage from './NotFoundPage'\r\nimport Login from './Login'\r\nimport Quill from './Quill'\r\nimport Tags from './Tags'\r\nimport CommentLists from './CommentLists'\r\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack'\r\nimport MenuIcon from '@material-ui/icons/Menu'\r\nimport { resizeTextarea, slideMenu } from '../utils/util'\r\n\r\nfunction Content(props) {\r\n  const store = React.useContext(AppContext)\r\n  const location = useLocation() //hash 사용\r\n  const history = useHistory()\r\n\r\n  useEffect(() => {\r\n    const loading = document.querySelector('#loading')\r\n    const views = document.querySelectorAll('.post')\r\n    if (store.ready) {\r\n      if (loading) loading.style.display = 'none'\r\n      if (views) {\r\n        for (let i of views) {\r\n          i.style.display = 'block'\r\n        }\r\n      }\r\n      setTimeout(function () {\r\n        resizeTextarea()\r\n      }, 10)\r\n    } else {\r\n      if (loading) loading.style.display = 'flex'\r\n      if (views) {\r\n        for (let i of views) {\r\n          i.style.display = 'none'\r\n        }\r\n      }\r\n    }\r\n  }, [location.hash, store])\r\n\r\n  const scrollUp = (e) => {\r\n    // content의 스크롤을 가장 위로\r\n    const body = document.body\r\n    let contentScroll = body.scrollTop\r\n    let dif = contentScroll / 50\r\n    const frame = setInterval(function () {\r\n      if (body.scrollTop <= 0) {\r\n        clearInterval(frame)\r\n      } else {\r\n        body.scrollTop -= dif\r\n      }\r\n    }, 10)\r\n  }\r\n\r\n  return (\r\n    <div id=\"content\" className=\"slideMenu\">\r\n      {/* FABs */}\r\n      {store.login && store.login.username === 'imki123' && (\r\n        <Link id=\"postFAB\" className=\"hover FAB\" to=\"/quill\">\r\n          <AddCircleOutlineIcon />\r\n        </Link>\r\n      )}\r\n      <div id=\"scrollFAB\" className=\"hover FAB\" onClick={scrollUp}>\r\n        <ArrowUpwardIcon />\r\n      </div>\r\n      <div\r\n        id=\"backFAB\"\r\n        className=\"hover FAB\"\r\n        onClick={() => {\r\n          history.go(-1)\r\n        }}\r\n      >\r\n        <ArrowBackIcon />\r\n      </div>\r\n      <div id=\"menuFAB\" className=\"hover FAB\" onClick={slideMenu}>\r\n        <MenuIcon />\r\n      </div>\r\n\r\n      {/* 로딩 */}\r\n      <div id=\"loading\">\r\n        <img alt=\"Loading\" src={process.env.PUBLIC_URL + '/images/loading.gif'} />\r\n      </div>\r\n\r\n      <Switch>\r\n        <Route path={['/login', '/register', '/loginStatus', '/withdraw']} component={Login} />\r\n        <Route path=\"/quill/:postId?\" component={Quill} />\r\n        <Route path=\"/tags/:tag\" component={Tags} />\r\n        <Route path=\"/comments\" component={CommentLists} />\r\n        <Route path=\"/\" exact component={Post} />\r\n        <Route path=\"/posts/:postId\" component={Post} />\r\n        <Route path=\"/NotFoundPage\" component={NotFoundPage} />\r\n        <Route path=\"*\" component={NotFoundPage} />\r\n      </Switch>\r\n\r\n      {/* 텍스트 에어리어 높이 조정을 위한 안보이는 가짜 텍스트에어리어 */}\r\n      <textarea disabled id=\"fakeTextarea\" />\r\n    </div>\r\n  )\r\n}\r\nexport default React.memo(Content)\r\n","import React from 'react'\r\nimport './Setting.scss'\r\nimport { Link } from 'react-router-dom'\r\nimport { AppContext } from '../App'\r\nimport { Button } from '@material-ui/core'\r\n\r\nfunction Setting(props) {\r\n  const store = React.useContext(AppContext)\r\n\r\n  const closeSetting = (e) => {\r\n    const settingWrapper = document.querySelector('#settingWrapper')\r\n    e.stopPropagation()\r\n    setTimeout(function () {\r\n      settingWrapper.style.display = 'none'\r\n    }, 200)\r\n  }\r\n\r\n  const logout = (e) => {\r\n    if (window.confirm('로그아웃 하시겠습니까?')) {\r\n      let url = process.env.REACT_APP_URL + '/auth/logout'\r\n      //url = process.env.REACT_APP_LOCAL_URL + '/auth/logout'\r\n\r\n      fetch(url, {\r\n        mode: 'cors',\r\n        method: 'POST',\r\n        credentials: 'include',\r\n      })\r\n        .then((res) => {\r\n          if (res.status === 204) {\r\n            //로그아웃 하면 204\r\n            console.log('로그아웃 성공')\r\n            store.setLogin(false)\r\n\r\n            //유저정보 지우기\r\n            const userinfo = document.querySelector('#userinfo')\r\n            if (userinfo) userinfo.value = ''\r\n\r\n            //네이버 로그아웃\r\n            const naverIdLogout = document.querySelector('#naverIdLogout')\r\n            if (naverIdLogout) naverIdLogout.click()\r\n\r\n            //카카오 로그아웃\r\n            const kakaoLogout = document.querySelector('#kakaoLogout')\r\n            if (kakaoLogout) kakaoLogout.click()\r\n\r\n            //구글 로그아웃\r\n            const googleLogout = document.querySelector('#googleLogout')\r\n            if (googleLogout) googleLogout.click()\r\n          } else {\r\n            console.log('로그아웃 실패')\r\n          }\r\n        })\r\n        .catch((e) => console.error(e))\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div id=\"settingWrapper\" onClick={closeSetting}>\r\n      <div id=\"setting\">\r\n        {store.login ? (\r\n          <Link to=\"/loginStatus\">\r\n            <Button className=\"settingList\">{store.login.username}</Button>\r\n          </Link>\r\n        ) : (\r\n          <Link to=\"/login\">\r\n            <Button className=\"settingList\">로그인</Button>\r\n          </Link>\r\n        )}\r\n        {store.login && (\r\n          <Button onClick={logout} className=\"settingList\">\r\n            로그아웃\r\n          </Button>\r\n        )}\r\n        {!store.login && (\r\n          <Link to=\"/register\">\r\n            <Button className=\"settingList\">회원가입</Button>\r\n          </Link>\r\n        )}\r\n        {store.login && !store.login.oAuth && (\r\n          <Link to=\"/withdraw\">\r\n            <Button className=\"settingList\">회원탈퇴</Button>\r\n          </Link>\r\n        )}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\nexport default React.memo(Setting)\r\n","import React, { createContext, useEffect, useState } from 'react'\r\nimport './App.scss'\r\nimport { useLocation } from 'react-router-dom'\r\n\r\nimport Header from './components/Header'\r\nimport Body from './components/Body'\r\nimport Guide from './components/Guide'\r\nimport Content from './components/Content'\r\nimport Setting from './components/Setting'\r\nimport Axios from 'axios'\r\nimport Meta from './components/Meta'\r\nimport { checkToken, resize, useToggleHeader } from './utils/util'\r\n\r\nconst AppContext = createContext()\r\n\r\nfunction App() {\r\n  const location = useLocation() //페이지 경로 변경 감지\r\n  const [ready, setReady] = useState(false)\r\n  const [login, setLogin] = useState(false)\r\n  const [menus, setMenus] = useState([\r\n    { name: 'home', count: 1, order: 1 },\r\n    { name: 'programming', order: 2 },\r\n    { name: 'article', order: 3 },\r\n  ])\r\n\r\n  //useContext 이용하여 하위 컴포넌트에 상태 전달\r\n  const store = {\r\n    ready,\r\n    setReady,\r\n    login,\r\n    setLogin,\r\n    menus,\r\n    setMenus,\r\n  }\r\n\r\n  // 포스트에서 태그 정보를 가져와서 메뉴에 표시함, Quill의 태그목록에 표시\r\n  useEffect(() => {\r\n    let url = process.env.REACT_APP_URL + '/menus'\r\n    //url = process.env.REACT_APP_LOCAL_URL+'/menus'\r\n\r\n    Axios.get(url, {\r\n      withCredentials: true,\r\n    }) //메뉴 태그 가져오기\r\n      .then((res) => {\r\n        setMenus(res.data)\r\n      })\r\n      .catch((e) => console.log(e)) //실패\r\n  }, [location.pathname])\r\n\r\n  //주소 변경될 때, 토큰 체크하고 포스트 조회하기\r\n  useEffect(() => {\r\n    checkToken(login, setLogin)\r\n  }, [location.pathname, location.search, login])\r\n\r\n  useEffect(() => {\r\n    const editor = document.querySelector('#editor')\r\n    const toolbar = document.querySelector('.ql-toolbar')\r\n\r\n    if (editor && toolbar) {\r\n      editor.style.marginBottom = toolbar.offsetHeight + 10 + 'px'\r\n    }\r\n\r\n    window.addEventListener('resize', resize)\r\n    return () => window.removeEventListener('resize', resize)\r\n  })\r\n\r\n  //스크롤되면 헤더를 감추는 훅\r\n  useToggleHeader()\r\n\r\n  return (\r\n    <AppContext.Provider value={store}>\r\n      <div id=\"app\">\r\n        <Meta\r\n          data={{\r\n            title: '임기의 코딩 블로그',\r\n            description: '주로 Javascript, React, ReactNative, Node 관련 글을 포스팅합니다. 감사합니다. 😄',\r\n            image: process.env.PUBLIC_URL + '/images/imcat_800x400.png',\r\n          }}\r\n        />\r\n        <Header />\r\n        <Setting />\r\n        <Body>\r\n          <Guide />\r\n          <Content />\r\n        </Body>\r\n      </div>\r\n    </AppContext.Provider>\r\n  )\r\n}\r\nexport { AppContext }\r\nexport default React.memo(App)\r\n","import React from 'react'\r\nimport ReactDOM, { hydrate } from 'react-dom'\r\nimport { BrowserRouter } from 'react-router-dom'\r\nimport App from './App'\r\n\r\nconst rootElement = document.getElementById('root')\r\n\r\nif (rootElement.hasChildNodes()) {\r\n  hydrate(\r\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\r\n      <App />\r\n    </BrowserRouter>,\r\n    rootElement,\r\n  )\r\n} else {\r\n  ReactDOM.render(\r\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\r\n      <App />\r\n    </BrowserRouter>,\r\n    document.getElementById('root'),\r\n  )\r\n}\r\n"],"sourceRoot":""}