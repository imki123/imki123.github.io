{"version":3,"sources":["components/Header.js","components/Body.js","components/Menus.js","components/Guide.js","components/Comment.js","components/Meta.js","components/PostList.js","components/Recents.js","components/CommentLists.js","components/Post.js","components/NotFoundPage.js","components/Login.js","components/Quill.js","components/Paging.js","components/Tags.js","components/Content.js","components/Setting.js","App.js","index.js"],"names":["React","memo","props","store","useContext","AppContext","id","className","onClick","slideMenu","alt","src","to","closeMenuMobile","setting","document","querySelector","style","display","login","imageUrl","onError","e","target","Math","floor","random","children","menus","map","i","key","name","exact","activeClassName","substring","toUpperCase","count","subMenus","length","j","title","href","preventDefault","window","open","comment","post","refreshComment","useState","setImageUrl","update","date","publishedDate","replace","useEffect","postId","commentId","value","content","username","Axios","process","withCredentials","data","then","res","catch","fontWeight","updated","readOnly","onChange","resizeTextarea","textarea","confirm","classList","remove","url","patch","console","log","alert","add","focus","background","locales","en","ko","Meta","lang","locale","description","image","undefined","canonical","type","width","height","Helmet","titleTemplate","rel","itemprop","property","hreflang","list","no","text","idx","match","location","history","params","setPost","postBody","setPostBody","comments","setComments","commentCnt","setCommentCnt","recents","setRecents","popular","setPopular","recentComments","setRecentComments","useQuill","modules","syntax","formats","quill","quillRef","get","go","body","hash","setTimeout","elem","frame","contentScroll","scrollTop","elemTop","offsetTop","dif","clearInterval","setInterval","scrollHeight","clientHeight","pathname","setContents","setText","setReady","func","svg","discription","tags","ref","delete","push","placeholder","useHistory","clientId","indexOf","browser","agent","navigator","userAgent","toLowerCase","checkUsername","setCheckUsername","checkPassword","setCheckPassword","checkPasswordConfirm","setCheckPasswordConfirm","buttonName","setButtonName","clickButton","password","fetch","mode","method","credentials","headers","JSON","stringify","status","json","message","error","setLogin","path","buttonText","onSuccess","email","profileObj","onFailure","cookiePolicy","isSignedIn","passwordConfirm","autoComplete","fontSize","textAlign","color","ready","setSubMenus","toolbar","size","header","align","indent","imageCompress","quality","maxWidth","maxHeight","imageType","debug","Quill","register","Number","querySelectorAll","checked","mainMenu","getElementById","res2","subMenu","newSubMenu","clickPost","getContents","getText","newMainMenu","getLength","editor","marginBottom","removeEventListener","addEventListener","changeMainMenu","changeSubMenu","postCount","useLocation","search","queryString","parse","paging","pages","page","startPost","lastPage","ceil","links","innerHTML","p","tag","lists","setLists","resize","loading","view","component","Login","Tags","Post","NotFoundPage","disabled","settingWrapper","stopPropagation","oAuth","createContext","order","setMenus","checkToken","fake","textareas","clientWidth","guideWrapper","left","parentNode","Provider","rootElement","hasChildNodes","hydrate","ReactDOM","render","basename"],"mappings":"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","file":"static/js/main.4429e1e8.chunk.js","sourcesContent":["import React from 'react'\r\nimport './Header.css'\r\nimport { Link } from 'react-router-dom'\r\nimport { AppContext } from '../App'\r\n\r\nfunction Header(props) {\r\n\tconst store = React.useContext(AppContext)\r\n\r\n\tconst toggleSetting = () => {\r\n\t\tconst setting = document.querySelector('#settingWrapper')\r\n\t\tif (setting) {\r\n\t\t\tif (setting.style.display === 'block') {\r\n\t\t\t\tsetting.style.display = 'none'\r\n\t\t\t} else {\r\n\t\t\t\tsetting.style.display = 'block'\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div id=\"headerWrapper\">\r\n\t\t\t<div id=\"header\">\r\n\t\t\t\t<div className=\"hover\" onClick={store.slideMenu}>\r\n\t\t\t\t\t<img id=\"menu\" alt=\"MENU\" src={process.env.PUBLIC_URL + '/images/guide_icon.png'} />\r\n\t\t\t\t</div>\r\n\t\t\t\t<Link to=\"/\">\r\n\t\t\t\t\t<div id=\"title\" className=\"hover\" onClick={store.closeMenuMobile}>\r\n\t\t\t\t\t\t<img id=\"logo\" alt=\"logo\" src={process.env.PUBLIC_URL + '/images/imcat_64.png'} />\r\n\t\t\t\t\t\t임기의 코딩 블로그 :D\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</Link>\r\n\t\t\t\t<div className=\"hover\" onClick={toggleSetting}>\r\n\t\t\t\t\t{!store.login ? (\r\n\t\t\t\t\t\t<img className=\"profile\" alt=\"PROFILE\" src={process.env.PUBLIC_URL + '/images/noavatar.png'} />\r\n\t\t\t\t\t) : (\r\n\t\t\t\t\t\t<img\r\n\t\t\t\t\t\t\tclassName=\"profile\"\r\n\t\t\t\t\t\t\talt=\"PROFILE\"\r\n\t\t\t\t\t\t\tsrc={store.login.imageUrl}\r\n\t\t\t\t\t\t\tonError={(e) => {\r\n\t\t\t\t\t\t\t\te.target.src = process.env.PUBLIC_URL + '/images/dog' + (Math.floor(Math.random() * (3 - 1 + 1)) + 1) + '.png'\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\nexport default React.memo(Header)\r\n","import React from 'react'\r\nimport './Body.css'\r\n\r\nfunction Body(props) {\r\n\treturn(\r\n        <div id=\"body\">\r\n            {props.children}\r\n        </div>\r\n    ) \r\n}\r\nexport default React.memo(Body)\r\n","import React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\nimport './Menus.css'\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore'\r\n\r\nfunction Menus(props) {\r\n\tconst { menus } = props\r\n\r\n\t//menu정보를 받아서 링크 메뉴 생성하기\r\n\t//menu { name: string, cnt: number, Object{ name: string, cnt: number}, Object{...}}\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{menus &&\r\n\t\t\t\tmenus.map((i) => (\r\n\t\t\t\t\t<div key={i.name}>\r\n\t\t\t\t\t\t<NavLink exact to={i.name === 'home' ? '/' : `/tags/${i.name}`} className=\"list\" activeClassName=\"activeList\">\r\n\t\t\t\t\t\t\t<span className=\"menuName\">{i.name.substring(0, 1).toUpperCase() + i.name.substring(1)}</span>\r\n\t\t\t\t\t\t\t<span className=\"menuOptions\">\r\n\t\t\t\t\t\t\t\t<span className=\"menuCnt\">{i.count}</span>\r\n\t\t\t\t\t\t\t\t<span className=\"menuExpandIcon\">{i.subMenus && i.subMenus.length >= 1 && <ExpandMoreIcon />}</span>\r\n\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t</NavLink>\r\n\t\t\t\t\t\t{i.subMenus && i.subMenus.length > 0 && i.subMenus.map((j) => (\r\n\t\t\t\t\t\t\t<NavLink exact to={`/tags/${j.name}`} className=\"list subList\" activeClassName=\"activeList\" key={j.name}>\r\n                            <span className=\"menuName\">{j.name.substring(0, 1).toUpperCase() + j.name.substring(1)}</span>\r\n                            <span className=\"menuOptions\">\r\n                                <span className=\"menuCnt\">{j.count}</span>\r\n                            </span>\r\n                        </NavLink>\r\n\t\t\t\t\t\t))}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t))}\r\n\t\t</>\r\n\t)\r\n}\r\nexport default React.memo(Menus)\r\n","import React from 'react'\r\nimport './Guide.css'\r\nimport { AppContext } from '../App'\r\nimport Menus from './Menus'\r\nimport OpenInNewIcon from '@material-ui/icons/OpenInNew'\r\n\r\nfunction Guide(props) {\r\n\tconst store = React.useContext(AppContext)\r\n\r\n\treturn (\r\n\t\t<div id=\"guideBack\" onClick={store.closeMenuMobile}>\r\n\t\t\t<div id=\"guideWrapper\" className=\"slideMenu\">\r\n\t\t\t\t<div id=\"avatar\">\r\n\t\t\t\t\t<img alt=\"avatar\" src={process.env.PUBLIC_URL + '/images/avatar.png'} title=\"Hello :D\" />\r\n\t\t\t\t\t<div id=\"name\">Im kiyoung</div>\r\n\t\t\t\t\t<div id=\"nickName\">imki123</div>\r\n\t\t\t\t\t<div id=\"github\">\r\n\t\t\t\t\t\t<a href=\"https://github.com/imki123\">\r\n\t\t\t\t\t\t\t<img alt=\"github\" src={process.env.PUBLIC_URL + '/images/GitHub-Mark-32px.png'} /> <span>https://github.com/imki123</span>\r\n\t\t\t\t\t\t</a>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div id=\"introduction\">A web programmer who dreams of being a wise developer.</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"menus\">\r\n\t\t\t\t\t<Menus menus={store.menus} />\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"menus\">\r\n\t\t\t\t\t<a href=\"https://imki123.github.io/catbook\" className=\"list\"\r\n                        onClick={e => {e.preventDefault(); window.open(\"https://imki123.github.io/catbook\")}}>\r\n\t\t\t\t\t\t<div className=\"menuLink\">\r\n\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t<img alt=\"catbook\" src={process.env.PUBLIC_URL + '/images/catbook_64.png'} />\r\n\t\t\t\t\t\t\t\tCatbook\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<OpenInNewIcon />\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</a>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\nexport default React.memo(Guide)\r\n","import React, { useEffect, useState } from 'react'\r\nimport './Comment.css'\r\nimport { AppContext } from '../App'\r\nimport Axios from 'axios'\r\n\r\nfunction Comment(props) {\r\n\tconst store = React.useContext(AppContext)\r\n\tconst { comment, post, refreshComment } = props\r\n\tconst [ imageUrl, setImageUrl ] = useState('noimage')\r\n\tlet update = false\r\n\tlet date = comment.publishedDate.substring(0, 16).replace('T', ' ')\r\n\tuseEffect(() => {\r\n\t\tconst textarea = document.querySelector(`#comment_${post.postId}_${comment.commentId} textarea`)\r\n\t\ttextarea.value = comment.content\r\n\r\n\t\t//댓글 프로필 이미지 가져오기\r\n\t\tif (comment.username) {\r\n\t\t\tlet url = process.env.REACT_APP_URL + '/auth/user'\r\n\t\t\t//url = process.env.REACT_APP_LOCAL_URL + '/auth/user'\r\n\t\t\tAxios.post(url, {\r\n\t\t\t\twithCredentials: true, //CORS\r\n\t\t\t\tdata: {\r\n\t\t\t\t\tusername: comment.username,\r\n\t\t\t\t},\r\n\t\t\t})\r\n\t\t\t\t.then((res) => {\r\n\t\t\t\t\tif(!res.data.imageUrl) setImageUrl('noimage'+Math.random())\r\n\t\t\t\t\telse setImageUrl(res.data.imageUrl)\r\n\t\t\t\t})\r\n\t\t\t\t.catch((e) => {\r\n\t\t\t\t\tsetImageUrl('noimage'+Math.random())\r\n\t\t\t\t})\r\n\t\t}\r\n\t}, [comment, post.postId, setImageUrl])\r\n\r\n\tconst updateComment = (e) => {\r\n\t\t//댓글 수정\r\n\t\tconst textarea = document.querySelector(`#comment_${post.postId}_${comment.commentId} textarea`)\r\n\t\tif (!update) {\r\n\t\t\tupdate = true\r\n\t\t\ttextarea.classList.add('updateMode')\r\n\t\t\ttextarea.readOnly = false\r\n\t\t\ttextarea.focus()\r\n\t\t} else if (window.confirm('댓글을 수정하시겠습니까?')) {\r\n\t\t\tupdate = false\r\n\t\t\ttextarea.classList.remove('updateMode')\r\n\t\t\ttextarea.readOnly = true\r\n\r\n\t\t\tlet url = process.env.REACT_APP_URL + `/comments/${post.postId}/${comment.commentId}`\r\n\t\t\t//url = process.env.REACT_APP_LOCAL_URL+`/comments/${post.postId}/${comment.commentId}`\r\n\r\n\t\t\tAxios.patch(url, {\r\n\t\t\t\t//댓글 수정\r\n\t\t\t\twithCredentials: true, //CORS\r\n\t\t\t\tdata: {\r\n\t\t\t\t\tcontent: textarea.value,\r\n\t\t\t\t},\r\n\t\t\t})\r\n\t\t\t\t.then((res) => {\r\n\t\t\t\t\tconsole.log(`${comment.commentId}번 댓글 수정 성공`)\r\n\t\t\t\t\trefreshComment() //포스트 다시 불러오기\r\n\t\t\t\t})\r\n\t\t\t\t.catch((e) => alert(e)) //실패\r\n\t\t}\r\n\t}\r\n\r\n\tconst deleteComment = (e) => {\r\n\t\tif (window.confirm('삭제 후에는 복구가 불가합니다. 정말로 댓글을 삭제하시겠습니까?')) {\r\n\t\t\tlet url = process.env.REACT_APP_URL + `/comments/delete/${post.postId}/${comment.commentId}`\r\n\t\t\t//url = process.env.REACT_APP_LOCAL_URL+`/comments/delete/${post.postId}/${comment.commentId}`\r\n\r\n\t\t\tAxios.patch(url, {\r\n\t\t\t\t//포스트 삭제\r\n\t\t\t\twithCredentials: true, //CORS\r\n\t\t\t})\r\n\t\t\t\t.then((res) => {\r\n\t\t\t\t\tconsole.log(`${comment.commentId}번 댓글 삭제 성공`)\r\n\t\t\t\t\trefreshComment() //포스트 다시 불러오기\r\n\t\t\t\t})\r\n\t\t\t\t.catch((e) => alert(e)) //실패\r\n\t\t}\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className=\"commentWrapper\" id={`comment_${post.postId}_${comment.commentId}`}>\r\n\t\t\t<div className=\"comment\">\r\n\t\t\t\t<div className=\"commentProfile\">\r\n\t\t\t\t\t{!comment.username ? (\r\n\t\t\t\t\t\t<img alt=\"PROFILE\" src={process.env.PUBLIC_URL + '/images/noavatar.png'} />\r\n\t\t\t\t\t) : (\r\n\t\t\t\t\t\t<img\r\n\t\t\t\t\t\t\talt=\"PROFILE\"\r\n\t\t\t\t\t\t\tsrc={imageUrl}\r\n\t\t\t\t\t\t\tonError={(e) => {\r\n\t\t\t\t\t\t\t\te.target.src = process.env.PUBLIC_URL + '/images/dog' + (Math.floor(Math.random() * (3 - 1 + 1)) + 1) + '.png'\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"commentContent\">\r\n\t\t\t\t\t{comment.username === store.login.username ? (\r\n\t\t\t\t\t\t<span className=\"commentUsername\" style={{ fontWeight: 'bold' }}>\r\n\t\t\t\t\t\t\t{comment.username}\r\n\t\t\t\t\t\t</span>\r\n\t\t\t\t\t) : (\r\n\t\t\t\t\t\t<span className=\"commentUsername\">{comment.username}</span>\r\n\t\t\t\t\t)}\r\n\t\t\t\t\t<span className=\"commentDate\">\r\n\t\t\t\t\t\t{' '}\r\n\t\t\t\t\t\t- {date} {comment.updated && '(수정됨)'}\r\n\t\t\t\t\t</span>\r\n\t\t\t\t\t<textarea readOnly onChange={store.resizeTextarea} />\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t{((comment.username && comment.username === store.login.username) || store.login.username === 'imki123') && (\r\n\t\t\t\t<div className=\"commentButtons\">\r\n\t\t\t\t\t<button className=\"commentButton\" onClick={updateComment}>\r\n\t\t\t\t\t\t수정\r\n\t\t\t\t\t</button>\r\n\t\t\t\t\t<button className=\"commentButton\" style={{ background: 'red' }} onClick={deleteComment}>\r\n\t\t\t\t\t\t삭제\r\n\t\t\t\t\t</button>\r\n\t\t\t\t</div>\r\n\t\t\t)}\r\n\t\t</div>\r\n\t)\r\n}\r\nexport default React.memo(Comment)\r\n","// components/Meta\r\n/* eslint-disable no-undefined */\r\nimport React from 'react'\r\nimport { Helmet } from 'react-helmet'\r\n\r\nconst locales = {\r\n\ten: 'en_US',\r\n\tko: 'ko_KR',\r\n}\r\n\r\nconst Meta = ({ data }) => {\r\n\tconst lang = locales[data.locale] || locales['en']\r\n\tconst title = data.title\r\n\tconst description = data.description\r\n\tconst image = data.image !== undefined && `${data.image}`\r\n\tconst canonical = `https://imki123.github.io/${data.canonical}`\r\n\tconst type = data.type === undefined ? 'website' : data.type\r\n\tconst width = data.image && (data.width || 1200)\r\n\tconst height = data.image && (data.height || 630)\r\n\r\n\treturn (\r\n\t\t<Helmet titleTemplate=\"%s\">\r\n\t\t\t<html lang={lang} />\r\n\t\t\t<title>{title}</title>\r\n\t\t\t<meta name=\"description\" content={description} />\r\n\t\t\t{canonical ? <link rel=\"canonical\" href={canonical} /> : null}\r\n\t\t\t{image ? <link rel=\"image_src\" href={image} /> : null}\r\n\t\t\t{image ? <meta itemprop=\"image\" content={image} /> : null}\r\n\r\n\t\t\t<meta property=\"og:site_name\" content=\"YOUR WEB SITE\" />\r\n\t\t\t<meta property=\"og:title\" content={title} />\r\n\t\t\t{description ? <meta property=\"og:description\" content={description} /> : null}\r\n\t\t\t{canonical ? <meta property=\"og:url\" content={canonical} /> : null}\r\n\t\t\t<meta property=\"og:locale\" content={locales[lang]} />\r\n\t\t\t<meta property=\"og:type\" content={type} />\r\n\t\t\t{image ? <meta property=\"og:image\" content={image} /> : null}\r\n\t\t\t{width ? <meta property=\"og:image:width\" content={width} /> : null}\r\n\t\t\t{height ? <meta property=\"og:image:height\" content={height} /> : null}\r\n\t\t\t<meta property=\"fb:pages\" content=\"YOUR WEB SITE\" />\r\n\r\n\t\t\t{/* change type of twitter if there is no image? */}\r\n\t\t\t<meta name=\"twitter:card\" content=\"summary_large_image\" />\r\n\t\t\t<meta name=\"twitter:title\" content={title} />\r\n\t\t\t{description ? <meta name=\"twitter:description\" content={description} /> : null}\r\n\t\t\t{image ? <meta name=\"twitter:image\" content={image} /> : null}\r\n\t\t\t<meta name=\"twitter:site\" content=\"@YOURWEBSITE\" />\r\n\t\t\t{canonical ? <link rel=\"alternate\" href={data.canonical} hreflang={lang} /> : null}\r\n\t\t</Helmet>\r\n\t)\r\n}\r\n\r\nexport default Meta","import React from 'react'\r\nimport './PostList.css'\r\nimport { Link } from 'react-router-dom'\r\n\r\nfunction PostList(props){\r\n    const {list, no} = props\r\n    let date = list.publishedDate.substring(0,10).replace('T',' ')\r\n\r\n    return(\r\n        <Link to={`/posts/${list.postId}`}>\r\n            <div className=\"postList no-drag\">\r\n                <div className=\"postListHeader\">\r\n                    <div>\r\n                        <span className=\"postId\">{no}.</span>\r\n                        <span className=\"postTitle\">{list.title}</span>\r\n                    </div>\r\n                    <span className=\"postDate\">{date}</span>\r\n                </div>\r\n                <div className=\"postBody\">{list.text}</div>\r\n            </div>\r\n        </Link>\r\n    )\r\n}\r\nexport default React.memo(PostList)","import React from 'react'\r\nimport './Recents.css'\r\n\r\nimport PostList from './PostList'\r\n\r\nfunction Recents(props) {\r\n\tconst {title, list} = props\r\n\treturn (\r\n\t\t<div className=\"recents\">\r\n            <div className=\"postListTitle\">{title}</div>\r\n            {list && list.map((i, idx) => <PostList no={idx+1} list={i} key={i.postId} />)}\r\n\t\t</div>\r\n\t)\r\n}\r\nexport default React.memo(Recents)\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport './CommentLists.css'\r\n\r\nfunction CommentLists(props) {\r\n\tconst { title, list } = props\r\n\treturn (\r\n\t\t<div className=\"recents recentComment\">\r\n\t\t\t<div className=\"postListTitle\">{title}</div>\r\n\t\t\t{list &&\r\n\t\t\t\tlist.map((i, idx) => (\r\n\t\t\t\t\t<div key={i.title + idx}>\r\n\t\t\t\t\t\t<Link to={`/posts/${i.postId}/#comments`}>\r\n\t\t\t\t\t\t\t<div className=\"postList no-drag\">\r\n\t\t\t\t\t\t\t\t<div className=\"postListHeader\">\r\n\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t<span className=\"postId\">{idx + 1}.</span>\r\n\t\t\t\t\t\t\t\t\t\t<span className=\"username\">{i.username}</span>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<span className=\"postDate\">{i.publishedDate && i.publishedDate.substring(0, 19).replace('T', ' ')}</span>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className=\"postBody\">\r\n\t\t\t\t\t\t\t\t\t{i.content}\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className=\"postTitle\">{i.title}</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t))}\r\n\t\t</div>\r\n\t)\r\n}\r\nexport default React.memo(CommentLists)\r\n","import React, { useEffect, useState } from 'react'\r\nimport './Post.css'\r\nimport { Link } from 'react-router-dom'\r\nimport { useQuill } from 'react-quilljs'\r\nimport Comment from './Comment'\r\nimport { AppContext } from '../App'\r\nimport RefreshIcon from '@material-ui/icons/Refresh'\r\nimport Axios from 'axios'\r\nimport Meta from './Meta'\r\nimport Recents from './Recents'\r\nimport CommentLists from './CommentLists'\r\n\r\nfunction Post({ match, location, history }) {\r\n\tconst store = React.useContext(AppContext)\r\n\tlet { postId } = match.params\r\n\tconst [post, setPost] = useState(false)\r\n\tconst [postBody, setPostBody] = useState()\r\n\tconst [comments, setComments] = useState([])\r\n\tconst [commentCnt, setCommentCnt] = useState(3)\r\n\r\n\tconst [recents, setRecents] = useState([])\r\n\tconst [popular, setPopular] = useState([])\r\n\tconst [recentComments, setRecentComments] = useState([])\r\n\r\n\tconst modules = { syntax: true }\r\n\tconst formats = ['bold', 'italic', 'underline', 'strike', 'code-block', 'blockquote', 'size', 'header', 'align', 'color', 'background', 'indent', 'list', 'link', 'image', 'video', 'clean']\r\n\tconst { quill, quillRef } = useQuill({ modules, formats, readOnly: true })\r\n\r\n\tuseEffect(() => {\r\n\t\tsetPost(false)\r\n\t\tsetPostBody(false)\r\n\t\t//포스트 가져오기\r\n\t\tlet id = 1\r\n\t\tif (postId) id = postId\r\n\t\tlet url = process.env.REACT_APP_URL + '/posts/' + id\r\n\t\t//url = process.env.REACT_APP_LOCAL_URL + '/posts/' + id\r\n\t\tAxios.get(url, {\r\n\t\t\twithCredentials: true,\r\n\t\t})\r\n\t\t\t.then((res) => {\r\n\t\t\t\tsetComments(res.data.comments)\r\n\t\t\t\tsetPost(res.data)\r\n\t\t\t})\r\n\t\t\t.catch((e) => {\r\n\t\t\t\talert('찾으시는 페이지가 없습니다.\\n' + e)\r\n\t\t\t\thistory.go(-1)\r\n\t\t\t}) //실패\r\n\r\n\t\t//포스트바디 가져오기\r\n\t\turl = process.env.REACT_APP_URL + '/posts/postBody/' + id\r\n\t\t//url = process.env.REACT_APP_LOCAL_URL + '/posts/postBody/' + id\r\n\t\tAxios.get(url)\r\n\t\t\t.then((res) => {\r\n\t\t\t\tsetPostBody(res.data.body)\r\n\r\n\t\t\t\tif (location.hash) {\r\n\t\t\t\t\t//hash가 있으면 해당 엘리먼트로 스크롤\r\n\t\t\t\t\tsetTimeout(function () {\r\n\t\t\t\t\t\t//postBody가 로드된 이후에 스크롤이 되야해서 0.01초 타임아웃 추가..\r\n\t\t\t\t\t\tconst content = document.querySelector('#content')\r\n\t\t\t\t\t\tconst elem = document.querySelector(location.hash)\r\n\t\t\t\t\t\tif (content && elem) {\r\n\t\t\t\t\t\t\tlet contentScroll = content.scrollTop\r\n\t\t\t\t\t\t\tlet elemTop = elem.offsetTop\r\n\t\t\t\t\t\t\tlet dif = (elemTop - contentScroll) / 100\r\n\t\t\t\t\t\t\tlet frame \r\n\t\t\t\t\t\t\t//프레임이 혹시라도 안멈출 수 있어서 1초 후에 강제로 종료함\r\n\t\t\t\t\t\t\tsetTimeout(function(){\r\n\t\t\t\t\t\t\t\tclearInterval(frame)\r\n\t\t\t\t\t\t\t}, 1000)\r\n\t\t\t\t\t\t\tif (elemTop > contentScroll) {\r\n\t\t\t\t\t\t\t\tframe = setInterval(function () { //인터벌\r\n\t\t\t\t\t\t\t\t\tif (content.scrollTop + dif >= elemTop || content.scrollTop >= content.scrollHeight - content.clientHeight) {\r\n\t\t\t\t\t\t\t\t\t\tclearInterval(frame)\r\n\t\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t\tcontent.scrollTop += dif\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}, 10)\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tframe = setInterval(function () {\r\n\t\t\t\t\t\t\t\t\tif (content.scrollTop <= elemTop) {\r\n\t\t\t\t\t\t\t\t\t\tclearInterval(frame)\r\n\t\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t\tcontent.scrollTop += dif\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}, 10)\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}, 10)\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\t.catch((e) => {\r\n\t\t\t\tconsole.log(e)\r\n\t\t\t}) //실패\r\n\r\n\t\t//홈일경우 recents, popular, recentComments 가져옴\r\n\t\tif (location.pathname === '/') {\r\n\t\t\turl = process.env.REACT_APP_URL + '/posts/popular'\r\n\t\t\t//url = process.env.REACT_APP_LOCAL_URL + '/posts/popular'\r\n\t\t\tAxios.get(url).then((res) => {\r\n\t\t\t\tsetPopular(res.data)\r\n\t\t\t})\r\n\r\n\t\t\turl = process.env.REACT_APP_URL + '/posts/recents'\r\n\t\t\t//url = process.env.REACT_APP_LOCAL_URL + '/posts/recents'\r\n\t\t\tAxios.get(url).then((res) => {\r\n\t\t\t\tsetRecents(res.data)\r\n\t\t\t})\r\n\r\n\t\t\turl = process.env.REACT_APP_URL + '/comments/recent'\r\n\t\t\t//url = process.env.REACT_APP_LOCAL_URL + '/comments/recent'\r\n\t\t\tAxios.get(url).then((res) => {\r\n\t\t\t\tsetRecentComments(res.data)\r\n\t\t\t})\r\n\t\t}\r\n\t}, [location, postId, history])\r\n\r\n\tuseEffect(() => {\r\n\t\tif (quill) {\r\n\t\t\tif (postBody) {\r\n\t\t\t\tquill.setContents(postBody)\r\n\t\t\t} else if (post) {\r\n\t\t\t\tquill.setText(post.text)\r\n\t\t\t}\r\n\t\t}\r\n\t}, [quill, postBody, post])\r\n\r\n\tuseEffect(() => {\r\n\t\tstore.setReady(false)\r\n\t\tif (post) {\r\n\t\t\tstore.setReady(true)\r\n\t\t}\r\n\t})\r\n\r\n\tconst deletePost = (e) => {\r\n\t\tif (window.confirm('글 삭제 시 복구가 불가합니다. 해당 글을 정말로 삭제하시겠습니까?')) {\r\n\t\t\tconst postId = e.target.id\r\n\t\t\tlet url = process.env.REACT_APP_URL + '/posts/' + postId\r\n\t\t\t//url = process.env.REACT_APP_LOCAL_URL+'/posts/'+postId\r\n\r\n\t\t\tAxios.delete(url, {\r\n\t\t\t\t//글 삭제\r\n\t\t\t\twithCredentials: true, //CORS\r\n\t\t\t})\r\n\t\t\t\t.then((res) => {\r\n\t\t\t\t\tconsole.log(`${postId}번 글 삭제 성공`)\r\n\t\t\t\t\thistory.go(-1)\r\n\t\t\t\t})\r\n\t\t\t\t.catch((e) => alert(e)) //실패\r\n\t\t}\r\n\t}\r\n\r\n\tconst postComment = (e) => {\r\n\t\tconst comment = document.querySelector(`.commentContent textarea`) //댓글 텍스트\r\n\t\tif (comment && comment.value !== '' && window.confirm('댓글을 작성하시겠습니까?')) {\r\n\t\t\tlet url = process.env.REACT_APP_URL + '/comments/' + post.postId\r\n\t\t\t//url = process.env.REACT_APP_LOCAL_URL+'/comments/'+post.postId\r\n\r\n\t\t\tAxios.patch(url, {\r\n\t\t\t\t//댓글 작성\r\n\t\t\t\twithCredentials: true, //CORS\r\n\t\t\t\tdata: {\r\n\t\t\t\t\tusername: store.login.username,\r\n\t\t\t\t\tcontent: comment.value,\r\n\t\t\t\t},\r\n\t\t\t})\r\n\t\t\t\t.then((res) => {\r\n\t\t\t\t\tconsole.log(`${post.postId} 댓글 추가 성공`)\r\n\t\t\t\t\trefreshComment(null, setCommentCnt(res.data.comments.length)) //포스트 다시 불러오고 댓글 끝까지 보이기\r\n\t\t\t\t})\r\n\t\t\t\t.catch((e) => alert(e)) //실패\r\n\t\t}\r\n\t}\r\n\r\n\tconst refreshComment = (e, func) => {\r\n\t\t//댓글 가져오기\r\n\t\tlet url = process.env.REACT_APP_URL + '/comments/' + post.postId\r\n\t\t//url = process.env.REACT_APP_LOCAL_URL+'/comments/'+post.postId\r\n\r\n\t\tlet svg //refresh 아이콘\r\n\t\tif (e && e.target) svg = e.target.querySelector('svg')\r\n\t\tif (svg) svg.classList.add('refreshing') //refresh 애니메이션 시작\r\n\r\n\t\tAxios.get(url, {\r\n\t\t\twithCredentials: true,\r\n\t\t}) //댓글 새로고치기\r\n\t\t\t.then((res) => {\r\n\t\t\t\tconsole.log(`${post.postId} 댓글 새로고침`)\r\n\t\t\t\tsetComments(res.data) //댓글 저장\r\n\t\t\t\tif (svg) svg.classList.remove('refreshing') //refresh 애니메이션 끝\r\n\r\n\t\t\t\tif (func) func() //파라미터에 함수가 있으면 함수 실행\r\n\t\t\t})\r\n\t\t\t.catch((e) => {\r\n\t\t\t\t//실패\r\n\t\t\t\tif (svg) svg.classList.remove('refreshing') //refresh 애니메이션 끝\r\n\t\t\t\talert(e)\r\n\t\t\t})\r\n\t}\r\n\r\n\t//댓글 10개 더보기\r\n\tconst more = (e) => {\r\n\t\tsetCommentCnt(commentCnt + 10)\r\n\t}\r\n\r\n\t//댓글 더보기, 댓글 새로고침 하면 리사이즈\r\n\tuseEffect(() => {\r\n\t\tstore.resizeTextarea()\r\n\t}, [commentCnt, store, comments])\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<div className=\"post\">\r\n\t\t\t\t{location.pathname === '/' ? (\r\n\t\t\t\t\t<Meta\r\n\t\t\t\t\t\tdata={{\r\n\t\t\t\t\t\t\ttitle: '임기의 코딩 블로그 :D',\r\n\t\t\t\t\t\t\tdiscription: 'imki123의 임기의 코딩 블로그입니다 :D',\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t/>\r\n\t\t\t\t) : (\r\n\t\t\t\t\t<Meta data={{ title: post.title, discription: post.text, locale: 'ko' }} />\r\n\t\t\t\t)}\r\n\t\t\t\t{/* 태그 */}\r\n\t\t\t\t<div className=\"nav\">\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<span>Tag : </span>\r\n\t\t\t\t\t\t{post.tags &&\r\n\t\t\t\t\t\t\tpost.tags.map((i, idx) =>\r\n\t\t\t\t\t\t\t\tidx === 0 ? (\r\n\t\t\t\t\t\t\t\t\t<span key={i}>\r\n\t\t\t\t\t\t\t\t\t\t<Link to={i === 'home' ? '/' : `/tags/${i}`}>{i}</Link>\r\n\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t<span key={i}>\r\n\t\t\t\t\t\t\t\t\t\t, <Link to={`/tags/${i}`}>{i}</Link>\r\n\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t),\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t{post && post.publishedDate.substring(0, 16).replace('T', ' ')}\r\n\t\t\t\t</div>\r\n\t\t\t\t<h2 className=\"postTitle\">{post.title}</h2>\r\n\t\t\t\t<div className=\"postContent\">\r\n\t\t\t\t\t{/* 본문 */}\r\n\t\t\t\t\t<div id=\"editor\">\r\n\t\t\t\t\t\t<div ref={quillRef} />\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t{/* 글 수정 삭제 버튼 */}\r\n\t\t\t\t\t{store.login && store.login.username === 'imki123' && (\r\n\t\t\t\t\t\t<div className=\"postButtons\">\r\n\t\t\t\t\t\t\t<Link to={`/quill/${post.postId}`} className=\"hover no-drag\">\r\n\t\t\t\t\t\t\t\t수정\r\n\t\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t\t&nbsp;\r\n\t\t\t\t\t\t\t<button onClick={deletePost} id={post.postId} style={{ background: 'red' }}>\r\n\t\t\t\t\t\t\t\t삭제\r\n\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t{/* 댓글 작성*/}\r\n\t\t\t\t{location.pathname !== '/' && (\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t<div className=\"writeComment\">\r\n\t\t\t\t\t\t\t<div className=\"commentProfile\">\r\n\t\t\t\t\t\t\t\t{!store.login ? (\r\n\t\t\t\t\t\t\t\t\t<img alt=\"PROFILE\" src={process.env.PUBLIC_URL + '/images/noavatar.png'} />\r\n\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t<img\r\n\t\t\t\t\t\t\t\t\t\talt=\"PROFILE\"\r\n\t\t\t\t\t\t\t\t\t\tsrc={store.login.imageUrl}\r\n\t\t\t\t\t\t\t\t\t\tonError={(e) => {\r\n\t\t\t\t\t\t\t\t\t\t\te.target.src = process.env.PUBLIC_URL + '/images/dog' + (Math.floor(Math.random() * (3 - 1 + 1)) + 1) + '.png'\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className=\"commentContent\">\r\n\t\t\t\t\t\t\t\t{store.login ? (\r\n\t\t\t\t\t\t\t\t\t<span className=\"commentUsername\">{store.login.username}</span>\r\n\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\t\t\t\tclassName=\"loginButton\"\r\n\t\t\t\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\t\t\t\thistory.push('/login')\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t로그인\r\n\t\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t{store.login ? <textarea onChange={store.resizeTextarea} placeholder=\" 댓글을 남겨주세요 :D\" /> : <textarea readOnly placeholder=\" 로그인 후에 댓글을 남겨주세요 :D\" />}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className=\"commentButtons\">\r\n\t\t\t\t\t\t\t{store.login && (\r\n\t\t\t\t\t\t\t\t<button className=\"commentButton\" onClick={postComment}>\r\n\t\t\t\t\t\t\t\t\t댓글작성\r\n\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</>\r\n\t\t\t\t)}\r\n\r\n\t\t\t\t{/* 댓글 목록 */}\r\n\t\t\t\t{comments && comments.length > 0 && (\r\n\t\t\t\t\t<div id=\"comments\">\r\n\t\t\t\t\t\t<div className=\"commentTitle\">\r\n\t\t\t\t\t\t\t<div className=\"commentCnt\">댓글 {comments.length}개</div>\r\n\t\t\t\t\t\t\t<span className=\"commentRefresh\" onClick={refreshComment}>\r\n\t\t\t\t\t\t\t\t댓글 새로고침 <RefreshIcon />\r\n\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t{comments.map((i, idx) => idx < commentCnt && <Comment post={post} comment={i} key={i.commentId} refreshComment={refreshComment} />)}\r\n\t\t\t\t\t\t{comments.length > commentCnt && (\r\n\t\t\t\t\t\t\t<div className=\"more\">\r\n\t\t\t\t\t\t\t\t<span className=\"moreButton\" onClick={more}>\r\n\t\t\t\t\t\t\t\t\t댓글 더보기\r\n\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t)}\r\n\t\t\t</div>\r\n\t\t\t{location.pathname === '/' && (\r\n\t\t\t\t<div className=\"homeLists\">\r\n\t\t\t\t\t<Recents title=\"최신글\" list={recents} />\r\n\t\t\t\t\t<Recents title=\"인기글\" list={popular} />\r\n\t\t\t\t\t<CommentLists title=\"최근 댓글\" list={recentComments} />\r\n\t\t\t\t</div>\r\n\t\t\t)}\r\n\t\t</>\r\n\t)\r\n}\r\nexport default React.memo(Post)\r\n","import React, { useEffect } from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { AppContext } from '../App'\r\nimport './NotFoundPage.css'\r\n\r\nfunction NotFoundPage() {\r\n\tconst store = React.useContext(AppContext)\r\n\tconst history = useHistory()\r\n\tuseEffect(() => {\r\n\t\t//console.log(`Not found page! https://imki123.github.io/`)\r\n\t\tstore.setReady(true)\r\n\t})\r\n\r\n\tconst goBack = e => {\r\n\t\thistory.go(-1)\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className=\"notFound\">\r\n\t\t\t<div className=\"title\">Not Found Page</div>\r\n\t\t\t<div className=\"goHome\">\r\n\t\t\t\t<span onClick={goBack}>Go back</span>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\nexport default React.memo(NotFoundPage)\r\n","import React, { useState, useEffect } from 'react'\r\nimport './Login.css'\r\nimport { Switch, Route, Link } from 'react-router-dom'\r\nimport { AppContext } from '../App'\r\nimport GoogleLogin from 'react-google-login'\r\n\r\nfunction Login({ history, match, location }) {\r\n\tconst href = window.location.href\r\n\tlet clientId\r\n\tif (href.indexOf('localhost') > -1) {\r\n\t\t//로컬\r\n\t\tclientId = '605411712139-7nr29rfs5ihfu9uoev3igr5hpf4ubkle.apps.googleusercontent.com'\r\n\t} else {\r\n\t\t//서버\r\n\t\tclientId = '605411712139-eb3qqicskmkal2i9u26ppdhoq2jt0bd8.apps.googleusercontent.com'\r\n\t}\r\n\tconst store = React.useContext(AppContext)\r\n\tlet browser = ''\r\n\tconst agent = navigator.userAgent.toLowerCase()\r\n\tif (agent.indexOf('chrome') > -1) browser = 'chrome'\r\n\telse if (agent.indexOf('safari') > -1) browser = 'safari'\r\n\r\n\tconst [checkUsername, setCheckUsername] = useState('')\r\n\tconst [checkPassword, setCheckPassword] = useState('')\r\n\tconst [checkPasswordConfirm, setCheckPasswordConfirm] = useState('')\r\n\tconst [buttonName, setButtonName] = useState('로그인')\r\n\r\n\tuseEffect(() => {\r\n\t\tstore.setReady(true)\r\n\t})\r\n\tuseEffect(() => {\r\n\t\t//이미 로그인이 되어있다면 스테이터스로 이동\r\n\t\tif (store.login && location.pathname === '/login') {\r\n\t\t\thistory.replace('/loginStatus')\r\n\t\t}\r\n\t\t//로그인이 안되어있으면 로그인으로 이동\r\n\t\tif (!store.login && location.pathname === '/loginStatus') {\r\n\t\t\thistory.replace('/login')\r\n\t\t}\r\n\t\tif (location.pathname.indexOf('register') > -1) {\r\n\t\t\tsetButtonName('회원가입')\r\n\t\t} else if (location.pathname.indexOf('withdraw') > -1) {\r\n\t\t\tsetButtonName('회원탈퇴')\r\n\t\t} else {\r\n\t\t\tsetButtonName('로그인')\r\n\t\t}\r\n\t}, [location, store.login, history])\r\n\r\n\tconst changeUsername = (e) => {\r\n\t\tconst pattern = /[^a-zA-Z0-9ㄱ-ㅎㅏ-ㅣ가-힣_]/g\r\n\t\tconst value = (e.target.value = e.target.value.replace(/\\s/g, '_').replace(pattern, ''))\r\n\t\tif (value.length < 3) {\r\n\t\t\t//3글자 이상\r\n\t\t\tsetCheckUsername('- 3자 이상 입력해주세요')\r\n\t\t} else if (value.length > 20) {\r\n\t\t\t//20글자 이하\r\n\t\t\tsetCheckUsername('- 20자 이하로 입력해주세요')\r\n\t\t} else {\r\n\t\t\tsetCheckUsername('')\r\n\t\t}\r\n\t}\r\n\tconst changePassword = (e) => {\r\n\t\tconst { value } = e.target\r\n\t\tconst passwordConfirm = document.querySelector('[name=passwordConfirm]')\r\n\r\n\t\t//비밀번호가 변경되면 비밀번호 확인은 초기화\r\n\t\tif (passwordConfirm) {\r\n\t\t\tpasswordConfirm.value = ''\r\n\t\t\tsetCheckPasswordConfirm('')\r\n\t\t}\r\n\r\n\t\tif (value.length < 6) {\r\n\t\t\t//6글자 이상\r\n\t\t\tsetCheckPassword('- 6자 이상 입력해주세요')\r\n\t\t} else if (value.length > 20) {\r\n\t\t\t//20글자 이하\r\n\t\t\tsetCheckPassword('- 20자 이하로 입력해주세요')\r\n\t\t} else {\r\n\t\t\tsetCheckPassword('')\r\n\t\t}\r\n\t}\r\n\tconst changePasswordConfirm = (e) => {\r\n\t\tconst { value } = e.target\r\n\t\tconst password = document.querySelector('[name=password]')\r\n\r\n\t\tif (value !== password.value && value.length >= 1) {\r\n\t\t\t//password와 같으면\r\n\t\t\tsetCheckPasswordConfirm('- 비밀번호가 일치하지 않습니다')\r\n\t\t} else {\r\n\t\t\tsetCheckPasswordConfirm('')\r\n\t\t}\r\n\t}\r\n\tconst clickButton = (e) => {\r\n\t\te.preventDefault()\r\n\t\tlet url = process.env.REACT_APP_URL + '/auth'\r\n\t\t//url = process.env.REACT_APP_LOCAL_URL+'/auth'\r\n\r\n\t\tconst pattern = /[^a-zA-Z0-9가-힣_]/g\r\n\t\tlet username = document.querySelector('[name=username]')\r\n\t\tif (username) username = username.value = username.value.replace(pattern, '')\r\n\t\tlet password = document.querySelector('[name=password]')\r\n\t\tif (password) password = password.value\r\n\r\n\t\tif (checkUsername === '' && password.length >= 1 && checkPassword === '' && checkPasswordConfirm === '') {\r\n\t\t\t//입력폼에 이상이 없으면 fetch submit\r\n\t\t\tif (buttonName === '회원가입') {\r\n\t\t\t\turl += '/register'\r\n\t\t\t\tfetch(url, {\r\n\t\t\t\t\tmode: 'cors',\r\n\t\t\t\t\tmethod: 'POST',\r\n\t\t\t\t\tcredentials: 'include',\r\n\t\t\t\t\theaders: { 'Content-Type': 'application/json' },\r\n\t\t\t\t\tbody: JSON.stringify({\r\n\t\t\t\t\t\tusername: username,\r\n\t\t\t\t\t\tpassword: password,\r\n\t\t\t\t\t}),\r\n\t\t\t\t})\r\n\t\t\t\t\t.then((res) => {\r\n\t\t\t\t\t\tif (res.status === 200 || res.status === 201) {\r\n\t\t\t\t\t\t\t//성공하면 아래 then 작동\r\n\t\t\t\t\t\t\tres.json().then((res) => {\r\n\t\t\t\t\t\t\t\talert(res.username + '님의 회원가입에 성공했습니다 :D')\r\n\t\t\t\t\t\t\t\thistory.go(-1)\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tlet message = '회원가입에 실패했습니다 :('\r\n\t\t\t\t\t\t\tif (res.status === 409) {\r\n\t\t\t\t\t\t\t\tmessage += '\\n이미 존재하는 아이디입니다.'\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tif (res.status === 400) {\r\n\t\t\t\t\t\t\t\tmessage += '\\n아이디나 비밀번호를 확인해주세요.'\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\talert(message)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t})\r\n\t\t\t\t\t.catch((e) => console.error(e))\r\n\t\t\t} else if (buttonName === '회원탈퇴') {\r\n\t\t\t\tif (window.confirm('계정 탈퇴시 복구할 수 없습니다. 정말로 탈퇴하시겠습니까?')) {\r\n\t\t\t\t\turl += '/withdraw'\r\n\t\t\t\t\tfetch(url, {\r\n\t\t\t\t\t\tmode: 'cors',\r\n\t\t\t\t\t\tmethod: 'DELETE',\r\n\t\t\t\t\t\tcredentials: 'include',\r\n\t\t\t\t\t\theaders: { 'Content-Type': 'application/json' },\r\n\t\t\t\t\t\tbody: JSON.stringify({\r\n\t\t\t\t\t\t\tusername: store.login.username,\r\n\t\t\t\t\t\t\tpassword: password,\r\n\t\t\t\t\t\t}),\r\n\t\t\t\t\t})\r\n\t\t\t\t\t\t.then((res) => {\r\n\t\t\t\t\t\t\tif (res.status === 200) {\r\n\t\t\t\t\t\t\t\t//삭제하면 Ok\r\n\t\t\t\t\t\t\t\talert('계정이 탈퇴되었습니다. 또 들러 주세요 :D')\r\n\t\t\t\t\t\t\t\thistory.push('/')\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tlet message = '탈퇴에 실패했습니다 :('\r\n\t\t\t\t\t\t\t\tif (res.status === 204) {\r\n\t\t\t\t\t\t\t\t\tmessage += '\\n존재하지 않는 아이디입니다.'\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tif (res.status === 401) {\r\n\t\t\t\t\t\t\t\t\tmessage += '\\n비밀번호를 확인해주세요.'\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\talert(message)\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t\t.catch((e) => console.error(e))\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\t//로그인\r\n\t\t\t\turl += '/login'\r\n\t\t\t\tfetch(url, {\r\n\t\t\t\t\tmode: 'cors',\r\n\t\t\t\t\tmethod: 'POST',\r\n\t\t\t\t\tcredentials: 'include',\r\n\t\t\t\t\theaders: { 'Content-Type': 'application/json' },\r\n\t\t\t\t\tbody: JSON.stringify({\r\n\t\t\t\t\t\tusername: username,\r\n\t\t\t\t\t\tpassword: password,\r\n\t\t\t\t\t}),\r\n\t\t\t\t})\r\n\t\t\t\t\t.then((res) => {\r\n\t\t\t\t\t\tif (res.status === 200 || res.status === 201) {\r\n\t\t\t\t\t\t\t//성공하면 아래 then 작동\r\n\t\t\t\t\t\t\tres.json().then((res) => {\r\n\t\t\t\t\t\t\t\tstore.setLogin(res)\r\n\t\t\t\t\t\t\t\talert(res.username + '님 환영합니다 :D')\r\n\t\t\t\t\t\t\t\thistory.go(-1)\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tlet message = '로그인에 실패했습니다 :('\r\n\t\t\t\t\t\t\tif (res.status === 401) {\r\n\t\t\t\t\t\t\t\tmessage += '\\n로그인 정보를 확인해주세요.'\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\talert(message)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t})\r\n\t\t\t\t\t.catch((e) => console.error(e))\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\talert('입력 정보를 확인해주세요.')\r\n\t\t}\r\n\t}\r\n\r\n\tconst successGoogle = (res) => {\r\n\t\tconsole.log('구글로그인 성공')\r\n\t\t//console.log(res)\r\n\t\tlet email = res.profileObj.email\r\n\t\tlet username = email.substring(0,email.indexOf('@'))+'_g'\r\n\t\tif(username === 'popping2606_g') username = 'imki123' //내아이디\r\n\r\n\t\tlet url = process.env.REACT_APP_URL + '/auth/oauth'\r\n\t\t//url = process.env.REACT_APP_LOCAL_URL + '/auth/oauth'\r\n\t\t//구글로그인 성공시 토큰에 name, email, imageUrl 저장\r\n\t\tfetch(url, {\r\n\t\t\tmode: 'cors',\r\n\t\t\tmethod: 'POST',\r\n\t\t\tcredentials: 'include',\r\n\t\t\theaders: { 'Content-Type': 'application/json' },\r\n\t\t\tbody: JSON.stringify({\r\n\t\t\t\tusername: username,\r\n\t\t\t\temail: res.profileObj.email,\r\n\t\t\t\timageUrl: res.profileObj.imageUrl,\r\n\t\t\t}),\r\n\t\t})\r\n\t\t\t.then((res) => {\r\n\t\t\t\tif (res.status === 200 || res.status === 201) {\r\n\t\t\t\t\t//성공하면 아래 then 작동\r\n\t\t\t\t\tres.json().then((res) => {\r\n\t\t\t\t\t\talert(res.username + '님 환영합니다 :D')\r\n\t\t\t\t\t\thistory.go(-1)\r\n\t\t\t\t\t\tstore.setLogin(res)\r\n\t\t\t\t\t})\r\n\t\t\t\t} else {\r\n\t\t\t\t\tlet message = '로그인에 실패했습니다 :('\r\n\t\t\t\t\tif (res.status === 401) {\r\n\t\t\t\t\t\tmessage += '\\n로그인 정보를 확인해주세요.'\r\n\t\t\t\t\t}\r\n\t\t\t\t\tconsole.log(message)\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\t.catch((e) => console.error(e))\r\n\t}\r\n\tconst failureGoogle = (res) => {\r\n\t\tconsole.log('구글로그인 실패')\r\n\t\tconsole.log(res)\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div id=\"background\">\r\n\t\t\t<div id=\"loginWrapper\">\r\n\t\t\t\t<Switch>\r\n\t\t\t\t\t<Route path={['/login', '/register', '/withdraw']}>\r\n\t\t\t\t\t\t{(buttonName === '로그인' || buttonName === '회원가입') &&<div className=\"oAuth\">\r\n\t\t\t\t\t\t\t<div className=\"login\">\r\n\t\t\t\t\t\t\t\t{/* 구글로그인 */}\r\n\t\t\t\t\t\t\t\t<GoogleLogin\r\n\t\t\t\t\t\t\t\t\tbuttonText=\"Login with Google\"\r\n\t\t\t\t\t\t\t\t\tclassName=\"googleLogin\"\r\n\t\t\t\t\t\t\t\t\tclientId={clientId}\r\n\t\t\t\t\t\t\t\t\tonSuccess={successGoogle}\r\n\t\t\t\t\t\t\t\t\tonFailure={failureGoogle}\r\n\t\t\t\t\t\t\t\t\tcookiePolicy={'single_host_origin'}\r\n\t\t\t\t\t\t\t\t\tisSignedIn={true}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>}\r\n\t\t\t\t\t\t<form className=\"login\">\r\n\t\t\t\t\t\t\t<div className=\"text\">아이디</div>\r\n\t\t\t\t\t\t\t{buttonName === '회원탈퇴' ? <div>{store.login.username}</div> : <input name=\"username\" onChange={changeUsername} />}\r\n\r\n\t\t\t\t\t\t\t<div className=\"check\">{checkUsername}</div>\r\n\r\n\t\t\t\t\t\t\t<div className=\"text\">비밀번호</div>\r\n\t\t\t\t\t\t\t<input name=\"password\" type=\"password\" onChange={changePassword} autoComplete=\"currnet-password\" />\r\n\t\t\t\t\t\t\t<div className=\"check\">{checkPassword}</div>\r\n\r\n\t\t\t\t\t\t\t{buttonName === '회원가입' && (\r\n\t\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t\t<div className=\"text\">비밀번호 확인</div>\r\n\t\t\t\t\t\t\t\t\t<input name=\"passwordConfirm\" type=\"password\" onChange={changePasswordConfirm} autoComplete=\"currnet-password\" />\r\n\t\t\t\t\t\t\t\t\t<div className=\"check\" id=\"checkPasswordConfirm\">\r\n\t\t\t\t\t\t\t\t\t\t{checkPasswordConfirm}\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t\t)}\r\n\r\n\t\t\t\t\t\t\t{/* 버튼 */}\r\n\t\t\t\t\t\t\t{buttonName === '회원탈퇴' ? (\r\n\t\t\t\t\t\t\t\t<button style={{ background: 'red' }} onClick={clickButton}>\r\n\t\t\t\t\t\t\t\t\t{buttonName}\r\n\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t<button onClick={clickButton}>{buttonName}</button>\r\n\t\t\t\t\t\t\t)}\r\n\r\n\t\t\t\t\t\t\t{/* 로그인 or 회원가입 */}\r\n\t\t\t\t\t\t\t{buttonName === '로그인' && (\r\n\t\t\t\t\t\t\t\t<div className=\"loginLink\">\r\n\t\t\t\t\t\t\t\t\t<Link to=\"/register\">회원가입</Link>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t{buttonName === '회원가입' && (\r\n\t\t\t\t\t\t\t\t<div className=\"loginLink\">\r\n\t\t\t\t\t\t\t\t\t<Link to=\"/login\" className=\"loginLink\">\r\n\t\t\t\t\t\t\t\t\t\t로그인\r\n\t\t\t\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t)}\r\n\r\n\t\t\t\t\t\t\t{browser === 'safari' && (\r\n\t\t\t\t\t\t\t\t<div className=\"text\" style={{ fontSize: '0.8rem', textAlign: 'center' }}>\r\n\t\t\t\t\t\t\t\t\t(Safari의 경우 설정을 변경해주셔야 로그인이 가능합니다.\r\n\t\t\t\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t\t\t\t설정 → Safari → 개인 정보 보호 및 보안 → <br />\r\n\t\t\t\t\t\t\t\t\t크로스 사이트 추적방지 OFF, 모든 쿠키 차단 OFF)\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t</form>\r\n\t\t\t\t\t</Route>\r\n\t\t\t\t\t<Route path={['/loginStatus']}>\r\n\t\t\t\t\t\t{store.login ? (\r\n\t\t\t\t\t\t\t<div className=\"center\">\r\n\t\t\t\t\t\t\t\t{store.login.username}님은 현재 <span style={{ color: 'green' }}>로그인</span> 되어있습니다 :D\r\n\t\t\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t\t\t<span style={{ fontSize: '0.8rem' }}>(로그인은 최대 일주일간 유지됩니다.)</span>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t<div className=\"login center\">\r\n\t\t\t\t\t\t\t\t재 로그인이 필요합니다\r\n\t\t\t\t\t\t\t\t<Link to=\"/login\" className=\"loginLink\">\r\n\t\t\t\t\t\t\t\t\t로그인\r\n\t\t\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t</Route>\r\n\t\t\t\t</Switch>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\nexport default React.memo(Login)\r\n","import React, { useEffect, useState } from 'react'\r\nimport './Quill.css'\r\nimport 'quill/dist/quill.snow.css'\r\nimport { useQuill } from 'react-quilljs'\r\nimport imageCompress from 'quill-image-compress'\r\nimport { AppContext } from '../App'\r\nimport Axios from 'axios'\r\n\r\n\r\nfunction Quill({ match, location, history }) {\r\n\tconst store = React.useContext(AppContext)\r\n\tlet { postId } = match.params\r\n\tconst [post, setPost] = useState()\r\n\tconst [ready, setReady] = useState()\r\n\tconst [subMenus, setSubMenus] = useState()\r\n\r\n\tconst modules = {\r\n\t\ttoolbar: [\r\n\t\t\t['bold', 'italic', 'underline', 'strike'],\r\n\t\t\t[{ size: ['small', false, 'large', 'huge'] }, { header: 1 }, { header: 2 }],\r\n\t\t\t[{ align: [] }],\r\n\t\t\t[{ color: [] }, { background: [] }],\r\n\t\t\t[{ indent: '-1' }, { indent: '+1' }],\r\n\t\t\t[{ list: 'ordered' }, { list: 'bullet' }],\r\n\t\t\t['code-block', 'blockquote'],\r\n\t\t\t['link', 'image', 'video'],\r\n\t\t\t['clean'],\r\n\t\t],\r\n\t\tsyntax: true,\r\n\t\timageCompress: {\r\n\t\t\tquality: 0.7, // default\r\n\t\t\tmaxWidth: 1000, // default 1000\r\n\t\t\tmaxHeight: 1000, // default 1000\r\n\t\t\timageType: 'image/jpeg', // default\r\n\t\t\tdebug: true, // default\r\n\t\t  }\r\n\t}\r\n\tconst formats = ['bold', 'italic', 'underline', 'strike', 'code-block', 'blockquote', 'size', 'header', 'align', 'color', 'background', 'indent', 'list', 'link', 'image', 'video', 'clean']\r\n\r\n\tconst { quill, quillRef, Quill } = useQuill({ modules, formats })\r\n\tif (Quill && !quill) {\r\n\t\t// For execute this line only once.\r\n\t\tQuill.register('modules/imageCompress', imageCompress)\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\t\tsetReady(false)\r\n\t\t//포스트 불러오기 axios\r\n\t\tif (postId !== undefined && Number(postId) >= 1 && quill) {\r\n\t\t\t//postId가 없으면 포스트 내용 가져오지 않기\r\n\t\t\tlet url = process.env.REACT_APP_URL + '/posts/' + postId\r\n\t\t\t//url = process.env.REACT_APP_LOCAL_URL+'/posts/' + postId\r\n\r\n\t\t\tAxios.get(url, {\r\n\t\t\t\twithCredentials: true,\r\n\t\t\t}) //포스트 불러오기\r\n\t\t\t\t.then((res) => {\r\n\t\t\t\t\tlet title = document.querySelector('[name=title]')\r\n\t\t\t\t\ttitle.value = res.data.title\r\n\r\n\t\t\t\t\tconst tags = document.querySelectorAll('[type=radio]')\r\n\t\t\t\t\tfor (let i of tags) {\r\n\t\t\t\t\t\t//체크 초기화\r\n\t\t\t\t\t\ti.checked = false\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (res.data.tags) {\r\n\t\t\t\t\t\t//체크박스 체크\r\n\t\t\t\t\t\tconst mainMenu = document.getElementById(res.data.tags[0])\r\n\t\t\t\t\t\tif (mainMenu) mainMenu.checked = true\r\n\t\t\t\t\t\tfor (let i of store.menus) {\r\n\t\t\t\t\t\t\tif (i.name === res.data.tags[0]) {\r\n\t\t\t\t\t\t\t\t//선택된 메인메뉴의 서브메뉴를 그리기\r\n\t\t\t\t\t\t\t\tsetSubMenus(i.subMenus)\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t//포스트바디 가져오기\r\n\t\t\t\t\turl = process.env.REACT_APP_URL + '/posts/postBody/' + postId\r\n\t\t\t\t\t//url = process.env.REACT_APP_LOCAL_URL + '/posts/postBody/' + postId\r\n\t\t\t\t\tAxios.get(url)\r\n\t\t\t\t\t\t.then((res2) => {\r\n\t\t\t\t\t\t\tif (typeof res2.data.body === 'string') quill.setText(res2.data.body)\r\n\t\t\t\t\t\t\t//body가 string이면 setText\r\n\t\t\t\t\t\t\telse quill.setContents(res2.data.body) //body가 string이 아니면 setContents : Delta\r\n\t\t\t\t\t\t\tsetPost({\r\n\t\t\t\t\t\t\t\t...res.data,\r\n\t\t\t\t\t\t\t\tbody: res2.data.body,\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t\t.catch((e) => {\r\n\t\t\t\t\t\t\talert(e)\r\n\t\t\t\t\t\t\tsetReady(true)\r\n\t\t\t\t\t\t}) //실패\r\n\t\t\t\t})\r\n\t\t\t\t.catch((e) => {\r\n\t\t\t\t\talert(e)\r\n\t\t\t\t\tsetReady(true)\r\n\t\t\t\t}) //실패\r\n\t\t}else{\r\n\t\t\tsetReady(true)\r\n\t\t}\r\n\t}, [location, quill, postId, store.menus])\r\n\r\n\tuseEffect(() => {\r\n\t\tif (subMenus && post) {\r\n\t\t\tconst subMenu = document.getElementById(post.tags[1])\r\n\t\t\tif (subMenu) subMenu.checked = true\r\n\t\t}\r\n\t\tconst newSubMenu = document.querySelector('[name=newSubMenu]')\r\n\t\tif (newSubMenu) newSubMenu.value = ''\r\n\t}, [subMenus, post])\r\n\r\n\tuseEffect(() => {\r\n\t\tstore.setReady(false)\r\n\t\tif(post || ready){\r\n\t\t\tstore.setReady(true)\r\n\t\t}\r\n\t})\r\n\r\n\t//글 작성 or 수정\r\n\tconst clickPost = (e) => {\r\n\t\tif (!store.login || (store.login && store.login.username !== 'imki123')) {\r\n\t\t\talert('글 작성은 블로그 주인만 가능합니다 ^^;')\r\n\t\t\treturn\r\n\t\t}\r\n\t\tif (!window.confirm('글을 게시하시겠습니까?')) {\r\n\t\t\treturn\r\n\t\t}\r\n\t\t//제목, 내용, 태그가 있는지 검사\r\n\t\tlet title = document.querySelector('[name=title]')\r\n\t\tconst content = quill.getContents()\r\n\t\tconst text = quill.getText()\r\n\t\tconst mainMenu = document.querySelector('[name=mainMenu]:checked')\r\n\t\tlet tags = []\r\n\t\tconst subMenu = document.querySelector('[name=subMenu]:checked')\r\n\t\tconst newMainMenu = document.querySelector('[name=newMainMenu]')\r\n\t\tconst newSubMenu = document.querySelector('[name=newSubMenu]')\r\n\r\n\t\tif (mainMenu) {\r\n\t\t\ttags[0] = mainMenu.value\r\n\t\t}\r\n\t\tif (newMainMenu.value !== '') {\r\n\t\t\ttags[0] = newMainMenu.value\r\n\t\t}\r\n\t\tif (subMenu) {\r\n\t\t\tif (subMenu.value !== '') tags[1] = subMenu.value //체크 된 서브메뉴 추가\r\n\t\t}\r\n\t\tif (newSubMenu.value !== '') {\r\n\t\t\ttags[1] = newSubMenu.value\r\n\t\t}\r\n\r\n\t\tif (title.value.length === 0) {\r\n\t\t\talert('제목을 입력해주세요.')\r\n\t\t\treturn\r\n\t\t} else if (quill.getLength() === 1) {\r\n\t\t\talert('내용을 입력해주세요.')\r\n\t\t\treturn\r\n\t\t} else if (tags.length < 1 && newMainMenu.value === '') {\r\n\t\t\talert('메인메뉴를 1개 선택해주세요.')\r\n\t\t\treturn\r\n\t\t}\r\n\r\n\t\t//url에 POST 또는 PATCH 요청\r\n\t\tlet url = process.env.REACT_APP_URL + '/posts'\r\n\t\t//url = process.env.REACT_APP_LOCAL_URL + '/posts'\r\n\t\tlet method = 'POST',\r\n\t\t\tmessage = '글 작성 성공'\r\n\t\tif (e.target.id === 'PATCH') {\r\n\t\t\tif (postId !== undefined && Number(postId) >= 1) {\r\n\t\t\t\turl += '/' + postId\r\n\t\t\t\tmethod = 'PATCH'\r\n\t\t\t\tmessage = '글 수정 성공'\r\n\t\t\t} else {\r\n\t\t\t\tconsole.log('postId 비정상, 글 수정 실패')\r\n\t\t\t\treturn\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tAxios(url, {\r\n\t\t\t//포스트 작성, 수정 (최대 10mb. koa-bodyparser에서 설정.)\r\n\t\t\tmethod: method,\r\n\t\t\twithCredentials: true, //CORS\r\n\t\t\tdata: {\r\n\t\t\t\ttitle: title.value,\r\n\t\t\t\tbody: content,\r\n\t\t\t\ttext: text,\r\n\t\t\t\ttags: tags,\r\n\t\t\t},\r\n\t\t})\r\n\t\t\t.then((res) => {\r\n\t\t\t\talert(message) //성공\r\n\t\t\t\tpostId = res.data.postId\r\n\t\t\t\tif (method === 'POST') {\r\n\t\t\t\t\t//글 작성시 menus 카운트 증가\r\n\t\t\t\t\tAxios()\r\n\t\t\t\t}\r\n\t\t\t\tif (postId > 1) {\r\n\t\t\t\t\thistory.push(`/posts/${postId}`) //수정 성공하면 해당 글로 이동함\r\n\t\t\t\t} else {\r\n\t\t\t\t\thistory.push(`/posts/1`) //인사말은 홈으로 이동\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\t.catch((e) => alert(e)) //실패\r\n\t}\r\n\r\n\t// 화면 리사이즈시 editor 아래 마진 변경\r\n\tuseEffect(() => {\r\n\t\tconst editor = document.querySelector('#editor')\r\n\t\tconst toolbar = document.querySelector('.ql-toolbar')\r\n\t\tif (editor && toolbar) {\r\n\t\t\teditor.style.marginBottom = toolbar.clientHeight + 10 + 'px'\r\n\t\t}\r\n\t\twindow.removeEventListener('resize', function () {})\r\n\t\twindow.addEventListener('resize', function () {\r\n\t\t\tif (editor && toolbar) {\r\n\t\t\t\teditor.style.marginBottom = toolbar.clientHeight + 10 + 'px'\r\n\t\t\t}\r\n\t\t})\r\n\t}, [location])\r\n\r\n\t//메인메뉴 추가시 라디오박스 체크 해제, 띄어쓰기를 _로 변경\r\n\tconst changeMainMenu = (e) => {\r\n\t\tif (store.menus) {\r\n\t\t\tfor (let i of store.menus) {\r\n\t\t\t\tif (i.name === e.target.value) {\r\n\t\t\t\t\tsetSubMenus(i.subMenus)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (e.target.type !== 'radio') {\r\n\t\t\t//인풋박스 입력하면 라디오 체크 해제\r\n\t\t\te.target.value = e.target.value.replace(/\\s/g, '_')\r\n\t\t\tconst mainMenu = document.querySelector('[name=mainMenu]:checked')\r\n\t\t\tif (mainMenu) mainMenu.checked = false\r\n\t\t}\r\n\t}\r\n\t//서브메뉴 추가시 라디오박스 체크 해제, 띄어쓰기를 _로 변경\r\n\tconst changeSubMenu = (e) => {\r\n\t\tif (e.target.type !== 'radio') {\r\n\t\t\t//인풋박스 입력하면 라디오 체크 해제\r\n\t\t\te.target.value = e.target.value.replace(/\\s/g, '_')\r\n\t\t\tconst subMenu = document.querySelector('[name=subMenu]:checked')\r\n\t\t\tif (subMenu) subMenu.checked = false\r\n\t\t} else {\r\n\t\t\tconst newSubMenu = document.querySelector('[name=newSubMenu]')\r\n\t\t\tif (newSubMenu) newSubMenu.value = ''\r\n\t\t}\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className=\"quill\">\r\n\t\t\t<div className=\"quillTitle\">\r\n\t\t\t\t<input name=\"title\" placeholder=\"제목\" />\r\n\t\t\t</div>\r\n\t\t\t<div id=\"editor\">\r\n\t\t\t\t<div ref={quillRef} />\r\n\t\t\t\t<div id=\"tags\" className=\"no-drag\">\r\n\t\t\t\t\t<div id=\"tagsTitle\">\r\n\t\t\t\t\t\ttags\r\n\t\t\t\t\t\t{postId !== undefined && Number(postId) >= 1 ? (\r\n\t\t\t\t\t\t\t<button className=\"editorButton\" onClick={clickPost} id=\"PATCH\">\r\n\t\t\t\t\t\t\t\t글 수정\r\n\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t<button className=\"editorButton\" onClick={clickPost}>\r\n\t\t\t\t\t\t\t\t새글 작성\r\n\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t메인메뉴:\r\n\t\t\t\t\t\t{store.menus &&\r\n\t\t\t\t\t\t\tstore.menus.map((i) => (\r\n\t\t\t\t\t\t\t\t<label key={i.name}>\r\n\t\t\t\t\t\t\t\t\t<input type=\"radio\" name=\"mainMenu\" value={i.name} id={i.name} onClick={changeMainMenu} />\r\n\t\t\t\t\t\t\t\t\t{i.name}\r\n\t\t\t\t\t\t\t\t</label>\r\n\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t<input name=\"newMainMenu\" placeholder=\"메인메뉴 추가\" onChange={changeMainMenu} autoComplete=\"off\"></input>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t서브메뉴:\r\n\t\t\t\t\t\t<label>\r\n\t\t\t\t\t\t\t<input type=\"radio\" name=\"subMenu\" value=\"\" onClick={changeSubMenu} /> 선택안함\r\n\t\t\t\t\t\t</label>\r\n\t\t\t\t\t\t{subMenus &&\r\n\t\t\t\t\t\t\tsubMenus.map((i) => (\r\n\t\t\t\t\t\t\t\t<label key={i.name}>\r\n\t\t\t\t\t\t\t\t\t<input type=\"radio\" name=\"subMenu\" value={i.name} id={i.name} onClick={changeSubMenu} /> {i.name}\r\n\t\t\t\t\t\t\t\t</label>\r\n\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t<input name=\"newSubMenu\" placeholder=\"서브메뉴 추가\" autoComplete=\"off\" onChange={changeSubMenu}></input>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\nexport default React.memo(Quill)\r\n","import React, { useEffect } from 'react'\r\nimport './Paging.css'\r\nimport {NavLink, useLocation } from 'react-router-dom'\r\nimport queryString from 'query-string';\r\n\r\nfunction Paging(props){\r\n    const {postCount} = props\r\n\tconst location = useLocation()\r\n\tconst search = queryString.parse(location.search)\r\n    let paging = null\r\n    const pages = []\r\n\tif (postCount) {\r\n\t\tconst page = Number(search.page) || 1\r\n\t\tconst startPost = postCount - (page - 1) * 10\r\n\t\tpaging = {\r\n\t\t\tpage: page,\r\n\t\t\tlastPage: Math.ceil(postCount / 10),\r\n\t\t\tpostCount: postCount,\r\n\t\t\tstartPost: startPost,\r\n        }\r\n        \r\n        for(let i=0; i<paging.lastPage; i++){\r\n            pages.push(i+1)\r\n        }\r\n\t}\r\n\r\n    useEffect(() => {\r\n        const links = document.querySelectorAll('.paging a')\r\n        for(let i=0; i<links.length; i++){\r\n            if(links[i].innerHTML === search.page){\r\n                links[i].className = 'activePage'\r\n            }else{\r\n                links[i].className = 'inactivePage'\r\n            }\r\n            if(search.page === undefined){ //search에 page가 없으면 1을 activePage로 설정\r\n                if(links[i].innerHTML === '1'){\r\n                    links[i].className = 'activePage'\r\n                }\r\n            }\r\n        }\r\n    }, [search, postCount])\r\n\r\n    \r\n    return(\r\n        <div className=\"paging\">\r\n            {pages.map((p, idx) =>  \r\n                <NavLink path={location.pathname} to={`${location.pathname}?page=${p}`} \r\n                    className=\"inactivePage\" key={idx}>{p}</NavLink>)}\r\n        </div>\r\n    )\r\n}\r\nexport default React.memo(Paging)","import Axios from 'axios'\r\nimport React, { useEffect, useState } from 'react'\r\nimport { AppContext } from '../App'\r\nimport Paging from './Paging'\r\nimport PostList from './PostList'\r\n\r\nimport './Tags.css'\r\n\r\nfunction Tags({ match, location, history }) {\r\n\tconst store = React.useContext(AppContext)\r\n\tconst { tag } = match.params\r\n\tconst [lists, setLists] = useState([])\r\n\tuseEffect(() => {\r\n\t\t\r\n\t\tlet url = process.env.REACT_APP_URL + '/posts/tag/' + tag + location.search\r\n\t\t//url = process.env.REACT_APP_LOCAL_URL + '/posts/tag/' + tag + location.search\r\n\r\n\t\tAxios.get(url, {\r\n\t\t\twithCredentials: true,\r\n\t\t})\r\n\t\t\t.then((res) => {\r\n\t\t\t\tif(res.data.list.length < 1){\r\n\t\t\t\t\talert('찾으시는 페이지가 없습니다.')\r\n\t\t\t\t\thistory.go(-1)\r\n\t\t\t\t}else{\r\n\t\t\t\t\tsetLists(res.data.list)\r\n\t\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\t.catch((e) => alert(e)) //실패\r\n\t},[tag, location, history])\r\n\t\r\n\tuseEffect(() => {\r\n\t\tstore.setReady(false)\r\n\t\tif(lists){\r\n\t\t\tstore.setReady(true)\r\n\t\t}\r\n\t})\r\n\r\n\treturn (\r\n\t\t<div className=\"postListWrapper\">\r\n\t\t\t<div className=\"postListTitle\">{tag.substring(0,1).toUpperCase() + tag.substring(1)}</div>\r\n\t\t\t{lists && lists.map((i, idx) => <PostList no={lists.length - idx} list={i} key={i.postId} />)}\r\n\t\t\t{<Paging postCount={lists.length} />}\r\n\t\t</div>\r\n\t)\r\n}\r\nexport default React.memo(Tags)\r\n","import React, { useEffect } from 'react'\r\nimport AddCircleOutlineIcon from '@material-ui/icons/AddCircleOutline'\r\nimport ArrowUpwardIcon from '@material-ui/icons/ArrowUpward'\r\nimport './Content.css'\r\nimport { Link, Route, useLocation, Switch } from 'react-router-dom'\r\nimport { AppContext } from '../App'\r\n\r\nimport Post from './Post'\r\nimport NotFoundPage from './NotFoundPage'\r\nimport Login from './Login'\r\nimport Quill from './Quill'\r\nimport Tags from './Tags'\r\n\r\nfunction Content(props) {\r\n\tconst store = React.useContext(AppContext)\r\n\tconst location = useLocation()\r\n\r\n\tuseEffect(() => {\r\n\t\tconst resize = () => {\r\n\t\t\tstore.resizeTextarea()\r\n\t\t}\r\n\r\n\t\twindow.addEventListener('resize', resize)\r\n\t\tconst loading = document.querySelector('#loading')\r\n\t\tconst view = document.querySelector('.post')\r\n\t\tif (store.ready) {\r\n\t\t\tif (loading) loading.style.display = 'none'\r\n\t\t\tif (view) view.style.display = 'block'\r\n\r\n\t\t\tsetTimeout(function () {\r\n\t\t\t\tstore.resizeTextarea()\r\n\t\t\t}, 10)\r\n\t\t} else {\r\n\t\t\tif (loading) loading.style.display = 'flex'\r\n\t\t\tif (view) view.style.display = 'none'\r\n\t\t}\r\n\t\treturn window.removeEventListener('resize', resize)\r\n\t}, [location.hash, store])\r\n\r\n\tconst scrollUp = (e) => {\r\n\t\t// content의 스크롤을 가장 위로\r\n\t\tconst content = document.querySelector('#content')\r\n\t\tlet contentScroll = content.scrollTop\r\n\t\tlet dif = contentScroll / 50\r\n\t\tconst frame = setInterval(function () {\r\n\t\t\tif (content.scrollTop <= 0) {\r\n\t\t\t\tclearInterval(frame)\r\n\t\t\t} else {\r\n\t\t\t\tcontent.scrollTop -= dif\r\n\t\t\t}\r\n\t\t}, 10)\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div id=\"content\" className=\"slideMenu\">\r\n\t\t\t{/* FAB */}\r\n\t\t\t{store.login && store.login.username === 'imki123' && (\r\n\t\t\t\t<Link id=\"postFAB\" className=\"hover\" to=\"/quill\">\r\n\t\t\t\t\t<AddCircleOutlineIcon />\r\n\t\t\t\t</Link>\r\n\t\t\t)}\r\n\t\t\t<div id=\"scrollFAB\" className=\"hover\" onClick={scrollUp}>\r\n\t\t\t\t<ArrowUpwardIcon />\r\n\t\t\t</div>\r\n\t\t\t<div id=\"menuFAB\" className=\"hover\" onClick={store.slideMenu}>\r\n\t\t\t\t<img alt=\"MENU\" src={process.env.PUBLIC_URL + '/images/guide_icon.png'} />\r\n\t\t\t</div>\r\n\r\n\t\t\t{/* 로딩 */}\r\n\t\t\t<div id=\"loading\">\r\n\t\t\t\t<img alt=\"Loading\" src={process.env.PUBLIC_URL + '/images/loading.gif'} />\r\n\t\t\t</div>\r\n\r\n\t\t\t<Switch>\r\n\t\t\t\t<Route path={['/login', '/register', '/loginStatus', '/withdraw']} component={Login} />\r\n\t\t\t\t<Route path=\"/quill/:postId?\" component={Quill} />\r\n\t\t\t\t<Route path=\"/tags/:tag\" component={Tags} />\r\n\t\t\t\t<Route path=\"/\" exact component={Post} />\r\n\t\t\t\t<Route path=\"/posts/:postId\" component={Post} />\r\n\t\t\t\t<Route path=\"/NotFoundPage\" component={NotFoundPage} />\r\n\t\t\t\t<Route path=\"*\" component={NotFoundPage} />\r\n\t\t\t</Switch>\r\n\r\n\t\t\t{/* 텍스트 에어리어 높이 조정을 위한 안보이는 가짜 텍스트에어리어 */}\r\n\t\t\t<textarea disabled id=\"fakeTextarea\" />\r\n\t\t</div>\r\n\t)\r\n}\r\nexport default React.memo(Content)\r\n","import React from 'react'\r\nimport './Setting.css'\r\nimport { Link } from 'react-router-dom'\r\nimport { AppContext } from '../App'\r\nimport { GoogleLogout } from 'react-google-login'\r\n\r\nfunction Setting(props) {\r\n\tconst store = React.useContext(AppContext)\r\n\tconst href = window.location.href\r\n\tlet clientId\r\n\tif (href.indexOf('localhost') > -1) {\r\n\t\t//로컬\r\n\t\tclientId = '605411712139-7nr29rfs5ihfu9uoev3igr5hpf4ubkle.apps.googleusercontent.com'\r\n\t} else {\r\n\t\t//서버\r\n\t\tclientId = '605411712139-eb3qqicskmkal2i9u26ppdhoq2jt0bd8.apps.googleusercontent.com'\r\n\t}\r\n\r\n\tconst closeSetting = (e) => {\r\n\t\tconst settingWrapper = document.querySelector('#settingWrapper')\r\n\t\te.stopPropagation()\r\n\t\tsetTimeout(function () {\r\n\t\t\tsettingWrapper.style.display = 'none'\r\n\t\t}, 200)\r\n\t}\r\n\r\n\tconst logout = (e) => {\r\n\t\tif (window.confirm('로그아웃 하시겠습니까?')) {\r\n\t\t\tlet url = process.env.REACT_APP_URL + '/auth/logout'\r\n\t\t\t//url = process.env.REACT_APP_LOCAL_URL + '/auth/logout'\r\n\r\n\t\t\tfetch(url, {\r\n\t\t\t\tmode: 'cors',\r\n\t\t\t\tmethod: 'POST',\r\n\t\t\t\tcredentials: 'include',\r\n\t\t\t})\r\n\t\t\t\t.then((res) => {\r\n\t\t\t\t\tif (res.status === 204) {\r\n\t\t\t\t\t\t//로그아웃 하면 204\r\n\t\t\t\t\t\tconsole.log('로그아웃 성공')\r\n\t\t\t\t\t\tstore.setLogin(false)\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tconsole.log('로그아웃 실패')\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t\t.catch((e) => console.error(e))\r\n\t\t}\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div id=\"settingWrapper\" onClick={closeSetting}>\r\n\t\t\t<div id=\"setting\">\r\n\t\t\t\t<div id=\"settingListWrapper\">\r\n\t\t\t\t\t{store.login ? (\r\n\t\t\t\t\t\t<Link className=\"settingList\" to=\"/loginStatus\">\r\n\t\t\t\t\t\t\t{store.login.username}\r\n\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t) : (\r\n\t\t\t\t\t\t<Link className=\"settingList\" to=\"/login\">\r\n\t\t\t\t\t\t\t로그인\r\n\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t)}\r\n\t\t\t\t\t{store.login && (\r\n\t\t\t\t\t\t<div onClick={logout}>\r\n\t\t\t\t\t\t\t<GoogleLogout\r\n\t\t\t\t\t\t\t\tbuttonText=\"로그아웃\"\r\n\t\t\t\t\t\t\t\tclassName=\"settingList googleLogout\"\r\n\t\t\t\t\t\t\t\tclientId={clientId}\r\n\t\t\t\t\t\t\t\tonSuccess={(res) => {\r\n\t\t\t\t\t\t\t\t\tconsole.log('logout')\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\tonFailure={(res) => {\r\n\t\t\t\t\t\t\t\t\tconsole.log(res)\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\tcookiePolicy={'single_host_origin'}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t)}\r\n\t\t\t\t\t{!store.login && (\r\n\t\t\t\t\t\t<Link className=\"settingList\" to=\"/register\">\r\n\t\t\t\t\t\t\t회원가입\r\n\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t)}\r\n\t\t\t\t\t{store.login && !store.login.oAuth && (\r\n\t\t\t\t\t\t<Link className=\"settingList\" to=\"/withdraw\">\r\n\t\t\t\t\t\t\t회원탈퇴\r\n\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\nexport default React.memo(Setting)\r\n","import React, { createContext, useEffect, useState } from 'react'\r\nimport './App.css'\r\nimport { useLocation } from 'react-router-dom'\r\n\r\nimport Header from './components/Header'\r\nimport Body from './components/Body'\r\nimport Guide from './components/Guide'\r\nimport Content from './components/Content'\r\nimport Setting from './components/Setting'\r\nimport Axios from 'axios'\r\nimport Meta from './components/Meta'\r\n\r\nconst AppContext = createContext()\r\n\r\nfunction App() {\r\n\tconst location = useLocation() //페이지 경로 변경 감지\r\n\tconst [ready, setReady] = useState(false)\r\n\tconst [login, setLogin] = useState(false)\r\n\tconst [menus, setMenus] = useState([\r\n\t\t{ name: 'home', count: 1, order: 1 },\r\n\t\t{ name: 'programming', order: 2 },\r\n\t\t{ name: 'article', order: 3 },\r\n\t])\r\n\r\n\tconst resizeTextarea = (e) => {\r\n\t\t//텍스트에어리어를 찾아서 크기를 글자 높이에 맞게 변경하기\r\n\t\t//textarea 높이 조정\r\n\t\tconst fake = document.querySelector('#fakeTextarea')\r\n\t\tlet textareas = []\r\n\t\tif (e && e.target) {\r\n\t\t\ttextareas.push(e.target)\r\n\t\t} else {\r\n\t\t\ttextareas = document.querySelectorAll('textarea')\r\n\t\t}\r\n\r\n\t\tif (textareas && fake) {\r\n\t\t\tfor (let i = 0; i < textareas.length; i++) {\r\n\t\t\t\tfake.style.height = '1px'\r\n\t\t\t\tfake.style.width = textareas[i].clientWidth + 'px'\r\n\t\t\t\tfake.value = textareas[i].value\r\n\t\t\t\ttextareas[i].style.height = 5 + fake.scrollHeight + 'px'\r\n\t\t\t}\r\n\t\t\tfake.value = ''\r\n\t\t\tfake.style.height = '0px'\r\n\t\t}\r\n\t}\r\n\r\n\tconst slideMenu = () => {\r\n\t\t//메뉴버튼 클릭 시 메뉴 보이기 & 숨기기\r\n\t\tconst body = document.querySelector('#body')\r\n\t\tconst guideWrapper = document.querySelector('#guideWrapper')\r\n\t\tconst content = document.querySelector('#content')\r\n\r\n\t\tif (!guideWrapper.style.left) {\r\n\t\t\t//스타일 속성이 없으면 초기값 지정\r\n\t\t\tif (body.clientWidth < 500) {\r\n\t\t\t\tguideWrapper.style.left = '-312px' //모바일\r\n\t\t\t} else {\r\n\t\t\t\tguideWrapper.style.left = '0px' //PC\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (guideWrapper.style.left && guideWrapper.style.left.replace('px', '') > -100) {\r\n\t\t\tconsole.log(guideWrapper.style.left)\r\n\t\t\tconsole.log('close')\r\n\t\t\t//메뉴 닫기\r\n\t\t\tguideWrapper.parentNode.style.width = '0' // 회색 0\r\n\t\t\tcontent.style.width = 'calc(100% - 16px)' //콘텐트 100% - 16px\r\n\t\t\tguideWrapper.style.left = '-312px' // 메뉴 왼쪽으로\r\n\t\t} else {\r\n\t\t\tconsole.log(guideWrapper.style.left)\r\n\t\t\tconsole.log('open')\r\n\t\t\t//메뉴 열기\r\n\t\t\tguideWrapper.style.left = '0px' // 메뉴 0\r\n\t\t\tif (body.clientWidth < 500) {\r\n\t\t\t\t//모바일\r\n\t\t\t\tguideWrapper.parentNode.style.width = '100%' // 회색 100%\r\n\t\t\t} else {\r\n\t\t\t\t//PC\r\n\t\t\t\tcontent.style.width = `calc(100% - 312px - 16px)`\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t//모바일에서 회색부분 클릭 시 메뉴 닫기\r\n\tconst closeMenuMobile = (e) => {\r\n\t\tconst body = document.querySelector('#body')\r\n\t\tconst guideWrapper = document.querySelector('#guideWrapper')\r\n\t\tconst content = document.querySelector('#content')\r\n\r\n\t\tguideWrapper.parentNode.style.width = '0' // 회색 0\r\n\t\tif (body.clientWidth < 500) {\r\n\t\t\t//모바일\r\n\t\t\tguideWrapper.style.left = '-312px' // 메뉴 0\r\n\t\t\tcontent.style.width = 'calc(100% - 16px)'\r\n\t\t} else {\r\n\t\t\tcontent.style.width = 'calc(100% - 312px - 16px)'\r\n\t\t}\r\n\t}\r\n\tconst checkToken = (func) => {\r\n\t\t//로그인 되어있는지 토큰 체크하기\r\n\t\tlet url = process.env.REACT_APP_URL + '/auth/check'\r\n\t\t//url = process.env.REACT_APP_LOCAL_URL+'/auth/check'\r\n\t\tAxios.get(url, { withCredentials: true })\r\n\t\t\t.then((res) => {\r\n\t\t\t\tif (res.data) {\r\n\t\t\t\t\t//console.log('토큰 체크 성공')\r\n\t\t\t\t\tsetLogin(res.data)\r\n\t\t\t\t} else {\r\n\t\t\t\t\t//console.log('토큰 없음') //res.status===204(No Content)\r\n\t\t\t\t\tsetLogin(false)\r\n\t\t\t\t}\r\n\t\t\t\tif (func) func()\r\n\t\t\t})\r\n\t\t\t.catch((e) => {\r\n\t\t\t\t//실패\r\n\t\t\t\tif (func) func()\r\n\t\t\t})\r\n\t}\r\n\r\n\t//useContext 이용하여 하위 컴포넌트에 상태 전달\r\n\tconst store = {\r\n\t\tready,\r\n\t\tsetReady,\r\n\t\tlogin,\r\n\t\tsetLogin,\r\n\t\tmenus,\r\n\t\tsetMenus,\r\n\t\tresizeTextarea,\r\n\t\tslideMenu,\r\n\t\tcloseMenuMobile,\r\n\t\tcheckToken,\r\n\t}\r\n\r\n\t// 포스트에서 태그 정보를 가져와서 메뉴에 표시함, Quill의 태그목록에 표시\r\n\tuseEffect(() => {\r\n\t\tlet url = process.env.REACT_APP_URL + '/menus'\r\n\t\t//url = process.env.REACT_APP_LOCAL_URL+'/menus'\r\n\r\n\t\tAxios.get(url, {\r\n\t\t\twithCredentials: true,\r\n\t\t}) //메뉴 태그 가져오기\r\n\t\t\t.then((res) => {\r\n\t\t\t\tsetMenus(res.data)\r\n\t\t\t})\r\n\t\t\t.catch((e) => alert(e)) //실패\r\n\t}, [location.pathname])\r\n\r\n\t//주소 변경될 때, 토큰 체크하고 포스트 조회하기\r\n\tuseEffect(() => {\r\n\t\tcheckToken()\r\n\t}, [location.pathname, location.search])\r\n\r\n\treturn (\r\n\t\t<AppContext.Provider value={store}>\r\n\t\t\t<div id=\"app\">\r\n\t\t\t\t<Meta\r\n\t\t\t\t\tdata={{\r\n\t\t\t\t\t\ttitle: '임기의 코딩 블로그 :D',\r\n\t\t\t\t\t\tdiscription: 'imki123의 임기의 코딩 블로그입니다 :D',\r\n\t\t\t\t\t\timage: process.env.PUBLIC_URL + '/images/imcat_800x400.png',\r\n\t\t\t\t\t}}\r\n\t\t\t\t/>\r\n\t\t\t\t<Header />\r\n\t\t\t\t<Setting />\r\n\t\t\t\t<Body>\r\n\t\t\t\t\t<Guide />\r\n\t\t\t\t\t<Content />\r\n\t\t\t\t</Body>\r\n\t\t\t</div>\r\n\t\t</AppContext.Provider>\r\n\t)\r\n}\r\nexport { AppContext }\r\nexport default React.memo(App)\r\n","import React from 'react'\r\nimport ReactDOM, { hydrate } from 'react-dom'\r\nimport { BrowserRouter } from 'react-router-dom'\r\nimport App from './App'\r\n\r\nconst rootElement = document.getElementById('root')\r\n\r\nif (rootElement.hasChildNodes()) {\r\n\thydrate(\r\n\t\t<BrowserRouter>\r\n\t\t\t<App />\r\n\t\t</BrowserRouter>,\r\n\t\trootElement,\r\n\t)\r\n} else {\r\n\tReactDOM.render(\r\n\t\t<BrowserRouter basename={process.env.PUBLIC_URL}>\r\n\t\t\t<App />\r\n\t\t</BrowserRouter>,\r\n\t\tdocument.getElementById('root'),\r\n\t)\r\n}\r\n"],"sourceRoot":""}