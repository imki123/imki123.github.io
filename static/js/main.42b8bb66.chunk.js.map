{"version":3,"sources":["components/Header.js","components/Body.js","components/Menus.js","components/Guide.js","components/Comment.js","components/Meta.js","components/PostList.js","components/Recents.js","components/CommentLists.js","components/Post.js","components/NotFoundPage.js","components/Login.js","components/Quill.js","components/Paging.js","components/Tags.js","components/Content.js","components/Setting.js","App.js","index.js"],"names":["React","memo","props","store","useContext","AppContext","id","className","onClick","slideMenu","alt","src","to","closeMenuMobile","setting","document","querySelector","style","display","login","imageUrl","Math","floor","random","onError","e","target","children","menus","map","i","key","name","exact","activeClassName","substring","toUpperCase","count","subMenus","length","j","title","href","preventDefault","window","open","comment","post","refreshComment","useState","setImageUrl","update","date","publishedDate","replace","useEffect","postId","commentId","value","content","username","Axios","process","withCredentials","data","then","res","catch","fontWeight","updated","readOnly","onChange","resizeTextarea","textarea","confirm","classList","remove","url","patch","console","log","alert","add","focus","background","locales","en","ko","Meta","lang","locale","description","image","undefined","canonical","type","width","height","Helmet","titleTemplate","rel","itemprop","property","hreflang","list","no","views","text","idx","location","comments","setComments","commentCnt","setCommentCnt","recentAll","setRecentAll","pathname","get","setReady","match","history","params","setPost","postBody","setPostBody","recents","setRecents","popular","setPopular","recentComments","setRecentComments","useQuill","modules","syntax","formats","quill","quillRef","go","body","hash","setTimeout","elem","frame","contentScroll","scrollTop","elemTop","offsetTop","dif","clearInterval","setInterval","scrollHeight","clientHeight","setContents","setText","tags","querySelectorAll","func","svg","ref","delete","push","placeholder","useHistory","clientId","naverId","naverUrl","indexOf","browser","agent","navigator","userAgent","toLowerCase","checkUsername","setCheckUsername","checkPassword","setCheckPassword","checkPasswordConfirm","setCheckPasswordConfirm","buttonName","setButtonName","clickButton","password","fetch","mode","method","credentials","headers","JSON","stringify","status","json","message","error","setLogin","sendOAuth","user","email","path","callbackUrl","render","onSuccess","profile_image","onFailure","buttonText","profileObj","cookiePolicy","isSignedIn","color","passwordConfirm","autoComplete","fontSize","textAlign","ready","setSubMenus","toolbar","size","header","align","indent","imageCompress","quality","maxWidth","maxHeight","imageType","debug","Quill","register","Number","checked","mainMenu","getElementById","res2","subMenu","newSubMenu","clickPost","getContents","getText","newMainMenu","getLength","editor","marginBottom","removeEventListener","addEventListener","changeMainMenu","changeSubMenu","postCount","useLocation","search","queryString","parse","paging","pages","page","startPost","lastPage","ceil","links","innerHTML","p","tag","lists","setLists","resize","loading","component","Login","Tags","CommentLists","Post","NotFoundPage","disabled","settingWrapper","stopPropagation","oAuth","createContext","order","setMenus","checkToken","fake","textareas","clientWidth","guideWrapper","left","parentNode","Provider","rootElement","hasChildNodes","hydrate","basename","ReactDOM"],"mappings":"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","file":"static/js/main.42b8bb66.chunk.js","sourcesContent":["import React from 'react'\r\nimport './Header.css'\r\nimport { Link } from 'react-router-dom'\r\nimport { AppContext } from '../App'\r\n\r\nfunction Header(props) {\r\n\tconst store = React.useContext(AppContext)\r\n\r\n\tconst toggleSetting = () => {\r\n\t\tconst setting = document.querySelector('#settingWrapper')\r\n\t\tif (setting) {\r\n\t\t\tif (setting.style.display === 'block') {\r\n\t\t\t\tsetting.style.display = 'none'\r\n\t\t\t} else {\r\n\t\t\t\tsetting.style.display = 'block'\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div id=\"headerWrapper\">\r\n\t\t\t<div id=\"header\">\r\n\t\t\t\t<div className=\"hover\" onClick={store.slideMenu}>\r\n\t\t\t\t\t<img id=\"menu\" alt=\"MENU\" src={process.env.PUBLIC_URL + '/images/guide_icon.png'} />\r\n\t\t\t\t</div>\r\n\t\t\t\t<Link to=\"/\">\r\n\t\t\t\t\t<div id=\"title\" className=\"hover\" onClick={store.closeMenuMobile}>\r\n\t\t\t\t\t\t<img id=\"logo\" alt=\"logo\" src={process.env.PUBLIC_URL + '/images/imcat_64.png'} />\r\n\t\t\t\t\t\t임기의 코딩 블로그 :D\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</Link>\r\n\t\t\t\t<div className=\"hover\" onClick={toggleSetting}>\r\n\t\t\t\t\t{!store.login ? (\r\n\t\t\t\t\t\t<img className=\"profile\" alt=\"PROFILE\" src={process.env.PUBLIC_URL + '/images/noavatar.png'} />\r\n\t\t\t\t\t) : (\r\n\t\t\t\t\t\t<img\r\n\t\t\t\t\t\t\tclassName=\"profile\"\r\n\t\t\t\t\t\t\talt=\"PROFILE\"\r\n\t\t\t\t\t\t\tsrc={store.login.imageUrl ? store.login.imageUrl : 'noimage'+Math.floor(Math.random()*100)}\r\n\t\t\t\t\t\t\tonError={(e) => {\r\n\t\t\t\t\t\t\t\te.target.src = process.env.PUBLIC_URL + '/images/dog' + (Math.floor(Math.random() * (3 - 1 + 1)) + 1) + '.png'\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\nexport default React.memo(Header)\r\n","import React from 'react'\r\nimport './Body.css'\r\n\r\nfunction Body(props) {\r\n\treturn(\r\n        <div id=\"body\">\r\n            {props.children}\r\n        </div>\r\n    ) \r\n}\r\nexport default React.memo(Body)\r\n","import React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\nimport './Menus.css'\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore'\r\n\r\nfunction Menus(props) {\r\n\tconst { menus } = props\r\n\r\n\t//menu정보를 받아서 링크 메뉴 생성하기\r\n\t//menu { name: string, cnt: number, Object{ name: string, cnt: number}, Object{...}}\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{menus &&\r\n\t\t\t\tmenus.map((i) => (\r\n\t\t\t\t\t<div key={i.name}>\r\n\t\t\t\t\t\t<NavLink exact to={i.name === 'home' ? '/' : `/tags/${i.name}`} className=\"list\" activeClassName=\"activeList\">\r\n\t\t\t\t\t\t\t<span className=\"menuName\">{i.name.substring(0, 1).toUpperCase() + i.name.substring(1)}</span>\r\n\t\t\t\t\t\t\t<span className=\"menuOptions\">\r\n\t\t\t\t\t\t\t\t<span className=\"menuCnt\">{i.count}</span>\r\n\t\t\t\t\t\t\t\t<span className=\"menuExpandIcon\">{i.subMenus && i.subMenus.length >= 1 && <ExpandMoreIcon />}</span>\r\n\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t</NavLink>\r\n\t\t\t\t\t\t{i.subMenus && i.subMenus.length > 0 && i.subMenus.map((j) => (\r\n\t\t\t\t\t\t\t<NavLink exact to={`/tags/${j.name}`} className=\"list subList\" activeClassName=\"activeList\" key={j.name}>\r\n                            <span className=\"menuName\">{j.name.substring(0, 1).toUpperCase() + j.name.substring(1)}</span>\r\n                            <span className=\"menuOptions\">\r\n                                <span className=\"menuCnt\">{j.count}</span>\r\n                            </span>\r\n                        </NavLink>\r\n\t\t\t\t\t\t))}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t))}\r\n\t\t</>\r\n\t)\r\n}\r\nexport default React.memo(Menus)\r\n","import React from 'react'\r\nimport './Guide.css'\r\nimport { AppContext } from '../App'\r\nimport Menus from './Menus'\r\nimport OpenInNewIcon from '@material-ui/icons/OpenInNew'\r\n\r\nfunction Guide(props) {\r\n\tconst store = React.useContext(AppContext)\r\n\r\n\treturn (\r\n\t\t<div id=\"guideBack\" onClick={store.closeMenuMobile}>\r\n\t\t\t<div id=\"guideWrapper\" className=\"slideMenu\">\r\n\t\t\t\t<div id=\"avatar\">\r\n\t\t\t\t\t<img alt=\"avatar\" src={process.env.PUBLIC_URL + '/images/avatar.png'} title=\"Hello :D\" />\r\n\t\t\t\t\t<div id=\"name\">Im kiyoung</div>\r\n\t\t\t\t\t<div id=\"nickName\">imki123</div>\r\n\t\t\t\t\t<div id=\"github\">\r\n\t\t\t\t\t\t<a href=\"https://github.com/imki123\">\r\n\t\t\t\t\t\t\t<img alt=\"github\" src={process.env.PUBLIC_URL + '/images/GitHub-Mark-32px.png'} /> <span>https://github.com/imki123</span>\r\n\t\t\t\t\t\t</a>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div id=\"introduction\">A web programmer who dreams of becoming a wise developer.</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"menus\">\r\n\t\t\t\t\t<Menus menus={store.menus} />\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"menus\">\r\n\t\t\t\t\t<a href=\"https://imki123.github.io/catbook\" className=\"list\"\r\n                        onClick={e => {e.preventDefault(); window.open(\"https://imki123.github.io/catbook\")}}>\r\n\t\t\t\t\t\t<div className=\"menuLink\">\r\n\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t<img alt=\"catbook\" src={process.env.PUBLIC_URL + '/images/catbook_64.png'} />\r\n\t\t\t\t\t\t\t\tCatbook\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<OpenInNewIcon />\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</a>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\nexport default React.memo(Guide)\r\n","import React, { useEffect, useState } from 'react'\r\nimport './Comment.css'\r\nimport { AppContext } from '../App'\r\nimport Axios from 'axios'\r\n\r\nfunction Comment(props) {\r\n\tconst store = React.useContext(AppContext)\r\n\tconst { comment, post, refreshComment } = props\r\n\tconst [ imageUrl, setImageUrl ] = useState('noimage')\r\n\tlet update = false\r\n\tlet date = comment.publishedDate.substring(0, 16).replace('T', ' ')\r\n\tuseEffect(() => {\r\n\t\tconst textarea = document.querySelector(`#comment_${post.postId}_${comment.commentId} textarea`)\r\n\t\ttextarea.value = comment.content\r\n\r\n\t\t//댓글 프로필 이미지 가져오기\r\n\t\tif (comment.username) {\r\n\t\t\tlet url = process.env.REACT_APP_URL + '/auth/user'\r\n\t\t\t//url = process.env.REACT_APP_LOCAL_URL + '/auth/user'\r\n\t\t\tAxios.post(url, {\r\n\t\t\t\twithCredentials: true, //CORS\r\n\t\t\t\tdata: {\r\n\t\t\t\t\tusername: comment.username,\r\n\t\t\t\t},\r\n\t\t\t})\r\n\t\t\t\t.then((res) => {\r\n\t\t\t\t\tif(!res.data.imageUrl) setImageUrl('noimage'+Math.floor(Math.random()*100))\r\n\t\t\t\t\telse setImageUrl(res.data.imageUrl)\r\n\t\t\t\t})\r\n\t\t\t\t.catch((e) => {\r\n\t\t\t\t\tsetImageUrl('noimage'+Math.floor(Math.random()*100))\r\n\t\t\t\t})\r\n\t\t}\r\n\t}, [comment, post.postId, setImageUrl])\r\n\r\n\tconst updateComment = (e) => {\r\n\t\t//댓글 수정\r\n\t\tconst textarea = document.querySelector(`#comment_${post.postId}_${comment.commentId} textarea`)\r\n\t\tif (!update) {\r\n\t\t\tupdate = true\r\n\t\t\ttextarea.classList.add('updateMode')\r\n\t\t\ttextarea.readOnly = false\r\n\t\t\ttextarea.focus()\r\n\t\t} else if (window.confirm('댓글을 수정하시겠습니까?')) {\r\n\t\t\tupdate = false\r\n\t\t\ttextarea.classList.remove('updateMode')\r\n\t\t\ttextarea.readOnly = true\r\n\r\n\t\t\tlet url = process.env.REACT_APP_URL + `/comments/${post.postId}/${comment.commentId}`\r\n\t\t\t//url = process.env.REACT_APP_LOCAL_URL+`/comments/${post.postId}/${comment.commentId}`\r\n\r\n\t\t\tAxios.patch(url, {\r\n\t\t\t\t//댓글 수정\r\n\t\t\t\twithCredentials: true, //CORS\r\n\t\t\t\tdata: {\r\n\t\t\t\t\tcontent: textarea.value,\r\n\t\t\t\t},\r\n\t\t\t})\r\n\t\t\t\t.then((res) => {\r\n\t\t\t\t\tconsole.log(`${comment.commentId}번 댓글 수정 성공`)\r\n\t\t\t\t\trefreshComment() //포스트 다시 불러오기\r\n\t\t\t\t})\r\n\t\t\t\t.catch((e) => alert(e)) //실패\r\n\t\t}\r\n\t}\r\n\r\n\tconst deleteComment = (e) => {\r\n\t\tif (window.confirm('삭제 후에는 복구가 불가합니다. 정말로 댓글을 삭제하시겠습니까?')) {\r\n\t\t\tlet url = process.env.REACT_APP_URL + `/comments/delete/${post.postId}/${comment.commentId}`\r\n\t\t\t//url = process.env.REACT_APP_LOCAL_URL+`/comments/delete/${post.postId}/${comment.commentId}`\r\n\r\n\t\t\tAxios.patch(url, {\r\n\t\t\t\t//포스트 삭제\r\n\t\t\t\twithCredentials: true, //CORS\r\n\t\t\t})\r\n\t\t\t\t.then((res) => {\r\n\t\t\t\t\tconsole.log(`${comment.commentId}번 댓글 삭제 성공`)\r\n\t\t\t\t\trefreshComment() //포스트 다시 불러오기\r\n\t\t\t\t})\r\n\t\t\t\t.catch((e) => alert(e)) //실패\r\n\t\t}\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className=\"commentWrapper\" id={`comment_${post.postId}_${comment.commentId}`}>\r\n\t\t\t<div className=\"comment\">\r\n\t\t\t\t<div className=\"commentProfile\">\r\n\t\t\t\t\t{!comment.username ? (\r\n\t\t\t\t\t\t<img alt=\"PROFILE\" src={process.env.PUBLIC_URL + '/images/noavatar.png'} />\r\n\t\t\t\t\t) : (\r\n\t\t\t\t\t\t<img\r\n\t\t\t\t\t\t\talt=\"PROFILE\"\r\n\t\t\t\t\t\t\tsrc={imageUrl}\r\n\t\t\t\t\t\t\tonError={(e) => {\r\n\t\t\t\t\t\t\t\te.target.src = process.env.PUBLIC_URL + '/images/dog' + (Math.floor(Math.random() * (3 - 1 + 1)) + 1) + '.png'\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"commentContent\">\r\n\t\t\t\t\t{comment.username === store.login.username ? (\r\n\t\t\t\t\t\t<span className=\"commentUsername\" style={{ fontWeight: 'bold' }}>\r\n\t\t\t\t\t\t\t{comment.username}\r\n\t\t\t\t\t\t</span>\r\n\t\t\t\t\t) : (\r\n\t\t\t\t\t\t<span className=\"commentUsername\">{comment.username}</span>\r\n\t\t\t\t\t)}\r\n\t\t\t\t\t<span className=\"commentDate\">\r\n\t\t\t\t\t\t{' '}\r\n\t\t\t\t\t\t- {date} {comment.updated && '(수정됨)'}\r\n\t\t\t\t\t</span>\r\n\t\t\t\t\t<textarea readOnly onChange={store.resizeTextarea} />\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t{((comment.username && comment.username === store.login.username) || store.login.username === 'imki123') && (\r\n\t\t\t\t<div className=\"commentButtons\">\r\n\t\t\t\t\t<button className=\"commentButton\" onClick={updateComment}>\r\n\t\t\t\t\t\t수정\r\n\t\t\t\t\t</button>\r\n\t\t\t\t\t<button className=\"commentButton\" style={{ background: 'red' }} onClick={deleteComment}>\r\n\t\t\t\t\t\t삭제\r\n\t\t\t\t\t</button>\r\n\t\t\t\t</div>\r\n\t\t\t)}\r\n\t\t</div>\r\n\t)\r\n}\r\nexport default React.memo(Comment)\r\n","// components/Meta\r\n/* eslint-disable no-undefined */\r\nimport React from 'react'\r\nimport { Helmet } from 'react-helmet'\r\n\r\nconst locales = {\r\n\ten: 'en_US',\r\n\tko: 'ko_KR',\r\n}\r\n\r\nconst Meta = ({ data }) => {\r\n\tconst lang = locales[data.locale] || locales['en']\r\n\tconst title = data.title\r\n\tconst description = data.description\r\n\tconst image = data.image !== undefined && `${data.image}`\r\n\tconst canonical = `https://imki123.github.io/${data.canonical}`\r\n\tconst type = data.type === undefined ? 'website' : data.type\r\n\tconst width = data.image && (data.width || 1200)\r\n\tconst height = data.image && (data.height || 630)\r\n\r\n\treturn (\r\n\t\t<Helmet titleTemplate=\"%s\">\r\n\t\t\t<html lang={lang} />\r\n\t\t\t<title>{title}</title>\r\n\t\t\t<meta name=\"description\" content={description} />\r\n\t\t\t{canonical ? <link rel=\"canonical\" href={canonical} /> : null}\r\n\t\t\t{image ? <link rel=\"image_src\" href={image} /> : null}\r\n\t\t\t{image ? <meta itemprop=\"image\" content={image} /> : null}\r\n\r\n\t\t\t<meta property=\"og:site_name\" content=\"YOUR WEB SITE\" />\r\n\t\t\t<meta property=\"og:title\" content={title} />\r\n\t\t\t{description ? <meta property=\"og:description\" content={description} /> : null}\r\n\t\t\t{canonical ? <meta property=\"og:url\" content={canonical} /> : null}\r\n\t\t\t<meta property=\"og:locale\" content={locales[lang]} />\r\n\t\t\t<meta property=\"og:type\" content={type} />\r\n\t\t\t{image ? <meta property=\"og:image\" content={image} /> : null}\r\n\t\t\t{width ? <meta property=\"og:image:width\" content={width} /> : null}\r\n\t\t\t{height ? <meta property=\"og:image:height\" content={height} /> : null}\r\n\t\t\t<meta property=\"fb:pages\" content=\"YOUR WEB SITE\" />\r\n\r\n\t\t\t{/* change type of twitter if there is no image? */}\r\n\t\t\t<meta name=\"twitter:card\" content=\"summary_large_image\" />\r\n\t\t\t<meta name=\"twitter:title\" content={title} />\r\n\t\t\t{description ? <meta name=\"twitter:description\" content={description} /> : null}\r\n\t\t\t{image ? <meta name=\"twitter:image\" content={image} /> : null}\r\n\t\t\t<meta name=\"twitter:site\" content=\"@YOURWEBSITE\" />\r\n\t\t\t{canonical ? <link rel=\"alternate\" href={data.canonical} hreflang={lang} /> : null}\r\n\t\t</Helmet>\r\n\t)\r\n}\r\n\r\nexport default Meta","import React from 'react'\r\nimport './PostList.css'\r\nimport { Link } from 'react-router-dom'\r\n\r\nfunction PostList(props) {\r\n\tconst { list, no } = props\r\n\tlet date = list.publishedDate.substring(0, 10).replace('T', ' ')\r\n\r\n\treturn (\r\n\t\t<Link to={`/posts/${list.postId}`}>\r\n\t\t\t<div className=\"postList no-drag\">\r\n\t\t\t\t<div className=\"postListHeader\">\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<span className=\"postId\">{no}.</span>\r\n\t\t\t\t\t\t<span className=\"postTitle\">{list.title}</span>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<span className=\"postDate\">\r\n\t\t\t\t\t\t{list.views ? list.views : 0}, {date}\r\n\t\t\t\t\t</span>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"postBody\">{list.text}</div>\r\n\t\t\t</div>\r\n\t\t</Link>\r\n\t)\r\n}\r\nexport default React.memo(PostList)\r\n","import React from 'react'\r\nimport './Recents.css'\r\n\r\nimport PostList from './PostList'\r\n\r\nfunction Recents(props) {\r\n\tconst {title, list} = props\r\n\treturn (\r\n\t\t<div className=\"post recents\">\r\n            <div className=\"postListTitle\">{title}</div>\r\n            {list && list.map((i, idx) => <PostList no={idx+1} list={i} key={i.postId} />)}\r\n\t\t</div>\r\n\t)\r\n}\r\nexport default React.memo(Recents)\r\n","import Axios from 'axios'\r\nimport React, { useEffect, useState } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { AppContext } from '../App'\r\nimport './CommentLists.css'\r\n\r\nfunction CommentLists(props) {\r\n\tconst store = React.useContext(AppContext)\r\n\tconst { list, location } = props\r\n\tconst [comments, setComments] = useState()\r\n\tconst [commentCnt, setCommentCnt] = useState(10)\r\n\tconst [recentAll, setRecentAll] = useState('')\r\n\r\n\tuseEffect(() => {\r\n\t\tif (list) setComments(list) //props로 받은 list가 있으면 comments에 저장\r\n\r\n\t\tif (location && location.pathname === '/comments') {\r\n\t\t\t//전체리스트면 Axios로 comments 가져옴\r\n\t\t\tsetRecentAll('recentAll')\r\n\t\t\tlet url = process.env.REACT_APP_URL + '/comments/recentAll'\r\n\t\t\t//url = process.env.REACT_APP_LOCAL_URL + '/comments/recentAll'\r\n\t\t\tAxios.get(url)\r\n\t\t\t\t.then((res) => {\r\n\t\t\t\t\t//console.log(res.data)\r\n\t\t\t\t\tsetComments(res.data)\r\n\t\t\t\t})\r\n\t\t\t\t.catch((res) => {\r\n\t\t\t\t\tsetComments('')\r\n\t\t\t\t\t//console.log(res)\r\n\t\t\t\t})\r\n\t\t}\r\n\t}, [location, list])\r\n\r\n\tuseEffect(() => {\r\n\t\tif(store) store.setReady(false)\r\n\t\tif (comments) {\r\n\t\t\tstore.setReady(true)\r\n\t\t} else if (comments === '') store.setReady(true)\r\n\t})\r\n\r\n\t//댓글 10개 더보기\r\n\tconst more = (e) => {\r\n\t\tsetCommentCnt(commentCnt + 10)\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className={`post recents recentComment ${recentAll}`}>\r\n\t\t\t<div className=\"postListTitle\">최신 댓글 {list && <Link to=\"/comments\">더보기</Link>}</div>\r\n\t\t\t{comments &&\r\n\t\t\t\tcomments.map((i, idx) => (\r\n\t\t\t\t\t<div key={i.title + idx}>\r\n\t\t\t\t\t\t{idx < commentCnt && (\r\n\t\t\t\t\t\t\t<Link to={`/posts/${i.postId}/#comments`}>\r\n\t\t\t\t\t\t\t\t<div className=\"postList no-drag\">\r\n\t\t\t\t\t\t\t\t\t<div className=\"postListHeader\">\r\n\t\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t\t<span className=\"postId\">{idx + 1}.</span>\r\n\t\t\t\t\t\t\t\t\t\t\t<span className=\"username\">{i.username}</span>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t<span className=\"postDate\">{i.publishedDate && i.publishedDate.substring(0, 19).replace('T', ' ')}</span>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<div className=\"postBody\">{i.content}</div>\r\n\t\t\t\t\t\t\t\t\t<div className=\"postTitle\">{i.title}</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t))}\r\n\t\t\t{comments && comments.length > commentCnt && (\r\n\t\t\t\t<div className=\"more\">\r\n\t\t\t\t\t<span className=\"moreButton\" onClick={more}>\r\n\t\t\t\t\t\t댓글 더보기\r\n\t\t\t\t\t</span>\r\n\t\t\t\t</div>\r\n\t\t\t)}\r\n\t\t</div>\r\n\t)\r\n}\r\nexport default React.memo(CommentLists)\r\n","import React, { useEffect, useState } from 'react'\r\nimport './Post.css'\r\nimport { Link } from 'react-router-dom'\r\nimport { useQuill } from 'react-quilljs'\r\nimport Comment from './Comment'\r\nimport { AppContext } from '../App'\r\nimport RefreshIcon from '@material-ui/icons/Refresh'\r\nimport Axios from 'axios'\r\nimport Meta from './Meta'\r\nimport Recents from './Recents'\r\nimport CommentLists from './CommentLists'\r\n\r\nfunction Post({ match, location, history }) {\r\n\tconst store = React.useContext(AppContext)\r\n\tlet { postId } = match.params\r\n\tconst [post, setPost] = useState(false)\r\n\tconst [postBody, setPostBody] = useState()\r\n\tconst [comments, setComments] = useState([])\r\n\tconst [commentCnt, setCommentCnt] = useState(3)\r\n\r\n\tconst [recents, setRecents] = useState([])\r\n\tconst [popular, setPopular] = useState([])\r\n\tconst [recentComments, setRecentComments] = useState([])\r\n\r\n\tconst modules = { syntax: true }\r\n\tconst formats = ['bold', 'italic', 'underline', 'strike', 'code-block', 'blockquote', 'size', 'header', 'align', 'color', 'background', 'indent', 'list', 'link', 'image', 'video', 'clean']\r\n\tconst { quill, quillRef } = useQuill({ modules, formats, readOnly: true })\r\n\r\n\tuseEffect(() => {\r\n\t\tsetPost(false)\r\n\t\tsetPostBody(false)\r\n\t\t//포스트 가져오기\r\n\t\tlet id = 1\r\n\t\tif (postId) id = postId\r\n\t\tlet url = process.env.REACT_APP_URL + '/posts/' + id\r\n\t\t//url = process.env.REACT_APP_LOCAL_URL + '/posts/' + id\r\n\t\tAxios.get(url, {\r\n\t\t\twithCredentials: true,\r\n\t\t})\r\n\t\t\t.then((res) => {\r\n\t\t\t\tsetComments(res.data.comments)\r\n\t\t\t\tsetPost(res.data)\r\n\t\t\t})\r\n\t\t\t.catch((e) => {\r\n\t\t\t\talert('찾으시는 페이지가 없습니다.\\n' + e)\r\n\t\t\t\thistory.go(-1)\r\n\t\t\t}) //실패\r\n\r\n\t\t//포스트바디 가져오기\r\n\t\turl = process.env.REACT_APP_URL + '/posts/postBody/' + id\r\n\t\t//url = process.env.REACT_APP_LOCAL_URL + '/posts/postBody/' + id\r\n\t\tAxios.get(url)\r\n\t\t\t.then((res) => {\r\n\t\t\t\tsetPostBody(res.data.body)\r\n\r\n\t\t\t\tif (location.hash) {\r\n\t\t\t\t\t//hash가 있으면 해당 엘리먼트로 스크롤\r\n\t\t\t\t\tsetTimeout(function () {\r\n\t\t\t\t\t\t//postBody가 로드된 이후에 스크롤이 되야해서 0.01초 타임아웃 추가..\r\n\t\t\t\t\t\tconst content = document.querySelector('#content')\r\n\t\t\t\t\t\tconst elem = document.querySelector(location.hash)\r\n\t\t\t\t\t\tif (content && elem) {\r\n\t\t\t\t\t\t\tlet contentScroll = content.scrollTop\r\n\t\t\t\t\t\t\tlet elemTop = elem.offsetTop\r\n\t\t\t\t\t\t\tlet dif = (elemTop - contentScroll) / 100\r\n\t\t\t\t\t\t\tlet frame\r\n\t\t\t\t\t\t\t//프레임이 혹시라도 안멈출 수 있어서 1초 후에 강제로 종료함\r\n\t\t\t\t\t\t\tsetTimeout(function () {\r\n\t\t\t\t\t\t\t\tclearInterval(frame)\r\n\t\t\t\t\t\t\t}, 1000)\r\n\t\t\t\t\t\t\tif (elemTop > contentScroll) {\r\n\t\t\t\t\t\t\t\tframe = setInterval(function () {\r\n\t\t\t\t\t\t\t\t\t//인터벌\r\n\t\t\t\t\t\t\t\t\tif (content.scrollTop + dif >= elemTop || content.scrollTop >= content.scrollHeight - content.clientHeight) {\r\n\t\t\t\t\t\t\t\t\t\tclearInterval(frame)\r\n\t\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t\tcontent.scrollTop += dif\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}, 10)\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tframe = setInterval(function () {\r\n\t\t\t\t\t\t\t\t\tif (content.scrollTop <= elemTop) {\r\n\t\t\t\t\t\t\t\t\t\tclearInterval(frame)\r\n\t\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t\tcontent.scrollTop += dif\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}, 10)\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}, 10)\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\t.catch((e) => {\r\n\t\t\t\tconsole.log(e)\r\n\t\t\t}) //실패\r\n\r\n\t\t//홈일경우 recents, popular, recentComments 가져옴\r\n\t\tif (location.pathname === '/') {\r\n\t\t\turl = process.env.REACT_APP_URL + '/posts/popular'\r\n\t\t\t//url = process.env.REACT_APP_LOCAL_URL + '/posts/popular'\r\n\t\t\tAxios.get(url).then((res) => {\r\n\t\t\t\tsetPopular(res.data)\r\n\t\t\t})\r\n\r\n\t\t\turl = process.env.REACT_APP_URL + '/posts/recents'\r\n\t\t\t//url = process.env.REACT_APP_LOCAL_URL + '/posts/recents'\r\n\t\t\tAxios.get(url).then((res) => {\r\n\t\t\t\tsetRecents(res.data)\r\n\t\t\t})\r\n\r\n\t\t\turl = process.env.REACT_APP_URL + '/comments/recent'\r\n\t\t\t//url = process.env.REACT_APP_LOCAL_URL + '/comments/recent'\r\n\t\t\tAxios.get(url).then((res) => {\r\n\t\t\t\tsetRecentComments(res.data)\r\n\t\t\t})\r\n\t\t}\r\n\t}, [location, postId, history])\r\n\r\n\t//포스트 바디가 준비되면 quill에 포스트 바디를 그리고\r\n\t//포스트 바디가 없으면 포스트가 있으면 quill에 포스트 텍스트를 그리기.\r\n\tuseEffect(() => {\r\n\t\tif (quill) {\r\n\t\t\tif (postBody) {\r\n\t\t\t\tquill.setContents(postBody)\r\n\t\t\t} else if (post) {\r\n\t\t\t\tquill.setText(post.text)\r\n\t\t\t}\r\n\t\t}\r\n\t}, [quill, postBody, post])\r\n\r\n\t//포스트가 준비되면 화면 보이기\r\n\tuseEffect(() => {\r\n\t\tstore.setReady(false)\r\n\t\tif (post) {\r\n\t\t\tstore.setReady(true)\r\n\r\n\t\t\t//태그 찾아서 activeListManual 적용\r\n\t\t\tlet tags\r\n\t\t\tif (post.tags[1]) {\r\n\t\t\t\ttags = document.querySelectorAll(`a[href=\"/tags/${post.tags[1]}\"]`)\r\n\t\t\t} else if (post.tags[0]) {\r\n\t\t\t\ttags = document.querySelectorAll(`a[href=\"/tags/${post.tags[0]}\"]`)\r\n\t\t\t}\r\n\t\t\tif (tags) {\r\n\t\t\t\tfor (let i of tags) {\r\n\t\t\t\t\ti.classList.add('activeListManual')\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t})\r\n\r\n\tconst deletePost = (e) => {\r\n\t\tif (window.confirm('글 삭제 시 복구가 불가합니다. 해당 글을 정말로 삭제하시겠습니까?')) {\r\n\t\t\tconst postId = e.target.id\r\n\t\t\tlet url = process.env.REACT_APP_URL + '/posts/' + postId\r\n\t\t\t//url = process.env.REACT_APP_LOCAL_URL+'/posts/'+postId\r\n\r\n\t\t\tAxios.delete(url, {\r\n\t\t\t\t//글 삭제\r\n\t\t\t\twithCredentials: true, //CORS\r\n\t\t\t})\r\n\t\t\t\t.then((res) => {\r\n\t\t\t\t\tconsole.log(`${postId}번 글 삭제 성공`)\r\n\t\t\t\t\thistory.go(-1)\r\n\t\t\t\t})\r\n\t\t\t\t.catch((e) => alert(e)) //실패\r\n\t\t}\r\n\t}\r\n\r\n\tconst postComment = (e) => {\r\n\t\tconst comment = document.querySelector(`.commentContent textarea`) //댓글 텍스트\r\n\t\tif (comment && comment.value !== '' && window.confirm('댓글을 작성하시겠습니까?')) {\r\n\t\t\tlet url = process.env.REACT_APP_URL + '/comments/' + post.postId\r\n\t\t\t//url = process.env.REACT_APP_LOCAL_URL+'/comments/'+post.postId\r\n\r\n\t\t\tAxios.patch(url, {\r\n\t\t\t\t//댓글 작성\r\n\t\t\t\twithCredentials: true, //CORS\r\n\t\t\t\tdata: {\r\n\t\t\t\t\tusername: store.login.username,\r\n\t\t\t\t\tcontent: comment.value,\r\n\t\t\t\t},\r\n\t\t\t})\r\n\t\t\t\t.then((res) => {\r\n\t\t\t\t\tconsole.log(`${post.postId} 댓글 추가 성공`)\r\n\t\t\t\t\trefreshComment(null, setCommentCnt(res.data.comments.length)) //포스트 다시 불러오고 댓글 끝까지 보이기\r\n\t\t\t\t\tcomment.value = ''\r\n\t\t\t\t})\r\n\t\t\t\t.catch((e) => alert(e)) //실패\r\n\t\t}\r\n\t}\r\n\r\n\tconst refreshComment = (e, func) => {\r\n\t\t//댓글 가져오기\r\n\t\tlet url = process.env.REACT_APP_URL + '/comments/' + post.postId\r\n\t\t//url = process.env.REACT_APP_LOCAL_URL+'/comments/'+post.postId\r\n\r\n\t\tlet svg //refresh 아이콘\r\n\t\tif (e && e.target) svg = e.target.querySelector('svg')\r\n\t\tif (svg) svg.classList.add('refreshing') //refresh 애니메이션 시작\r\n\r\n\t\tAxios.get(url, {\r\n\t\t\twithCredentials: true,\r\n\t\t}) //댓글 새로고치기\r\n\t\t\t.then((res) => {\r\n\t\t\t\tconsole.log(`${post.postId} 댓글 새로고침`)\r\n\t\t\t\tsetComments(res.data) //댓글 저장\r\n\t\t\t\tif (svg) svg.classList.remove('refreshing') //refresh 애니메이션 끝\r\n\r\n\t\t\t\tif (func) func() //파라미터에 함수가 있으면 함수 실행\r\n\t\t\t})\r\n\t\t\t.catch((e) => {\r\n\t\t\t\t//실패\r\n\t\t\t\tif (svg) svg.classList.remove('refreshing') //refresh 애니메이션 끝\r\n\t\t\t\tconsole.log(e)\r\n\t\t\t})\r\n\t}\r\n\r\n\t//댓글 10개 더보기\r\n\tconst more = (e) => {\r\n\t\tsetCommentCnt(commentCnt + 10)\r\n\t}\r\n\r\n\t//댓글 더보기, 댓글 새로고침 하면 리사이즈\r\n\tuseEffect(() => {\r\n\t\tstore.resizeTextarea()\r\n\t}, [commentCnt, store, comments])\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<div className=\"post\">\r\n\t\t\t\t{location.pathname === '/' ? (\r\n\t\t\t\t\t<Meta\r\n\t\t\t\t\t\tdata={{\r\n\t\t\t\t\t\t\ttitle: '임기의 코딩 블로그 :D',\r\n\t\t\t\t\t\t\tdescription: 'imki123의 임기의 코딩 블로그입니다 :D',\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t/>\r\n\t\t\t\t) : (\r\n\t\t\t\t\t<Meta data={{ title: post.title, description: post.text, locale: 'ko' }} />\r\n\t\t\t\t)}\r\n\t\t\t\t{/* 태그 */}\r\n\t\t\t\t<div className=\"nav\">\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<span>Tag : </span>\r\n\t\t\t\t\t\t{post.tags &&\r\n\t\t\t\t\t\t\tpost.tags.map((i, idx) =>\r\n\t\t\t\t\t\t\t\tidx === 0 ? (\r\n\t\t\t\t\t\t\t\t\t<span key={i}>\r\n\t\t\t\t\t\t\t\t\t\t<Link to={i === 'home' ? '/' : `/tags/${i}`}>{i}</Link>\r\n\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t<span key={i}>\r\n\t\t\t\t\t\t\t\t\t\t, <Link to={`/tags/${i}`}>{i}</Link>\r\n\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t),\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t{/* 조회수 */}\r\n\t\t\t\t\t\t{/* post.postId !== 1 &&  */<span>조회수: {post.views ? post.views +1: 1}{', '}</span>}\r\n\t\t\t\t\t\t{/* 게시일자 */}\r\n\t\t\t\t\t\t{post && post.publishedDate.substring(0, 16).replace('T', ' ')}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<h2 className=\"postTitle\">{post.title}</h2>\r\n\t\t\t\t<div className=\"postContent\">\r\n\t\t\t\t\t{/* 본문 */}\r\n\t\t\t\t\t<div id=\"editor\">\r\n\t\t\t\t\t\t<div ref={quillRef} />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"hiddenText\">{post.text}</div>\r\n\r\n\t\t\t\t\t{/* 글 수정 삭제 버튼 */}\r\n\t\t\t\t\t{store.login && store.login.username === 'imki123' && (\r\n\t\t\t\t\t\t<div className=\"postButtons\">\r\n\t\t\t\t\t\t\t<Link to={`/quill/${post.postId}`} className=\"hover no-drag\">\r\n\t\t\t\t\t\t\t\t수정\r\n\t\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t\t&nbsp;\r\n\t\t\t\t\t\t\t<button onClick={deletePost} id={post.postId} style={{ background: 'red' }}>\r\n\t\t\t\t\t\t\t\t삭제\r\n\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t{/* 댓글 작성*/}\r\n\t\t\t\t{location.pathname !== '/' && (\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t<div className=\"writeComment\">\r\n\t\t\t\t\t\t\t<div className=\"commentProfile\">\r\n\t\t\t\t\t\t\t\t{!store.login ? (\r\n\t\t\t\t\t\t\t\t\t<img alt=\"PROFILE\" src={process.env.PUBLIC_URL + '/images/noavatar.png'} />\r\n\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t<img\r\n\t\t\t\t\t\t\t\t\t\talt=\"PROFILE\"\r\n\t\t\t\t\t\t\t\t\t\tsrc={store.login.imageUrl}\r\n\t\t\t\t\t\t\t\t\t\tonError={(e) => {\r\n\t\t\t\t\t\t\t\t\t\t\te.target.src = process.env.PUBLIC_URL + '/images/dog' + (Math.floor(Math.random() * (3 - 1 + 1)) + 1) + '.png'\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className=\"commentContent\">\r\n\t\t\t\t\t\t\t\t{store.login ? (\r\n\t\t\t\t\t\t\t\t\t<span className=\"commentUsername\">{store.login.username}</span>\r\n\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\t\t\t\tclassName=\"loginButton\"\r\n\t\t\t\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\t\t\t\thistory.push('/login')\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t로그인\r\n\t\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t{store.login ? <textarea onChange={store.resizeTextarea} placeholder=\" 댓글을 남겨주세요 :D\" /> : <textarea readOnly placeholder=\" 로그인 후에 댓글을 남겨주세요 :D\" />}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className=\"commentButtons\">\r\n\t\t\t\t\t\t\t{store.login && (\r\n\t\t\t\t\t\t\t\t<button className=\"commentButton\" onClick={postComment}>\r\n\t\t\t\t\t\t\t\t\t댓글작성\r\n\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</>\r\n\t\t\t\t)}\r\n\r\n\t\t\t\t{/* 댓글 목록 */}\r\n\t\t\t\t{comments && comments.length > 0 && (\r\n\t\t\t\t\t<div id=\"comments\">\r\n\t\t\t\t\t\t<div className=\"commentTitle\">\r\n\t\t\t\t\t\t\t<div className=\"commentCnt\">댓글 {comments.length}개</div>\r\n\t\t\t\t\t\t\t<span className=\"commentRefresh\" onClick={refreshComment}>\r\n\t\t\t\t\t\t\t\t댓글 새로고침 <RefreshIcon />\r\n\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t{comments.map((i, idx) => idx < commentCnt && <Comment post={post} comment={i} key={i.commentId} refreshComment={refreshComment} />)}\r\n\t\t\t\t\t\t{comments.length > commentCnt && (\r\n\t\t\t\t\t\t\t<div className=\"more\">\r\n\t\t\t\t\t\t\t\t<span className=\"moreButton\" onClick={more}>\r\n\t\t\t\t\t\t\t\t\t댓글 더보기\r\n\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t)}\r\n\t\t\t</div>\r\n\t\t\t{location.pathname === '/' && (\r\n\t\t\t\t<div className=\"homeLists\">\r\n\t\t\t\t\t<Recents title=\"최신글\" list={recents} />\r\n\t\t\t\t\t<Recents title=\"인기글\" list={popular} />\r\n\t\t\t\t\t<CommentLists list={recentComments} />\r\n\t\t\t\t</div>\r\n\t\t\t)}\r\n\t\t</>\r\n\t)\r\n}\r\nexport default React.memo(Post)\r\n","import React, { useEffect } from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { AppContext } from '../App'\r\nimport './NotFoundPage.css'\r\n\r\nfunction NotFoundPage() {\r\n\tconst store = React.useContext(AppContext)\r\n\tconst history = useHistory()\r\n\tuseEffect(() => {\r\n\t\t//console.log(`Not found page! https://imki123.github.io/`)\r\n\t\tstore.setReady(true)\r\n\t})\r\n\r\n\tconst goBack = e => {\r\n\t\thistory.go(-1)\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className=\"notFound\">\r\n\t\t\t<div className=\"title\">Not Found Page</div>\r\n\t\t\t<div className=\"goHome\">\r\n\t\t\t\t<span onClick={goBack}>Go back</span>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\nexport default React.memo(NotFoundPage)\r\n","import React, { useState, useEffect } from 'react'\r\nimport './Login.css'\r\nimport { Switch, Route, Link } from 'react-router-dom'\r\nimport { AppContext } from '../App'\r\nimport GoogleLogin from 'react-google-login'\r\nimport NaverLogin from 'react-naver-login'\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert'\r\n\r\nfunction Login({ history, match, location }) {\r\n\tconst href = window.location.href\r\n\tlet clientId\r\n\tlet naverId, naverUrl\r\n\tif (href.indexOf('localhost') > -1) {\r\n\t\t//로컬\r\n\t\tclientId = '605411712139-7nr29rfs5ihfu9uoev3igr5hpf4ubkle.apps.googleusercontent.com'\r\n\t\tnaverId = '1GCn3_4FurDb9SXHyzlw'\r\n\t\tnaverUrl = 'http://localhost:3000/login'\r\n\t} else {\r\n\t\t//서버\r\n\t\tclientId = '605411712139-eb3qqicskmkal2i9u26ppdhoq2jt0bd8.apps.googleusercontent.com'\r\n\t\tnaverId = 'kjVk1u480gzQO_XLX_hp'\r\n\t\tnaverUrl = 'https://imki123.github.io/login'\r\n\t}\r\n\tconst store = React.useContext(AppContext)\r\n\tlet browser = ''\r\n\tconst agent = navigator.userAgent.toLowerCase()\r\n\tif (agent.indexOf('chrome') > -1) browser = 'chrome'\r\n\telse if (agent.indexOf('safari') > -1) browser = 'safari'\r\n\r\n\tconst [checkUsername, setCheckUsername] = useState('')\r\n\tconst [checkPassword, setCheckPassword] = useState('')\r\n\tconst [checkPasswordConfirm, setCheckPasswordConfirm] = useState('')\r\n\tconst [buttonName, setButtonName] = useState('로그인')\r\n\r\n\tuseEffect(() => {\r\n\t\tstore.setReady(true)\r\n\t})\r\n\tuseEffect(() => {\r\n\t\t//이미 로그인이 되어있다면 스테이터스로 이동\r\n\t\tif (store.login && location.pathname === '/login') {\r\n\t\t\thistory.replace('/loginStatus')\r\n\t\t}\r\n\t\t//로그인이 안되어있으면 로그인으로 이동\r\n\t\tif (!store.login && location.pathname === '/loginStatus') {\r\n\t\t\thistory.replace('/login')\r\n\t\t}\r\n\t\tif (location.pathname.indexOf('register') > -1) {\r\n\t\t\tsetButtonName('회원가입')\r\n\t\t} else if (location.pathname.indexOf('withdraw') > -1) {\r\n\t\t\tsetButtonName('회원탈퇴')\r\n\t\t} else {\r\n\t\t\tsetButtonName('로그인')\r\n\t\t}\r\n\t}, [location, store.login, history])\r\n\r\n\tconst changeUsername = (e) => {\r\n\t\tconst pattern = /[^a-zA-Z0-9ㄱ-ㅎㅏ-ㅣ가-힣_]/g\r\n\t\tconst value = (e.target.value = e.target.value.replace(/\\s/g, '_').replace(pattern, ''))\r\n\t\tif (value.length < 3) {\r\n\t\t\t//3글자 이상\r\n\t\t\tsetCheckUsername('- 3자 이상 입력해주세요')\r\n\t\t} else if (value.length > 20) {\r\n\t\t\t//20글자 이하\r\n\t\t\tsetCheckUsername('- 20자 이하로 입력해주세요')\r\n\t\t} else {\r\n\t\t\tsetCheckUsername('')\r\n\t\t}\r\n\t}\r\n\tconst changePassword = (e) => {\r\n\t\tconst { value } = e.target\r\n\t\tconst passwordConfirm = document.querySelector('[name=passwordConfirm]')\r\n\r\n\t\t//비밀번호가 변경되면 비밀번호 확인은 초기화\r\n\t\tif (passwordConfirm) {\r\n\t\t\tpasswordConfirm.value = ''\r\n\t\t\tsetCheckPasswordConfirm('')\r\n\t\t}\r\n\r\n\t\tif (value.length < 6) {\r\n\t\t\t//6글자 이상\r\n\t\t\tsetCheckPassword('- 6자 이상 입력해주세요')\r\n\t\t} else if (value.length > 20) {\r\n\t\t\t//20글자 이하\r\n\t\t\tsetCheckPassword('- 20자 이하로 입력해주세요')\r\n\t\t} else {\r\n\t\t\tsetCheckPassword('')\r\n\t\t}\r\n\t}\r\n\tconst changePasswordConfirm = (e) => {\r\n\t\tconst { value } = e.target\r\n\t\tconst password = document.querySelector('[name=password]')\r\n\r\n\t\tif (value !== password.value && value.length >= 1) {\r\n\t\t\t//password와 같으면\r\n\t\t\tsetCheckPasswordConfirm('- 비밀번호가 일치하지 않습니다')\r\n\t\t} else {\r\n\t\t\tsetCheckPasswordConfirm('')\r\n\t\t}\r\n\t}\r\n\tconst clickButton = (e) => {\r\n\t\te.preventDefault()\r\n\t\tlet url = process.env.REACT_APP_URL + '/auth'\r\n\t\t//url = process.env.REACT_APP_LOCAL_URL+'/auth'\r\n\r\n\t\tconst pattern = /[^a-zA-Z0-9가-힣_]/g\r\n\t\tlet username = document.querySelector('[name=username]')\r\n\t\tif (username) username = username.value = username.value.replace(pattern, '')\r\n\t\tlet password = document.querySelector('[name=password]')\r\n\t\tif (password) password = password.value\r\n\r\n\t\tif (checkUsername === '' && password.length >= 1 && checkPassword === '' && checkPasswordConfirm === '') {\r\n\t\t\t//입력폼에 이상이 없으면 fetch submit\r\n\t\t\tif (buttonName === '회원가입') {\r\n\t\t\t\turl += '/register'\r\n\t\t\t\tfetch(url, {\r\n\t\t\t\t\tmode: 'cors',\r\n\t\t\t\t\tmethod: 'POST',\r\n\t\t\t\t\tcredentials: 'include',\r\n\t\t\t\t\theaders: { 'Content-Type': 'application/json' },\r\n\t\t\t\t\tbody: JSON.stringify({\r\n\t\t\t\t\t\tusername: username,\r\n\t\t\t\t\t\tpassword: password,\r\n\t\t\t\t\t}),\r\n\t\t\t\t})\r\n\t\t\t\t\t.then((res) => {\r\n\t\t\t\t\t\tif (res.status === 200 || res.status === 201) {\r\n\t\t\t\t\t\t\t//성공하면 아래 then 작동\r\n\t\t\t\t\t\t\tres.json().then((res) => {\r\n\t\t\t\t\t\t\t\talert(res.username + '님의 회원가입에 성공했습니다 :D')\r\n\t\t\t\t\t\t\t\thistory.go(-1)\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tlet message = '회원가입에 실패했습니다 :('\r\n\t\t\t\t\t\t\tif (res.status === 409) {\r\n\t\t\t\t\t\t\t\tmessage += '\\n이미 존재하는 아이디입니다.'\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tif (res.status === 400) {\r\n\t\t\t\t\t\t\t\tmessage += '\\n아이디나 비밀번호를 확인해주세요.'\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\talert(message)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t})\r\n\t\t\t\t\t.catch((e) => console.error(e))\r\n\t\t\t} else if (buttonName === '회원탈퇴') {\r\n\t\t\t\tif (window.confirm('계정 탈퇴시 복구할 수 없습니다. 정말로 탈퇴하시겠습니까?')) {\r\n\t\t\t\t\turl += '/withdraw'\r\n\t\t\t\t\tfetch(url, {\r\n\t\t\t\t\t\tmode: 'cors',\r\n\t\t\t\t\t\tmethod: 'DELETE',\r\n\t\t\t\t\t\tcredentials: 'include',\r\n\t\t\t\t\t\theaders: { 'Content-Type': 'application/json' },\r\n\t\t\t\t\t\tbody: JSON.stringify({\r\n\t\t\t\t\t\t\tusername: store.login.username,\r\n\t\t\t\t\t\t\tpassword: password,\r\n\t\t\t\t\t\t}),\r\n\t\t\t\t\t})\r\n\t\t\t\t\t\t.then((res) => {\r\n\t\t\t\t\t\t\tif (res.status === 200) {\r\n\t\t\t\t\t\t\t\t//삭제하면 Ok\r\n\t\t\t\t\t\t\t\talert('계정이 탈퇴되었습니다. 또 들러 주세요 :D')\r\n\t\t\t\t\t\t\t\thistory.push('/')\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tlet message = '탈퇴에 실패했습니다 :('\r\n\t\t\t\t\t\t\t\tif (res.status === 204) {\r\n\t\t\t\t\t\t\t\t\tmessage += '\\n존재하지 않는 아이디입니다.'\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tif (res.status === 401) {\r\n\t\t\t\t\t\t\t\t\tmessage += '\\n비밀번호를 확인해주세요.'\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\talert(message)\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t\t.catch((e) => console.error(e))\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\t//로그인\r\n\t\t\t\turl += '/login'\r\n\t\t\t\tfetch(url, {\r\n\t\t\t\t\tmode: 'cors',\r\n\t\t\t\t\tmethod: 'POST',\r\n\t\t\t\t\tcredentials: 'include',\r\n\t\t\t\t\theaders: { 'Content-Type': 'application/json' },\r\n\t\t\t\t\tbody: JSON.stringify({\r\n\t\t\t\t\t\tusername: username,\r\n\t\t\t\t\t\tpassword: password,\r\n\t\t\t\t\t}),\r\n\t\t\t\t})\r\n\t\t\t\t\t.then((res) => {\r\n\t\t\t\t\t\tif (res.status === 200 || res.status === 201) {\r\n\t\t\t\t\t\t\t//성공하면 아래 then 작동\r\n\t\t\t\t\t\t\tres.json().then((res) => {\r\n\t\t\t\t\t\t\t\tstore.setLogin(res)\r\n\t\t\t\t\t\t\t\talert(res.username + '님 환영합니다 :D')\r\n\t\t\t\t\t\t\t\thistory.go(-1)\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tlet message = '로그인에 실패했습니다 :('\r\n\t\t\t\t\t\t\tif (res.status === 401) {\r\n\t\t\t\t\t\t\t\tmessage += '\\n로그인 정보를 확인해주세요.'\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\talert(message)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t})\r\n\t\t\t\t\t.catch((e) => console.error(e))\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\talert('입력 정보를 확인해주세요.')\r\n\t\t}\r\n\t}\r\n\r\n\t//user정보를 받아서 서버에 토큰을 요청하기\r\n\tconst sendOAuth = (user) => {\r\n\t\tlet url = process.env.REACT_APP_URL + '/auth/oauth'\r\n\t\t//url = process.env.REACT_APP_LOCAL_URL + '/auth/oauth'\r\n\t\t//로그인 성공시 토큰에 name, email, imageUrl 저장\r\n\t\tfetch(url, {\r\n\t\t\tmode: 'cors',\r\n\t\t\tmethod: 'POST',\r\n\t\t\tcredentials: 'include',\r\n\t\t\theaders: { 'Content-Type': 'application/json' },\r\n\t\t\tbody: JSON.stringify({\r\n\t\t\t\tusername: user.username,\r\n\t\t\t\temail: user.email,\r\n\t\t\t\timageUrl: user.imageUrl,\r\n\t\t\t}),\r\n\t\t})\r\n\t\t\t.then((res) => {\r\n\t\t\t\tif (res.status === 200 || res.status === 201) {\r\n\t\t\t\t\t//성공하면 아래 then 작동\r\n\t\t\t\t\tres.json().then((res) => {\r\n\t\t\t\t\t\talert(res.username + '님 환영합니다 :D')\r\n\t\t\t\t\t\thistory.go(-1)\r\n\t\t\t\t\t\tstore.setLogin(res)\r\n\t\t\t\t\t})\r\n\t\t\t\t} else {\r\n\t\t\t\t\tlet message = '로그인에 실패했습니다 :('\r\n\t\t\t\t\tif (res.status === 401) {\r\n\t\t\t\t\t\tmessage += '\\n로그인 정보를 확인해주세요.'\r\n\t\t\t\t\t}\r\n\t\t\t\t\tconsole.log(message)\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\t.catch((e) => console.error(e))\r\n\t}\r\n\r\n\tconst successGoogle = (res) => {\r\n\t\tconsole.log('구글로그인 성공')\r\n\t\t//console.log(res)\r\n\t\tlet email = res.profileObj.email\r\n\t\tlet username = email.substring(0, email.indexOf('@')) + '_g'\r\n\t\tif (username === 'popping2606_g') username = 'imki123' //내아이디\r\n\r\n\t\tlet user = {\r\n\t\t\tusername: username,\r\n\t\t\temail: email,\r\n\t\t\timageUrl: res.profileObj.imageUrl,\r\n\t\t}\r\n\t\tsendOAuth(user)\r\n\t}\r\n\tconst failureGoogle = (res) => {\r\n\t\tconsole.log('구글로그인 실패', res)\r\n\t}\r\n\tconst successNaver = (res) => {\r\n\t\tconsole.log('네이버로그인 성공')\r\n\t\tconsole.log(res)\r\n\t\tlet email = res.email\r\n\t\tlet username = email.substring(0, email.indexOf('@')) + '_n'\r\n\t\tif (username === 'popping2606_n') username = 'imki123' //내아이디\r\n\r\n\t\tlet user = {\r\n\t\t\tusername: username,\r\n\t\t\temail: email,\r\n\t\t\timageUrl: res.profile_image,\r\n\t\t}\r\n\t\tsendOAuth(user)\r\n\t}\r\n\tconst failureNaver = (res) => {\r\n\t\tconsole.log('네이버로그인 실패', res)\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div id=\"background\">\r\n\t\t\t<div id=\"loginWrapper\">\r\n\t\t\t\t<Switch>\r\n\t\t\t\t\t<Route path={['/login', '/register', '/withdraw']}>\r\n\t\t\t\t\t\t{(buttonName === '로그인' || buttonName === '회원가입') && (\r\n\t\t\t\t\t\t\t<div className=\"oAuth\">\r\n\t\t\t\t\t\t\t\t<div className=\"login\">\r\n\t\t\t\t\t\t\t\t\t{/* 네이버로그인 */}\r\n\t\t\t\t\t\t\t\t\t<div style={{ fontWeight: 'bold' }}>*** 네이버 로그인 테스트 중 ***</div>\r\n\t\t\t\t\t\t\t\t\t<NaverLogin\r\n\t\t\t\t\t\t\t\t\t\tclientId={naverId}\r\n\t\t\t\t\t\t\t\t\t\tcallbackUrl={naverUrl}\r\n\t\t\t\t\t\t\t\t\t\trender={(props) => (\r\n\t\t\t\t\t\t\t\t\t\t\t<div className=\"naverLogin\" onClick={props.onClick}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<img alt=\"\" src={process.env.PUBLIC_URL + '/images/naver.png'} />\r\n\t\t\t\t\t\t\t\t\t\t\t\tLogin with Naver\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t\tonSuccess={successNaver}\r\n\t\t\t\t\t\t\t\t\t\tonFailure={failureNaver}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t\t\t{/* 구글로그인 */}\r\n\t\t\t\t\t\t\t\t\t<GoogleLogin\r\n\t\t\t\t\t\t\t\t\t\tbuttonText=\"Login with Google\"\r\n\t\t\t\t\t\t\t\t\t\tclassName=\"googleLogin\"\r\n\t\t\t\t\t\t\t\t\t\tclientId={clientId}\r\n\t\t\t\t\t\t\t\t\t\tonSuccess={successGoogle}\r\n\t\t\t\t\t\t\t\t\t\tonFailure={failureGoogle}\r\n\t\t\t\t\t\t\t\t\t\tcookiePolicy={'single_host_origin'}\r\n\t\t\t\t\t\t\t\t\t\tisSignedIn={true}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t<div className=\"googleWarning\">\r\n\t\t\t\t\t\t\t\t\t\t<span style={{ color: 'red' }}>인앱 브라우저(카카오톡 등)</span>는 <span>구글 로그인</span>을 지원하지 않습니다. 오류 발생 시 더보기(\r\n\t\t\t\t\t\t\t\t\t\t<MoreVertIcon />, <img alt=\"\" src={process.env.PUBLIC_URL + '/images/share.png'} />\r\n\t\t\t\t\t\t\t\t\t\t)를 눌러서 <span>다른 브라우저(Chrome, Safari 등)</span>에서 실행해주세요.\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t<form className=\"login\">\r\n\t\t\t\t\t\t\t<div className=\"text\">아이디</div>\r\n\t\t\t\t\t\t\t{buttonName === '회원탈퇴' ? <div>{store.login.username}</div> : <input name=\"username\" onChange={changeUsername} />}\r\n\r\n\t\t\t\t\t\t\t<div className=\"check\">{checkUsername}</div>\r\n\r\n\t\t\t\t\t\t\t<div className=\"text\">비밀번호</div>\r\n\t\t\t\t\t\t\t<input name=\"password\" type=\"password\" onChange={changePassword} autoComplete=\"currnet-password\" />\r\n\t\t\t\t\t\t\t<div className=\"check\">{checkPassword}</div>\r\n\r\n\t\t\t\t\t\t\t{buttonName === '회원가입' && (\r\n\t\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t\t<div className=\"text\">비밀번호 확인</div>\r\n\t\t\t\t\t\t\t\t\t<input name=\"passwordConfirm\" type=\"password\" onChange={changePasswordConfirm} autoComplete=\"currnet-password\" />\r\n\t\t\t\t\t\t\t\t\t<div className=\"check\" id=\"checkPasswordConfirm\">\r\n\t\t\t\t\t\t\t\t\t\t{checkPasswordConfirm}\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t\t)}\r\n\r\n\t\t\t\t\t\t\t{/* 버튼 */}\r\n\t\t\t\t\t\t\t{buttonName === '회원탈퇴' ? (\r\n\t\t\t\t\t\t\t\t<button style={{ background: 'red' }} onClick={clickButton}>\r\n\t\t\t\t\t\t\t\t\t{buttonName}\r\n\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t<button onClick={clickButton}>{buttonName}</button>\r\n\t\t\t\t\t\t\t)}\r\n\r\n\t\t\t\t\t\t\t{/* 로그인 or 회원가입 */}\r\n\t\t\t\t\t\t\t{buttonName === '로그인' && (\r\n\t\t\t\t\t\t\t\t<div className=\"loginLink\">\r\n\t\t\t\t\t\t\t\t\t<Link to=\"/register\">회원가입</Link>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t{buttonName === '회원가입' && (\r\n\t\t\t\t\t\t\t\t<div className=\"loginLink\">\r\n\t\t\t\t\t\t\t\t\t<Link to=\"/login\" className=\"loginLink\">\r\n\t\t\t\t\t\t\t\t\t\t로그인\r\n\t\t\t\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t)}\r\n\r\n\t\t\t\t\t\t\t{browser === 'safari' && (\r\n\t\t\t\t\t\t\t\t<div className=\"text\" style={{ fontSize: '0.8rem', textAlign: 'center' }}>\r\n\t\t\t\t\t\t\t\t\t(Safari의 설정을 변경해야 로그인이 가능합니다.)\r\n\t\t\t\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t\t\t\t설정 → Safari → 개인 정보 보호 및 보안 → <br />\r\n\t\t\t\t\t\t\t\t\t크로스 사이트 추적방지 OFF, 모든 쿠키 차단 OFF)\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t</form>\r\n\t\t\t\t\t</Route>\r\n\t\t\t\t\t<Route path={['/loginStatus']}>\r\n\t\t\t\t\t\t{store.login ? (\r\n\t\t\t\t\t\t\t<div className=\"center\">\r\n\t\t\t\t\t\t\t\t{store.login.username}님은 현재 <span style={{ color: 'green' }}>로그인</span> 되어있습니다 :D\r\n\t\t\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t\t\t<span style={{ fontSize: '0.8rem' }}>(로그인은 최대 일주일간 유지됩니다.)</span>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t<div className=\"login center\">\r\n\t\t\t\t\t\t\t\t재 로그인이 필요합니다\r\n\t\t\t\t\t\t\t\t<Link to=\"/login\" className=\"loginLink\">\r\n\t\t\t\t\t\t\t\t\t로그인\r\n\t\t\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t</Route>\r\n\t\t\t\t</Switch>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\nexport default React.memo(Login)\r\n","import React, { useEffect, useState } from 'react'\r\nimport './Quill.css'\r\nimport 'quill/dist/quill.snow.css'\r\nimport { useQuill } from 'react-quilljs'\r\nimport imageCompress from 'quill-image-compress'\r\nimport { AppContext } from '../App'\r\nimport Axios from 'axios'\r\n\r\n\r\nfunction Quill({ match, location, history }) {\r\n\tconst store = React.useContext(AppContext)\r\n\tlet { postId } = match.params\r\n\tconst [post, setPost] = useState()\r\n\tconst [ready, setReady] = useState()\r\n\tconst [subMenus, setSubMenus] = useState()\r\n\r\n\tconst modules = {\r\n\t\ttoolbar: [\r\n\t\t\t['bold', 'italic', 'underline', 'strike'],\r\n\t\t\t[{ size: ['small', false, 'large', 'huge'] }, { header: 1 }, { header: 2 }],\r\n\t\t\t[{ align: [] }],\r\n\t\t\t[{ color: [] }, { background: [] }],\r\n\t\t\t[{ indent: '-1' }, { indent: '+1' }],\r\n\t\t\t[{ list: 'ordered' }, { list: 'bullet' }],\r\n\t\t\t['code-block', 'blockquote'],\r\n\t\t\t['link', 'image', 'video'],\r\n\t\t\t['clean'],\r\n\t\t],\r\n\t\tsyntax: true,\r\n\t\timageCompress: {\r\n\t\t\tquality: 0.7, // default\r\n\t\t\tmaxWidth: 1000, // default 1000\r\n\t\t\tmaxHeight: 1000, // default 1000\r\n\t\t\timageType: 'image/jpeg', // default\r\n\t\t\tdebug: true, // default\r\n\t\t  }\r\n\t}\r\n\tconst formats = ['bold', 'italic', 'underline', 'strike', 'code-block', 'blockquote', 'size', 'header', 'align', 'color', 'background', 'indent', 'list', 'link', 'image', 'video', 'clean']\r\n\r\n\tconst { quill, quillRef, Quill } = useQuill({ modules, formats })\r\n\tif (Quill && !quill) {\r\n\t\t// For execute this line only once.\r\n\t\tQuill.register('modules/imageCompress', imageCompress)\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\t\tsetReady(false)\r\n\t\t//포스트 불러오기 axios\r\n\t\tif (postId !== undefined && Number(postId) >= 1 && quill) {\r\n\t\t\t//postId가 없으면 포스트 내용 가져오지 않기\r\n\t\t\tlet url = process.env.REACT_APP_URL + '/posts/' + postId\r\n\t\t\t//url = process.env.REACT_APP_LOCAL_URL+'/posts/' + postId\r\n\r\n\t\t\tAxios.get(url, {\r\n\t\t\t\twithCredentials: true,\r\n\t\t\t}) //포스트 불러오기\r\n\t\t\t\t.then((res) => {\r\n\t\t\t\t\tlet title = document.querySelector('[name=title]')\r\n\t\t\t\t\ttitle.value = res.data.title\r\n\r\n\t\t\t\t\tconst tags = document.querySelectorAll('[type=radio]')\r\n\t\t\t\t\tfor (let i of tags) {\r\n\t\t\t\t\t\t//체크 초기화\r\n\t\t\t\t\t\ti.checked = false\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (res.data.tags) {\r\n\t\t\t\t\t\t//체크박스 체크\r\n\t\t\t\t\t\tconst mainMenu = document.getElementById(res.data.tags[0])\r\n\t\t\t\t\t\tif (mainMenu) mainMenu.checked = true\r\n\t\t\t\t\t\tfor (let i of store.menus) {\r\n\t\t\t\t\t\t\tif (i.name === res.data.tags[0]) {\r\n\t\t\t\t\t\t\t\t//선택된 메인메뉴의 서브메뉴를 그리기\r\n\t\t\t\t\t\t\t\tsetSubMenus(i.subMenus)\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t//포스트바디 가져오기\r\n\t\t\t\t\turl = process.env.REACT_APP_URL + '/posts/postBody/' + postId\r\n\t\t\t\t\t//url = process.env.REACT_APP_LOCAL_URL + '/posts/postBody/' + postId\r\n\t\t\t\t\tAxios.get(url)\r\n\t\t\t\t\t\t.then((res2) => {\r\n\t\t\t\t\t\t\tif (typeof res2.data.body === 'string') quill.setText(res2.data.body)\r\n\t\t\t\t\t\t\t//body가 string이면 setText\r\n\t\t\t\t\t\t\telse quill.setContents(res2.data.body) //body가 string이 아니면 setContents : Delta\r\n\t\t\t\t\t\t\tsetPost({\r\n\t\t\t\t\t\t\t\t...res.data,\r\n\t\t\t\t\t\t\t\tbody: res2.data.body,\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t\t.catch((e) => {\r\n\t\t\t\t\t\t\talert(e)\r\n\t\t\t\t\t\t\tsetReady(true)\r\n\t\t\t\t\t\t}) //실패\r\n\t\t\t\t})\r\n\t\t\t\t.catch((e) => {\r\n\t\t\t\t\talert(e)\r\n\t\t\t\t\tsetReady(true)\r\n\t\t\t\t}) //실패\r\n\t\t}else{\r\n\t\t\tsetReady(true)\r\n\t\t}\r\n\t}, [location, quill, postId, store.menus])\r\n\r\n\tuseEffect(() => {\r\n\t\tif (subMenus && post) {\r\n\t\t\tconst subMenu = document.getElementById(post.tags[1])\r\n\t\t\tif (subMenu) subMenu.checked = true\r\n\t\t}\r\n\t\tconst newSubMenu = document.querySelector('[name=newSubMenu]')\r\n\t\tif (newSubMenu) newSubMenu.value = ''\r\n\t}, [subMenus, post])\r\n\r\n\tuseEffect(() => {\r\n\t\tstore.setReady(false)\r\n\t\tif(post || ready){\r\n\t\t\tstore.setReady(true)\r\n\t\t}\r\n\t})\r\n\r\n\t//글 작성 or 수정\r\n\tconst clickPost = (e) => {\r\n\t\tif (!store.login || (store.login && store.login.username !== 'imki123')) {\r\n\t\t\talert('글 작성은 블로그 주인만 가능합니다 ^^;')\r\n\t\t\treturn\r\n\t\t}\r\n\t\tif (!window.confirm('글을 게시하시겠습니까?')) {\r\n\t\t\treturn\r\n\t\t}\r\n\t\t//제목, 내용, 태그가 있는지 검사\r\n\t\tlet title = document.querySelector('[name=title]')\r\n\t\tconst content = quill.getContents()\r\n\t\tconst text = quill.getText()\r\n\t\tconst mainMenu = document.querySelector('[name=mainMenu]:checked')\r\n\t\tlet tags = []\r\n\t\tconst subMenu = document.querySelector('[name=subMenu]:checked')\r\n\t\tconst newMainMenu = document.querySelector('[name=newMainMenu]')\r\n\t\tconst newSubMenu = document.querySelector('[name=newSubMenu]')\r\n\r\n\t\tif (mainMenu) {\r\n\t\t\ttags[0] = mainMenu.value\r\n\t\t}\r\n\t\tif (newMainMenu.value !== '') {\r\n\t\t\ttags[0] = newMainMenu.value\r\n\t\t}\r\n\t\tif (subMenu) {\r\n\t\t\tif (subMenu.value !== '') tags[1] = subMenu.value //체크 된 서브메뉴 추가\r\n\t\t}\r\n\t\tif (newSubMenu.value !== '') {\r\n\t\t\ttags[1] = newSubMenu.value\r\n\t\t}\r\n\r\n\t\tif (title.value.length === 0) {\r\n\t\t\talert('제목을 입력해주세요.')\r\n\t\t\treturn\r\n\t\t} else if (quill.getLength() === 1) {\r\n\t\t\talert('내용을 입력해주세요.')\r\n\t\t\treturn\r\n\t\t} else if (tags.length < 1 && newMainMenu.value === '') {\r\n\t\t\talert('메인메뉴를 1개 선택해주세요.')\r\n\t\t\treturn\r\n\t\t}\r\n\r\n\t\t//url에 POST 또는 PATCH 요청\r\n\t\tlet url = process.env.REACT_APP_URL + '/posts'\r\n\t\t//url = process.env.REACT_APP_LOCAL_URL + '/posts'\r\n\t\tlet method = 'POST',\r\n\t\t\tmessage = '글 작성 성공'\r\n\t\tif (e.target.id === 'PATCH') {\r\n\t\t\tif (postId !== undefined && Number(postId) >= 1) {\r\n\t\t\t\turl += '/' + postId\r\n\t\t\t\tmethod = 'PATCH'\r\n\t\t\t\tmessage = '글 수정 성공'\r\n\t\t\t} else {\r\n\t\t\t\tconsole.log('postId 비정상, 글 수정 실패')\r\n\t\t\t\treturn\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tAxios(url, {\r\n\t\t\t//포스트 작성, 수정 (최대 10mb. koa-bodyparser에서 설정.)\r\n\t\t\tmethod: method,\r\n\t\t\twithCredentials: true, //CORS\r\n\t\t\tdata: {\r\n\t\t\t\ttitle: title.value,\r\n\t\t\t\tbody: content,\r\n\t\t\t\ttext: text,\r\n\t\t\t\ttags: tags,\r\n\t\t\t},\r\n\t\t})\r\n\t\t\t.then((res) => {\r\n\t\t\t\talert(message) //성공\r\n\t\t\t\tpostId = res.data.postId\r\n\t\t\t\tif (method === 'POST') {\r\n\t\t\t\t\t//글 작성시 menus 카운트 증가\r\n\t\t\t\t\tAxios()\r\n\t\t\t\t}\r\n\t\t\t\tif (postId > 1) {\r\n\t\t\t\t\thistory.push(`/posts/${postId}`) //수정 성공하면 해당 글로 이동함\r\n\t\t\t\t} else {\r\n\t\t\t\t\thistory.push(`/posts/1`) //인사말은 홈으로 이동\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\t.catch((e) => alert(e)) //실패\r\n\t}\r\n\r\n\t// 화면 리사이즈시 editor 아래 마진 변경\r\n\tuseEffect(() => {\r\n\t\tconst editor = document.querySelector('#editor')\r\n\t\tconst toolbar = document.querySelector('.ql-toolbar')\r\n\t\tif (editor && toolbar) {\r\n\t\t\teditor.style.marginBottom = toolbar.clientHeight + 10 + 'px'\r\n\t\t}\r\n\t\twindow.removeEventListener('resize', function () {})\r\n\t\twindow.addEventListener('resize', function () {\r\n\t\t\tif (editor && toolbar) {\r\n\t\t\t\teditor.style.marginBottom = toolbar.clientHeight + 10 + 'px'\r\n\t\t\t}\r\n\t\t})\r\n\t}, [location])\r\n\r\n\t//메인메뉴 추가시 라디오박스 체크 해제, 띄어쓰기를 _로 변경\r\n\tconst changeMainMenu = (e) => {\r\n\t\tif (store.menus) {\r\n\t\t\tfor (let i of store.menus) {\r\n\t\t\t\tif (i.name === e.target.value) {\r\n\t\t\t\t\tsetSubMenus(i.subMenus)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (e.target.type !== 'radio') {\r\n\t\t\t//인풋박스 입력하면 라디오 체크 해제\r\n\t\t\te.target.value = e.target.value.replace(/\\s/g, '_')\r\n\t\t\tconst mainMenu = document.querySelector('[name=mainMenu]:checked')\r\n\t\t\tif (mainMenu) mainMenu.checked = false\r\n\t\t}\r\n\t}\r\n\t//서브메뉴 추가시 라디오박스 체크 해제, 띄어쓰기를 _로 변경\r\n\tconst changeSubMenu = (e) => {\r\n\t\tif (e.target.type !== 'radio') {\r\n\t\t\t//인풋박스 입력하면 라디오 체크 해제\r\n\t\t\te.target.value = e.target.value.replace(/\\s/g, '_')\r\n\t\t\tconst subMenu = document.querySelector('[name=subMenu]:checked')\r\n\t\t\tif (subMenu) subMenu.checked = false\r\n\t\t} else {\r\n\t\t\tconst newSubMenu = document.querySelector('[name=newSubMenu]')\r\n\t\t\tif (newSubMenu) newSubMenu.value = ''\r\n\t\t}\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className=\"quill\">\r\n\t\t\t<div className=\"quillTitle\">\r\n\t\t\t\t<input name=\"title\" placeholder=\"제목\" />\r\n\t\t\t</div>\r\n\t\t\t<div id=\"editor\">\r\n\t\t\t\t<div ref={quillRef} />\r\n\t\t\t\t<div id=\"tags\" className=\"no-drag\">\r\n\t\t\t\t\t<div id=\"tagsTitle\">\r\n\t\t\t\t\t\ttags\r\n\t\t\t\t\t\t{postId !== undefined && Number(postId) >= 1 ? (\r\n\t\t\t\t\t\t\t<button className=\"editorButton\" onClick={clickPost} id=\"PATCH\">\r\n\t\t\t\t\t\t\t\t글 수정\r\n\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t<button className=\"editorButton\" onClick={clickPost}>\r\n\t\t\t\t\t\t\t\t새글 작성\r\n\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t메인메뉴:\r\n\t\t\t\t\t\t{store.menus &&\r\n\t\t\t\t\t\t\tstore.menus.map((i) => (\r\n\t\t\t\t\t\t\t\t<label key={i.name}>\r\n\t\t\t\t\t\t\t\t\t<input type=\"radio\" name=\"mainMenu\" value={i.name} id={i.name} onClick={changeMainMenu} />\r\n\t\t\t\t\t\t\t\t\t{i.name}\r\n\t\t\t\t\t\t\t\t</label>\r\n\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t<input name=\"newMainMenu\" placeholder=\"메인메뉴 추가\" onChange={changeMainMenu} autoComplete=\"off\"></input>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t서브메뉴:\r\n\t\t\t\t\t\t<label>\r\n\t\t\t\t\t\t\t<input type=\"radio\" name=\"subMenu\" value=\"\" onClick={changeSubMenu} /> 선택안함\r\n\t\t\t\t\t\t</label>\r\n\t\t\t\t\t\t{subMenus &&\r\n\t\t\t\t\t\t\tsubMenus.map((i) => (\r\n\t\t\t\t\t\t\t\t<label key={i.name}>\r\n\t\t\t\t\t\t\t\t\t<input type=\"radio\" name=\"subMenu\" value={i.name} id={i.name} onClick={changeSubMenu} /> {i.name}\r\n\t\t\t\t\t\t\t\t</label>\r\n\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t<input name=\"newSubMenu\" placeholder=\"서브메뉴 추가\" autoComplete=\"off\" onChange={changeSubMenu}></input>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\nexport default React.memo(Quill)\r\n","import React, { useEffect } from 'react'\r\nimport './Paging.css'\r\nimport { NavLink, useLocation } from 'react-router-dom'\r\nimport queryString from 'query-string'\r\n\r\nfunction Paging(props) {\r\n\tconst { postCount } = props\r\n\tconst location = useLocation()\r\n\tconst search = queryString.parse(location.search)\r\n\tlet paging = null\r\n\tconst pages = []\r\n\tif (postCount) {\r\n\t\tconst page = Number(search.page) || 1\r\n\t\tconst startPost = postCount - (page - 1) * 10\r\n\t\tpaging = {\r\n\t\t\tpage: page,\r\n\t\t\tlastPage: Math.ceil(postCount / 10),\r\n\t\t\tpostCount: postCount,\r\n\t\t\tstartPost: startPost,\r\n\t\t}\r\n\r\n\t\tfor (let i = 0; i < paging.lastPage; i++) {\r\n\t\t\tpages.push(i + 1)\r\n\t\t}\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\t\tconst links = document.querySelectorAll('.paging a')\r\n\t\tfor (let i = 0; i < links.length; i++) {\r\n\t\t\tif (links[i].innerHTML === search.page) {\r\n\t\t\t\tlinks[i].className = 'activePage'\r\n\t\t\t} else {\r\n\t\t\t\tlinks[i].className = 'inactivePage'\r\n\t\t\t}\r\n\t\t\tif (search.page === undefined) {\r\n\t\t\t\t//search에 page가 없으면 1을 activePage로 설정\r\n\t\t\t\tif (links[i].innerHTML === '1') {\r\n\t\t\t\t\tlinks[i].className = 'activePage'\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}, [search, postCount])\r\n\r\n\treturn (\r\n\t\t<div className=\"paging\">\r\n\t\t\t{pages.map((p, idx) => (\r\n\t\t\t\t<NavLink path={location.pathname} to={`${location.pathname}?page=${p}`} className=\"inactivePage\" key={idx}>\r\n\t\t\t\t\t{p}\r\n\t\t\t\t</NavLink>\r\n\t\t\t))}\r\n\t\t</div>\r\n\t)\r\n}\r\nexport default React.memo(Paging)\r\n","import Axios from 'axios'\r\nimport React, { useEffect, useState } from 'react'\r\nimport { AppContext } from '../App'\r\nimport Paging from './Paging'\r\nimport PostList from './PostList'\r\n\r\nimport './Tags.css'\r\n\r\nfunction Tags({ match, location, history }) {\r\n\tconst store = React.useContext(AppContext)\r\n\tconst { tag } = match.params\r\n\tconst [lists, setLists] = useState([])\r\n\tuseEffect(() => {\r\n\t\t\r\n\t\tlet url = process.env.REACT_APP_URL + '/posts/tag/' + tag + location.search\r\n\t\t//url = process.env.REACT_APP_LOCAL_URL + '/posts/tag/' + tag + location.search\r\n\r\n\t\tAxios.get(url, {\r\n\t\t\twithCredentials: true,\r\n\t\t})\r\n\t\t\t.then((res) => {\r\n\t\t\t\tif(res.data.list.length < 1){\r\n\t\t\t\t\talert('찾으시는 페이지가 없습니다.')\r\n\t\t\t\t\thistory.go(-1)\r\n\t\t\t\t}else{\r\n\t\t\t\t\tsetLists(res.data.list)\r\n\t\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\t.catch((e) => console.log(e)) //실패\r\n\t},[tag, location, history])\r\n\t\r\n\tuseEffect(() => {\r\n\t\tstore.setReady(false)\r\n\t\tif(lists){\r\n\t\t\tstore.setReady(true)\r\n\t\t}\r\n\t})\r\n\r\n\treturn (\r\n\t\t<div className=\"postListWrapper\">\r\n\t\t\t<div className=\"postListTitle\">{tag.substring(0,1).toUpperCase() + tag.substring(1)}</div>\r\n\t\t\t{lists && lists.map((i, idx) => <PostList no={lists.length - idx} list={i} key={i.postId} />)}\r\n\t\t\t{<Paging postCount={lists.length} />}\r\n\t\t</div>\r\n\t)\r\n}\r\nexport default React.memo(Tags)\r\n","import React, { useEffect } from 'react'\r\nimport AddCircleOutlineIcon from '@material-ui/icons/AddCircleOutline'\r\nimport ArrowUpwardIcon from '@material-ui/icons/ArrowUpward'\r\nimport './Content.css'\r\nimport { Link, Route, useLocation, Switch } from 'react-router-dom'\r\nimport { AppContext } from '../App'\r\n\r\nimport Post from './Post'\r\nimport NotFoundPage from './NotFoundPage'\r\nimport Login from './Login'\r\nimport Quill from './Quill'\r\nimport Tags from './Tags'\r\nimport CommentLists from './CommentLists'\r\n\r\nfunction Content(props) {\r\n\tconst store = React.useContext(AppContext)\r\n\tconst location = useLocation() //hash 사용\r\n\r\n\tuseEffect(() => {\r\n\t\tconst resize = () => {\r\n\t\t\tstore.resizeTextarea()\r\n\t\t}\r\n\r\n\t\twindow.addEventListener('resize', resize)\r\n\t\tconst loading = document.querySelector('#loading')\r\n\t\tconst views = document.querySelectorAll('.post')\r\n\t\tif (store.ready) {\r\n\t\t\tif (loading) loading.style.display = 'none'\r\n\t\t\tif (views) {\r\n\t\t\t\tfor(let i of views){\r\n\t\t\t\t\ti.style.display = 'block'\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tsetTimeout(function () {\r\n\t\t\t\tstore.resizeTextarea()\r\n\t\t\t}, 10)\r\n\t\t} else {\r\n\t\t\tif (loading) loading.style.display = 'flex'\r\n\t\t\tif (views) {\r\n\t\t\t\tfor(let i of views){\r\n\t\t\t\t\ti.style.display = 'none'\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn window.removeEventListener('resize', resize)\r\n\t}, [location.hash, store])\r\n\r\n\tconst scrollUp = (e) => {\r\n\t\t// content의 스크롤을 가장 위로\r\n\t\tconst content = document.querySelector('#content')\r\n\t\tlet contentScroll = content.scrollTop\r\n\t\tlet dif = contentScroll / 50\r\n\t\tconst frame = setInterval(function () {\r\n\t\t\tif (content.scrollTop <= 0) {\r\n\t\t\t\tclearInterval(frame)\r\n\t\t\t} else {\r\n\t\t\t\tcontent.scrollTop -= dif\r\n\t\t\t}\r\n\t\t}, 10)\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div id=\"content\" className=\"slideMenu\">\r\n\t\t\t{/* FAB */}\r\n\t\t\t{store.login && store.login.username === 'imki123' && (\r\n\t\t\t\t<Link id=\"postFAB\" className=\"hover\" to=\"/quill\">\r\n\t\t\t\t\t<AddCircleOutlineIcon />\r\n\t\t\t\t</Link>\r\n\t\t\t)}\r\n\t\t\t<div id=\"scrollFAB\" className=\"hover\" onClick={scrollUp}>\r\n\t\t\t\t<ArrowUpwardIcon />\r\n\t\t\t</div>\r\n\t\t\t<div id=\"menuFAB\" className=\"hover\" onClick={store.slideMenu}>\r\n\t\t\t\t<img alt=\"MENU\" src={process.env.PUBLIC_URL + '/images/guide_icon.png'} />\r\n\t\t\t</div>\r\n\r\n\t\t\t{/* 로딩 */}\r\n\t\t\t<div id=\"loading\">\r\n\t\t\t\t<img alt=\"Loading\" src={process.env.PUBLIC_URL + '/images/loading.gif'} />\r\n\t\t\t</div>\r\n\r\n\t\t\t<Switch>\r\n\t\t\t\t<Route path={['/login', '/register', '/loginStatus', '/withdraw']} component={Login} />\r\n\t\t\t\t<Route path=\"/quill/:postId?\" component={Quill} />\r\n\t\t\t\t<Route path=\"/tags/:tag\" component={Tags} />\r\n\t\t\t\t<Route path=\"/comments\" component={CommentLists} />\r\n\t\t\t\t<Route path=\"/\" exact component={Post} />\r\n\t\t\t\t<Route path=\"/posts/:postId\" component={Post} />\r\n\t\t\t\t<Route path=\"/NotFoundPage\" component={NotFoundPage} />\r\n\t\t\t\t<Route path=\"*\" component={NotFoundPage} />\r\n\t\t\t</Switch>\r\n\r\n\t\t\t{/* 텍스트 에어리어 높이 조정을 위한 안보이는 가짜 텍스트에어리어 */}\r\n\t\t\t<textarea disabled id=\"fakeTextarea\" />\r\n\t\t</div>\r\n\t)\r\n}\r\nexport default React.memo(Content)\r\n","import React from 'react'\r\nimport './Setting.css'\r\nimport { Link } from 'react-router-dom'\r\nimport { AppContext } from '../App'\r\nimport { GoogleLogout } from 'react-google-login'\r\n\r\nfunction Setting(props) {\r\n\tconst store = React.useContext(AppContext)\r\n\tconst href = window.location.href\r\n\tlet clientId\r\n\tif (href.indexOf('localhost') > -1) {\r\n\t\t//로컬\r\n\t\tclientId = '605411712139-7nr29rfs5ihfu9uoev3igr5hpf4ubkle.apps.googleusercontent.com'\r\n\t} else {\r\n\t\t//서버\r\n\t\tclientId = '605411712139-eb3qqicskmkal2i9u26ppdhoq2jt0bd8.apps.googleusercontent.com'\r\n\t}\r\n\r\n\tconst closeSetting = (e) => {\r\n\t\tconst settingWrapper = document.querySelector('#settingWrapper')\r\n\t\te.stopPropagation()\r\n\t\tsetTimeout(function () {\r\n\t\t\tsettingWrapper.style.display = 'none'\r\n\t\t}, 200)\r\n\t}\r\n\r\n\tconst logout = (e) => {\r\n\t\tif (window.confirm('로그아웃 하시겠습니까?')) {\r\n\t\t\tlet url = process.env.REACT_APP_URL + '/auth/logout'\r\n\t\t\t//url = process.env.REACT_APP_LOCAL_URL + '/auth/logout'\r\n\r\n\t\t\tfetch(url, {\r\n\t\t\t\tmode: 'cors',\r\n\t\t\t\tmethod: 'POST',\r\n\t\t\t\tcredentials: 'include',\r\n\t\t\t})\r\n\t\t\t\t.then((res) => {\r\n\t\t\t\t\tif (res.status === 204) {\r\n\t\t\t\t\t\t//로그아웃 하면 204\r\n\t\t\t\t\t\tconsole.log('로그아웃 성공')\r\n\t\t\t\t\t\tstore.setLogin(false)\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tconsole.log('로그아웃 실패')\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t\t.catch((e) => console.error(e))\r\n\t\t}\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div id=\"settingWrapper\" onClick={closeSetting}>\r\n\t\t\t<div id=\"setting\">\r\n\t\t\t\t<div id=\"settingListWrapper\">\r\n\t\t\t\t\t{store.login ? (\r\n\t\t\t\t\t\t<Link className=\"settingList\" to=\"/loginStatus\">\r\n\t\t\t\t\t\t\t{store.login.username}\r\n\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t) : (\r\n\t\t\t\t\t\t<Link className=\"settingList\" to=\"/login\">\r\n\t\t\t\t\t\t\t로그인\r\n\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t)}\r\n\t\t\t\t\t{store.login && (\r\n\t\t\t\t\t\t<div onClick={logout}>\r\n\t\t\t\t\t\t\t<GoogleLogout\r\n\t\t\t\t\t\t\t\tbuttonText=\"로그아웃\"\r\n\t\t\t\t\t\t\t\tclassName=\"settingList googleLogout\"\r\n\t\t\t\t\t\t\t\tclientId={clientId}\r\n\t\t\t\t\t\t\t\tonSuccess={(res) => {\r\n\t\t\t\t\t\t\t\t\tconsole.log('logout')\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\tonFailure={(res) => {\r\n\t\t\t\t\t\t\t\t\tconsole.log(res)\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\tcookiePolicy={'single_host_origin'}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t)}\r\n\t\t\t\t\t{!store.login && (\r\n\t\t\t\t\t\t<Link className=\"settingList\" to=\"/register\">\r\n\t\t\t\t\t\t\t회원가입\r\n\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t)}\r\n\t\t\t\t\t{store.login && !store.login.oAuth && (\r\n\t\t\t\t\t\t<Link className=\"settingList\" to=\"/withdraw\">\r\n\t\t\t\t\t\t\t회원탈퇴\r\n\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\nexport default React.memo(Setting)\r\n","import React, { createContext, useEffect, useState } from 'react'\r\nimport './App.css'\r\nimport { useLocation } from 'react-router-dom'\r\n\r\nimport Header from './components/Header'\r\nimport Body from './components/Body'\r\nimport Guide from './components/Guide'\r\nimport Content from './components/Content'\r\nimport Setting from './components/Setting'\r\nimport Axios from 'axios'\r\nimport Meta from './components/Meta'\r\n\r\nconst AppContext = createContext()\r\n\r\nfunction App() {\r\n\tconst location = useLocation() //페이지 경로 변경 감지\r\n\tconst [ready, setReady] = useState(false)\r\n\tconst [login, setLogin] = useState(false)\r\n\tconst [menus, setMenus] = useState([\r\n\t\t{ name: 'home', count: 1, order: 1 },\r\n\t\t{ name: 'programming', order: 2 },\r\n\t\t{ name: 'article', order: 3 },\r\n\t])\r\n\r\n\tconst resizeTextarea = (e) => {\r\n\t\t//텍스트에어리어를 찾아서 크기를 글자 높이에 맞게 변경하기\r\n\t\t//textarea 높이 조정\r\n\t\tconst fake = document.querySelector('#fakeTextarea')\r\n\t\tlet textareas = []\r\n\t\tif (e && e.target) {\r\n\t\t\ttextareas.push(e.target)\r\n\t\t} else {\r\n\t\t\ttextareas = document.querySelectorAll('textarea')\r\n\t\t}\r\n\r\n\t\tif (textareas && fake) {\r\n\t\t\tfor (let i = 0; i < textareas.length; i++) {\r\n\t\t\t\tfake.style.height = '1px'\r\n\t\t\t\tfake.style.width = textareas[i].clientWidth + 'px'\r\n\t\t\t\tfake.value = textareas[i].value\r\n\t\t\t\ttextareas[i].style.height = 5 + fake.scrollHeight + 'px'\r\n\t\t\t}\r\n\t\t\tfake.value = ''\r\n\t\t\tfake.style.height = '0px'\r\n\t\t}\r\n\t}\r\n\r\n\tconst slideMenu = () => {\r\n\t\t//메뉴버튼 클릭 시 메뉴 보이기 & 숨기기\r\n\t\tconst body = document.querySelector('#body')\r\n\t\tconst guideWrapper = document.querySelector('#guideWrapper')\r\n\t\tconst content = document.querySelector('#content')\r\n\r\n\t\tif (!guideWrapper.style.left) {\r\n\t\t\t//스타일 속성이 없으면 초기값 지정\r\n\t\t\tif (body.clientWidth < 500) {\r\n\t\t\t\tguideWrapper.style.left = '-312px' //모바일\r\n\t\t\t} else {\r\n\t\t\t\tguideWrapper.style.left = '0px' //PC\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (guideWrapper.style.left && guideWrapper.style.left.replace('px', '') > -100) {\r\n\t\t\t//메뉴 닫기\r\n\t\t\tguideWrapper.parentNode.style.width = '0' // 회색 0\r\n\t\t\tcontent.style.width = 'calc(100% - 16px)' //콘텐트 100% - 16px\r\n\t\t\tguideWrapper.style.left = '-312px' // 메뉴 왼쪽으로\r\n\t\t} else {\r\n\t\t\t//메뉴 열기\r\n\t\t\tguideWrapper.style.left = '0px' // 메뉴 0\r\n\t\t\tif (body.clientWidth < 500) {\r\n\t\t\t\t//모바일\r\n\t\t\t\tguideWrapper.parentNode.style.width = '100%' // 회색 100%\r\n\t\t\t} else {\r\n\t\t\t\t//PC\r\n\t\t\t\tcontent.style.width = `calc(100% - 312px - 16px)`\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t//모바일에서 회색부분 클릭 시 메뉴 닫기\r\n\tconst closeMenuMobile = (e) => {\r\n\t\tconst body = document.querySelector('#body')\r\n\t\tconst guideWrapper = document.querySelector('#guideWrapper')\r\n\t\tconst content = document.querySelector('#content')\r\n\r\n\t\tguideWrapper.parentNode.style.width = '0' // 회색 0\r\n\t\tif (body.clientWidth < 500) {\r\n\t\t\t//모바일\r\n\t\t\tguideWrapper.style.left = '-312px' // 메뉴 0\r\n\t\t\tcontent.style.width = 'calc(100% - 16px)'\r\n\t\t} else {\r\n\t\t\tcontent.style.width = 'calc(100% - 312px - 16px)'\r\n\t\t}\r\n\t}\r\n\tconst checkToken = (func) => {\r\n\t\t//로그인 되어있는지 토큰 체크하기\r\n\t\tlet url = process.env.REACT_APP_URL + '/auth/check'\r\n\t\t//url = process.env.REACT_APP_LOCAL_URL+'/auth/check'\r\n\t\tAxios.get(url, { withCredentials: true })\r\n\t\t\t.then((res) => {\r\n\t\t\t\tif (res.data) {\r\n\t\t\t\t\t//console.log('토큰 체크 성공')\r\n\t\t\t\t\tsetLogin(res.data)\r\n\t\t\t\t} else {\r\n\t\t\t\t\t//console.log('토큰 없음') //res.status===204(No Content)\r\n\t\t\t\t\tsetLogin(false)\r\n\t\t\t\t}\r\n\t\t\t\tif (func) func()\r\n\t\t\t})\r\n\t\t\t.catch((e) => {\r\n\t\t\t\t//실패\r\n\t\t\t\tif (func) func()\r\n\t\t\t})\r\n\t}\r\n\r\n\t//useContext 이용하여 하위 컴포넌트에 상태 전달\r\n\tconst store = {\r\n\t\tready,\r\n\t\tsetReady,\r\n\t\tlogin,\r\n\t\tsetLogin,\r\n\t\tmenus,\r\n\t\tsetMenus,\r\n\t\tresizeTextarea,\r\n\t\tslideMenu,\r\n\t\tcloseMenuMobile,\r\n\t\tcheckToken,\r\n\t}\r\n\r\n\t// 포스트에서 태그 정보를 가져와서 메뉴에 표시함, Quill의 태그목록에 표시\r\n\tuseEffect(() => {\r\n\t\tlet url = process.env.REACT_APP_URL + '/menus'\r\n\t\t//url = process.env.REACT_APP_LOCAL_URL+'/menus'\r\n\r\n\t\tAxios.get(url, {\r\n\t\t\twithCredentials: true,\r\n\t\t}) //메뉴 태그 가져오기\r\n\t\t\t.then((res) => {\r\n\t\t\t\tsetMenus(res.data)\r\n\t\t\t})\r\n\t\t\t.catch((e) => console.log(e)) //실패\r\n\r\n\t\t//페이지 이동할 때 activeListManual 스타일을 모두 지움\r\n\t\tconst tags = document.querySelectorAll('.activeListManual')\r\n\t\tif(tags){\r\n\t\t\tfor(let i of tags){\r\n\t\t\t\ti.classList.remove('activeListManual')\r\n\t\t\t}\r\n\t\t}\r\n\t}, [location.pathname])\r\n\r\n\t//주소 변경될 때, 토큰 체크하고 포스트 조회하기\r\n\tuseEffect(() => {\r\n\t\tcheckToken()\r\n\t}, [location.pathname, location.search])\r\n\r\n\treturn (\r\n\t\t<AppContext.Provider value={store}>\r\n\t\t\t<div id=\"app\">\r\n\t\t\t\t<Meta\r\n\t\t\t\t\tdata={{\r\n\t\t\t\t\t\ttitle: '임기의 코딩 블로그 :D',\r\n\t\t\t\t\t\tdescription: 'imki123의 임기의 코딩 블로그입니다 :D',\r\n\t\t\t\t\t\timage: process.env.PUBLIC_URL + '/images/imcat_800x400.png',\r\n\t\t\t\t\t}}\r\n\t\t\t\t/>\r\n\t\t\t\t<Header />\r\n\t\t\t\t<Setting />\r\n\t\t\t\t<Body>\r\n\t\t\t\t\t<Guide />\r\n\t\t\t\t\t<Content />\r\n\t\t\t\t</Body>\r\n\t\t\t</div>\r\n\t\t</AppContext.Provider>\r\n\t)\r\n}\r\nexport { AppContext }\r\nexport default React.memo(App)\r\n","import React from 'react'\r\nimport ReactDOM, { hydrate } from 'react-dom'\r\nimport { BrowserRouter } from 'react-router-dom'\r\nimport App from './App'\r\n\r\nconst rootElement = document.getElementById('root')\r\n\r\nif (rootElement.hasChildNodes()) {\r\n\thydrate(\r\n\t\t<BrowserRouter basename={process.env.PUBLIC_URL}>\r\n\t\t\t<App />\r\n\t\t</BrowserRouter>,\r\n\t\trootElement,\r\n\t)\r\n} else {\r\n\tReactDOM.render(\r\n\t\t<BrowserRouter basename={process.env.PUBLIC_URL}>\r\n\t\t\t<App />\r\n\t\t</BrowserRouter>,\r\n\t\tdocument.getElementById('root'),\r\n\t)\r\n}\r\n"],"sourceRoot":""}