{"version":3,"sources":["components/Header.js","components/Body.js","components/Menus.js","components/Guide.js","components/Comment.js","components/Meta.js","components/PostList.js","components/Recents.js","components/CommentLists.js","components/Post.js","components/NotFoundPage.js","components/Login.js","components/Quill.js","components/Paging.js","components/Tags.js","components/Content.js","components/Setting.js","App.js","index.js"],"names":["React","memo","props","store","useContext","AppContext","id","className","onClick","slideMenu","alt","src","to","closeMenuMobile","setting","document","querySelector","style","display","login","imageUrl","Math","floor","random","children","menus","map","i","key","name","exact","activeClassName","substring","toUpperCase","count","subMenus","length","j","title","href","e","preventDefault","window","open","comment","post","refreshComment","update","date","publishedDate","replace","useEffect","postId","commentId","value","content","username","fontWeight","updated","readOnly","onChange","resizeTextarea","textarea","confirm","classList","remove","url","process","Axios","patch","withCredentials","data","then","res","console","log","catch","alert","add","focus","background","locales","en","ko","Meta","lang","locale","description","image","undefined","canonical","type","width","height","Helmet","titleTemplate","rel","itemprop","property","hreflang","list","no","text","idx","match","location","history","params","useState","setPost","postBody","setPostBody","comments","setComments","commentCnt","setCommentCnt","recents","setRecents","popular","setPopular","recentComments","setRecentComments","useQuill","modules","syntax","formats","quill","quillRef","get","go","body","hash","setTimeout","elem","contentScroll","scrollTop","elemTop","offsetTop","dif","frame","setInterval","scrollHeight","clientHeight","clearInterval","pathname","setContents","setText","setReady","func","svg","target","discription","tags","ref","delete","push","placeholder","useHistory","clientId","indexOf","browser","agent","navigator","userAgent","toLowerCase","checkUsername","setCheckUsername","checkPassword","setCheckPassword","checkPasswordConfirm","setCheckPasswordConfirm","buttonName","setButtonName","clickButton","password","fetch","mode","method","credentials","headers","JSON","stringify","status","json","message","error","setLogin","path","buttonText","onSuccess","profileObj","email","onFailure","cookiePolicy","isSignedIn","passwordConfirm","autoComplete","fontSize","textAlign","color","ready","setSubMenus","toolbar","size","header","align","indent","imageCompress","quality","maxWidth","maxHeight","imageType","debug","Quill","register","Number","querySelectorAll","checked","mainMenu","getElementById","res2","subMenu","newSubMenu","clickPost","getContents","getText","newMainMenu","getLength","editor","marginBottom","removeEventListener","addEventListener","changeMainMenu","changeSubMenu","postCount","useLocation","search","queryString","parse","paging","pages","page","startPost","lastPage","ceil","links","innerHTML","p","tag","lists","setLists","resize","loading","view","component","Login","Tags","Post","NotFoundPage","disabled","settingWrapper","stopPropagation","oAuth","createContext","order","setMenus","checkToken","fake","textareas","clientWidth","guideWrapper","left","parentNode","Provider","rootElement","hasChildNodes","hydrate","ReactDOM","render","basename"],"mappings":"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","file":"static/js/main.193502f0.chunk.js","sourcesContent":["import React from 'react'\r\nimport './Header.css'\r\nimport { Link } from 'react-router-dom'\r\nimport { AppContext } from '../App'\r\n\r\nfunction Header(props) {\r\n\tconst store = React.useContext(AppContext)\r\n\r\n\tconst toggleSetting = () => {\r\n\t\tconst setting = document.querySelector('#settingWrapper')\r\n\t\tif (setting) {\r\n\t\t\tif (setting.style.display === 'block') {\r\n\t\t\t\tsetting.style.display = 'none'\r\n\t\t\t} else {\r\n\t\t\t\tsetting.style.display = 'block'\r\n\t\t\t}\r\n\t\t}\r\n    }\r\n\r\n\treturn (\r\n\t\t<div id=\"headerWrapper\">\r\n\t\t\t<div id=\"header\">\r\n\t\t\t\t<div className=\"hover\" onClick={store.slideMenu}>\r\n\t\t\t\t\t<img id=\"menu\" alt=\"MENU\" src={process.env.PUBLIC_URL + '/images/guide_icon.png'} />\r\n\t\t\t\t</div>\r\n\t\t\t\t<Link to=\"/\">\r\n\t\t\t\t\t<div id=\"title\" className=\"hover\" onClick={store.closeMenuMobile}>\r\n\t\t\t\t\t\t<img id=\"logo\" alt=\"logo\" src={process.env.PUBLIC_URL + '/images/imcat_64.png'} />\r\n\t\t\t\t\t\t임기의 코딩 블로그 :D\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</Link>\r\n\t\t\t\t<div className=\"hover\" onClick={toggleSetting}>\r\n\t\t\t\t\t{!store.login ? (\r\n\t\t\t\t\t\t<img className=\"profile\" alt=\"PROFILE\" src={process.env.PUBLIC_URL + '/images/noavatar.png'} />\r\n\t\t\t\t\t) : store.login.imageUrl ? (\r\n\t\t\t\t\t\t<img className=\"profile\" alt=\"PROFILE\" src={store.login.imageUrl} />\r\n\t\t\t\t\t) : (\r\n\t\t\t\t\t\t<img className=\"profile\" alt=\"PROFILE\" src={process.env.PUBLIC_URL + '/images/dog' + (Math.floor(Math.random() * (3 - 1 + 1)) + 1) + '.png'} />\r\n\t\t\t\t\t)}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\nexport default React.memo(Header)\r\n","import React from 'react'\r\nimport './Body.css'\r\n\r\nfunction Body(props) {\r\n\treturn(\r\n        <div id=\"body\">\r\n            {props.children}\r\n        </div>\r\n    ) \r\n}\r\nexport default React.memo(Body)\r\n","import React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\nimport './Menus.css'\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore'\r\n\r\nfunction Menus(props) {\r\n\tconst { menus } = props\r\n\r\n\t//menu정보를 받아서 링크 메뉴 생성하기\r\n\t//menu { name: string, cnt: number, Object{ name: string, cnt: number}, Object{...}}\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{menus &&\r\n\t\t\t\tmenus.map((i) => (\r\n\t\t\t\t\t<div key={i.name}>\r\n\t\t\t\t\t\t<NavLink exact to={i.name === 'home' ? '/' : `/tags/${i.name}`} className=\"list\" activeClassName=\"activeList\">\r\n\t\t\t\t\t\t\t<span className=\"menuName\">{i.name.substring(0, 1).toUpperCase() + i.name.substring(1)}</span>\r\n\t\t\t\t\t\t\t<span className=\"menuOptions\">\r\n\t\t\t\t\t\t\t\t<span className=\"menuCnt\">{i.count}</span>\r\n\t\t\t\t\t\t\t\t<span className=\"menuExpandIcon\">{i.subMenus && i.subMenus.length >= 1 && <ExpandMoreIcon />}</span>\r\n\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t</NavLink>\r\n\t\t\t\t\t\t{i.subMenus && i.subMenus.length > 0 && i.subMenus.map((j) => (\r\n\t\t\t\t\t\t\t<NavLink exact to={`/tags/${j.name}`} className=\"list subList\" activeClassName=\"activeList\" key={j.name}>\r\n                            <span className=\"menuName\">{j.name.substring(0, 1).toUpperCase() + j.name.substring(1)}</span>\r\n                            <span className=\"menuOptions\">\r\n                                <span className=\"menuCnt\">{j.count}</span>\r\n                            </span>\r\n                        </NavLink>\r\n\t\t\t\t\t\t))}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t))}\r\n\t\t</>\r\n\t)\r\n}\r\nexport default React.memo(Menus)\r\n","import React from 'react'\r\nimport './Guide.css'\r\nimport { AppContext } from '../App'\r\nimport Menus from './Menus'\r\nimport OpenInNewIcon from '@material-ui/icons/OpenInNew'\r\n\r\nfunction Guide(props) {\r\n\tconst store = React.useContext(AppContext)\r\n\r\n\treturn (\r\n\t\t<div id=\"guideBack\" onClick={store.closeMenuMobile}>\r\n\t\t\t<div id=\"guideWrapper\" className=\"slideMenu\">\r\n\t\t\t\t<div id=\"avatar\">\r\n\t\t\t\t\t<img alt=\"avatar\" src={process.env.PUBLIC_URL + '/images/avatar.png'} title=\"Hello :D\" />\r\n\t\t\t\t\t<div id=\"name\">Im kiyoung</div>\r\n\t\t\t\t\t<div id=\"nickName\">imki123</div>\r\n\t\t\t\t\t<div id=\"github\">\r\n\t\t\t\t\t\t<a href=\"https://github.com/imki123\">\r\n\t\t\t\t\t\t\t<img alt=\"github\" src={process.env.PUBLIC_URL + '/images/GitHub-Mark-32px.png'} /> <span>https://github.com/imki123</span>\r\n\t\t\t\t\t\t</a>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div id=\"introduction\">A web programmer who dreams of being a wise developer.</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"menus\">\r\n\t\t\t\t\t<Menus menus={store.menus} />\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"menus\">\r\n\t\t\t\t\t<a href=\"https://imki123.github.io/catbook\" className=\"list\"\r\n                        onClick={e => {e.preventDefault(); window.open(\"https://imki123.github.io/catbook\")}}>\r\n\t\t\t\t\t\t<div className=\"menuLink\">\r\n\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t<img alt=\"catbook\" src={process.env.PUBLIC_URL + '/images/catbook_64.png'} />\r\n\t\t\t\t\t\t\t\tCatbook\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<OpenInNewIcon />\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</a>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\nexport default React.memo(Guide)\r\n","import React, { useEffect } from 'react'\r\nimport './Comment.css'\r\nimport { AppContext } from '../App'\r\nimport Axios from 'axios'\r\n\r\nfunction Comment(props) {\r\n    const store = React.useContext(AppContext)\r\n    const {comment, post, refreshComment} = props\r\n    let update = false\r\n    let date = comment.publishedDate.substring(0,16).replace('T',' ')\r\n    useEffect(() => {\r\n        const textarea = document.querySelector(`#comment_${post.postId}_${comment.commentId} textarea`)\r\n        textarea.value = comment.content\r\n    },[comment, post])\r\n\r\n    const updateComment = e => { //댓글 수정\r\n        const textarea = document.querySelector(`#comment_${post.postId}_${comment.commentId} textarea`)\r\n        if(!update){\r\n            update = true\r\n            textarea.classList.add('updateMode')\r\n            textarea.readOnly = false\r\n            textarea.focus()\r\n        }else if(window.confirm('댓글을 수정하시겠습니까?')){\r\n            update = false\r\n            textarea.classList.remove('updateMode')\r\n            textarea.readOnly = true\r\n            \r\n            let url = process.env.REACT_APP_URL+`/comments/${post.postId}/${comment.commentId}`\r\n            //url = process.env.REACT_APP_LOCAL_URL+`/comments/${post.postId}/${comment.commentId}`\r\n\r\n            Axios.patch(url, { //댓글 수정\r\n                withCredentials: true, //CORS\r\n                data: {\r\n                    content: textarea.value,\r\n                }\r\n            })\r\n            .then(res => {\r\n                console.log(`${comment.commentId}번 댓글 수정 성공`)\r\n                refreshComment() //포스트 다시 불러오기\r\n            })\r\n            .catch(e => alert(e)) //실패\r\n        }\r\n    }\r\n\r\n    const deleteComment = e => {\r\n        if(window.confirm('삭제 후에는 복구가 불가합니다. 정말로 댓글을 삭제하시겠습니까?')){\r\n            let url = process.env.REACT_APP_URL+`/comments/delete/${post.postId}/${comment.commentId}`\r\n            //url = process.env.REACT_APP_LOCAL_URL+`/comments/delete/${post.postId}/${comment.commentId}`\r\n\r\n            Axios.patch(url, { //포스트 삭제\r\n                withCredentials: true, //CORS\r\n            })\r\n            .then(res => {\r\n                console.log(`${comment.commentId}번 댓글 삭제 성공`)\r\n                refreshComment() //포스트 다시 불러오기\r\n            })\r\n            .catch(e => alert(e)) //실패\r\n        }\r\n    }\r\n\r\n\treturn(\r\n    <div className=\"commentWrapper\" id={`comment_${post.postId}_${comment.commentId}`}>\r\n        <div className=\"comment\">\r\n            <div className=\"commentProfile\">\r\n                {!comment.username ? \r\n                <img alt=\"PROFILE\" src={process.env.PUBLIC_URL+'/images/noavatar.png'}/> :\r\n                    comment.username === 'imki123' ?\r\n                        <img alt=\"PROFILE\" src={process.env.PUBLIC_URL+'/images/avatar_small.png'}/> :\r\n                        <img alt=\"PROFILE\" \r\n                            src={process.env.PUBLIC_URL+'/images/dog'+(Math.floor(Math.random() * (3 - 1 + 1)) + 1)+'.png'}/>}\r\n            </div>\r\n            <div className=\"commentContent\">\r\n                {comment.username === store.login.username \r\n                ? <span className=\"commentUsername\" style={{fontWeight:'bold'}}>{comment.username}</span>\r\n                : <span className=\"commentUsername\">{comment.username}</span>}\r\n                <span className=\"commentDate\"> - {date} {comment.updated && '(수정됨)'}</span>\r\n                <textarea readOnly onChange={store.resizeTextarea}/>\r\n            </div>\r\n        </div>\r\n        {((comment.username && comment.username === store.login.username) \r\n            || store.login.username === 'imki123')&&\r\n        <div className=\"commentButtons\">\r\n            <button className=\"commentButton\" onClick={updateComment}>수정</button>\r\n            <button className=\"commentButton\" style={{background:'red'}} onClick={deleteComment}>삭제</button>\r\n        </div>}\r\n    </div>\r\n    ) \r\n}\r\nexport default React.memo(Comment)\r\n","// components/Meta\r\n/* eslint-disable no-undefined */\r\nimport React from 'react'\r\nimport { Helmet } from 'react-helmet'\r\n\r\nconst locales = {\r\n\ten: 'en_US',\r\n\tko: 'ko_KR',\r\n}\r\n\r\nconst Meta = ({ data }) => {\r\n\tconst lang = locales[data.locale] || locales['en']\r\n\tconst title = data.title\r\n\tconst description = data.description\r\n\tconst image = data.image !== undefined && `${data.image}`\r\n\tconst canonical = `https://imki123.github.io/${data.canonical}`\r\n\tconst type = data.type === undefined ? 'website' : data.type\r\n\tconst width = data.image && (data.width || 1200)\r\n\tconst height = data.image && (data.height || 630)\r\n\r\n\treturn (\r\n\t\t<Helmet titleTemplate=\"%s\">\r\n\t\t\t<html lang={lang} />\r\n\t\t\t<title>{title}</title>\r\n\t\t\t<meta name=\"description\" content={description} />\r\n\t\t\t{canonical ? <link rel=\"canonical\" href={canonical} /> : null}\r\n\t\t\t{image ? <link rel=\"image_src\" href={image} /> : null}\r\n\t\t\t{image ? <meta itemprop=\"image\" content={image} /> : null}\r\n\r\n\t\t\t<meta property=\"og:site_name\" content=\"YOUR WEB SITE\" />\r\n\t\t\t<meta property=\"og:title\" content={title} />\r\n\t\t\t{description ? <meta property=\"og:description\" content={description} /> : null}\r\n\t\t\t{canonical ? <meta property=\"og:url\" content={canonical} /> : null}\r\n\t\t\t<meta property=\"og:locale\" content={locales[lang]} />\r\n\t\t\t<meta property=\"og:type\" content={type} />\r\n\t\t\t{image ? <meta property=\"og:image\" content={image} /> : null}\r\n\t\t\t{width ? <meta property=\"og:image:width\" content={width} /> : null}\r\n\t\t\t{height ? <meta property=\"og:image:height\" content={height} /> : null}\r\n\t\t\t<meta property=\"fb:pages\" content=\"YOUR WEB SITE\" />\r\n\r\n\t\t\t{/* change type of twitter if there is no image? */}\r\n\t\t\t<meta name=\"twitter:card\" content=\"summary_large_image\" />\r\n\t\t\t<meta name=\"twitter:title\" content={title} />\r\n\t\t\t{description ? <meta name=\"twitter:description\" content={description} /> : null}\r\n\t\t\t{image ? <meta name=\"twitter:image\" content={image} /> : null}\r\n\t\t\t<meta name=\"twitter:site\" content=\"@YOURWEBSITE\" />\r\n\t\t\t{canonical ? <link rel=\"alternate\" href={data.canonical} hreflang={lang} /> : null}\r\n\t\t</Helmet>\r\n\t)\r\n}\r\n\r\nexport default Meta","import React from 'react'\r\nimport './PostList.css'\r\nimport { Link } from 'react-router-dom'\r\n\r\nfunction PostList(props){\r\n    const {list, no} = props\r\n    let date = list.publishedDate.substring(0,10).replace('T',' ')\r\n\r\n    return(\r\n        <Link to={`/posts/${list.postId}`}>\r\n            <div className=\"postList no-drag\">\r\n                <div className=\"postListHeader\">\r\n                    <div>\r\n                        <span className=\"postId\">{no}.</span>\r\n                        <span className=\"postTitle\">{list.title}</span>\r\n                    </div>\r\n                    <span className=\"postDate\">{date}</span>\r\n                </div>\r\n                <div className=\"postBody\">{list.text}</div>\r\n            </div>\r\n        </Link>\r\n    )\r\n}\r\nexport default React.memo(PostList)","import React from 'react'\r\nimport './Recents.css'\r\n\r\nimport PostList from './PostList'\r\n\r\nfunction Recents(props) {\r\n\tconst {title, list} = props\r\n\treturn (\r\n\t\t<div className=\"recents\">\r\n            <div className=\"postListTitle\">{title}</div>\r\n            {list && list.map((i, idx) => <PostList no={idx+1} list={i} key={i.postId} />)}\r\n\t\t</div>\r\n\t)\r\n}\r\nexport default React.memo(Recents)\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport './CommentLists.css'\r\n\r\nfunction CommentLists(props) {\r\n\tconst { title, list } = props\r\n\treturn (\r\n\t\t<div className=\"recents recentComment\">\r\n\t\t\t<div className=\"postListTitle\">{title}</div>\r\n\t\t\t{list &&\r\n\t\t\t\tlist.map((i, idx) => (\r\n\t\t\t\t\t<div key={i.title + idx}>\r\n\t\t\t\t\t\t<Link to={`/posts/${i.postId}/#comments`}>\r\n\t\t\t\t\t\t\t<div className=\"postList no-drag\">\r\n\t\t\t\t\t\t\t\t<div className=\"postListHeader\">\r\n\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t<span className=\"postId\">{idx + 1}.</span>\r\n\t\t\t\t\t\t\t\t\t\t<span className=\"username\">{i.username}</span>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<span className=\"postDate\">{i.publishedDate && i.publishedDate.substring(0, 19).replace('T', ' ')}</span>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className=\"postBody\">\r\n\t\t\t\t\t\t\t\t\t{i.content}\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className=\"postTitle\">{i.title}</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t))}\r\n\t\t</div>\r\n\t)\r\n}\r\nexport default React.memo(CommentLists)\r\n","import React, { useEffect, useState } from 'react'\r\nimport './Post.css'\r\nimport { Link } from 'react-router-dom'\r\nimport { useQuill } from 'react-quilljs'\r\nimport Comment from './Comment'\r\nimport { AppContext } from '../App'\r\nimport RefreshIcon from '@material-ui/icons/Refresh'\r\nimport Axios from 'axios'\r\nimport Meta from './Meta'\r\nimport Recents from './Recents'\r\nimport CommentLists from './CommentLists'\r\n\r\nfunction Post({ match, location, history }) {\r\n\tconst store = React.useContext(AppContext)\r\n\tlet { postId } = match.params\r\n\tconst [post, setPost] = useState(false)\r\n\tconst [postBody, setPostBody] = useState()\r\n\tconst [comments, setComments] = useState([])\r\n\tconst [commentCnt, setCommentCnt] = useState(3)\r\n\r\n\tconst [recents, setRecents] = useState([])\r\n\tconst [popular, setPopular] = useState([])\r\n\tconst [recentComments, setRecentComments] = useState([])\r\n\r\n\tconst modules = { syntax: true }\r\n\tconst formats = ['bold', 'italic', 'underline', 'strike', 'code-block', 'blockquote', 'size', 'header', 'align', 'color', 'background', 'indent', 'list', 'link', 'image', 'video', 'clean']\r\n\tconst { quill, quillRef } = useQuill({ modules, formats, readOnly: true })\r\n\r\n\tuseEffect(() => {\r\n\t\tsetPost(false)\r\n\t\tsetPostBody(false)\r\n\t\t//포스트 가져오기\r\n\t\tlet id = 1\r\n\t\tif (postId) id = postId\r\n\t\tlet url = process.env.REACT_APP_URL + '/posts/' + id\r\n\t\t//url = process.env.REACT_APP_LOCAL_URL + '/posts/' + id\r\n\t\tAxios.get(url, {\r\n\t\t\twithCredentials: true,\r\n\t\t})\r\n\t\t\t.then((res) => {\r\n\t\t\t\tsetComments(res.data.comments)\r\n\t\t\t\tsetPost(res.data)\r\n\t\t\t})\r\n\t\t\t.catch((e) => {\r\n\t\t\t\talert('찾으시는 페이지가 없습니다.\\n' + e)\r\n\t\t\t\thistory.go(-1)\r\n\t\t\t}) //실패\r\n\r\n\t\t//포스트바디 가져오기\r\n\t\turl = process.env.REACT_APP_URL + '/posts/postBody/' + id\r\n\t\t//url = process.env.REACT_APP_LOCAL_URL + '/posts/postBody/' + id\r\n\t\tAxios.get(url)\r\n\t\t\t.then((res) => {\r\n\t\t\t\tsetPostBody(res.data.body)\r\n\r\n\t\t\t\tif (location.hash) {\r\n\t\t\t\t\t//hash가 있으면 해당 엘리먼트로 스크롤\r\n\t\t\t\t\tsetTimeout(function () {\r\n\t\t\t\t\t\t//postBody가 로드된 이후에 스크롤이 되야해서 0.01초 타임아웃 추가..\r\n\t\t\t\t\t\tconst content = document.querySelector('#content')\r\n\t\t\t\t\t\tconst elem = document.querySelector(location.hash)\r\n\t\t\t\t\t\tif (content && elem) {\r\n\t\t\t\t\t\t\tlet contentScroll = content.scrollTop\r\n\t\t\t\t\t\t\tlet elemTop = elem.offsetTop\r\n\t\t\t\t\t\t\tlet dif = (elemTop - contentScroll) / 100\r\n\t\t\t\t\t\t\tif (elemTop > contentScroll) {\r\n\t\t\t\t\t\t\t\tconst frame = setInterval(function () {\r\n\t\t\t\t\t\t\t\t\tif (content.scrollTop + dif >= elemTop || content.scrollTop >= content.scrollHeight - content.clientHeight) {\r\n\t\t\t\t\t\t\t\t\t\tclearInterval(frame)\r\n\t\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t\tcontent.scrollTop += dif\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}, 10)\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tconst frame = setInterval(function () {\r\n\t\t\t\t\t\t\t\t\tif (content.scrollTop <= elemTop) {\r\n\t\t\t\t\t\t\t\t\t\tclearInterval(frame)\r\n\t\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t\tcontent.scrollTop += dif\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}, 10)\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}, 10)\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\t.catch((e) => {\r\n\t\t\t\tconsole.log(e)\r\n\t\t\t}) //실패\r\n\r\n\t\t//홈일경우 recents, popular, recentComments 가져옴\r\n\t\tif (location.pathname === '/') {\r\n\t\t\turl = process.env.REACT_APP_URL + '/posts/popular'\r\n\t\t\t//url = process.env.REACT_APP_LOCAL_URL + '/posts/popular'\r\n\t\t\tAxios.get(url).then((res) => {\r\n\t\t\t\tsetPopular(res.data)\r\n\t\t\t})\r\n\r\n\t\t\turl = process.env.REACT_APP_URL + '/posts/recents'\r\n\t\t\t//url = process.env.REACT_APP_LOCAL_URL + '/posts/recents'\r\n\t\t\tAxios.get(url).then((res) => {\r\n\t\t\t\tsetRecents(res.data)\r\n\t\t\t})\r\n\r\n\t\t\turl = process.env.REACT_APP_URL + '/comments/recent'\r\n\t\t\t//url = process.env.REACT_APP_LOCAL_URL + '/comments/recent'\r\n\t\t\tAxios.get(url).then((res) => {\r\n\t\t\t\tsetRecentComments(res.data)\r\n\t\t\t})\r\n\t\t}\r\n\t}, [location, postId, history])\r\n\r\n\tuseEffect(() => {\r\n\t\tif (quill) {\r\n\t\t\tif (postBody) {\r\n\t\t\t\tquill.setContents(postBody)\r\n\t\t\t} else if (post) {\r\n\t\t\t\tquill.setText(post.text)\r\n\t\t\t}\r\n\t\t}\r\n\t}, [quill, postBody, post])\r\n\r\n\tuseEffect(() => {\r\n\t\tstore.setReady(false)\r\n\t\tif (post) {\r\n\t\t\tstore.setReady(true)\r\n\t\t}\r\n\t})\r\n\r\n\tconst deletePost = (e) => {\r\n\t\tif (window.confirm('글 삭제 시 복구가 불가합니다. 해당 글을 정말로 삭제하시겠습니까?')) {\r\n\t\t\tconst postId = e.target.id\r\n\t\t\tlet url = process.env.REACT_APP_URL + '/posts/' + postId\r\n\t\t\t//url = process.env.REACT_APP_LOCAL_URL+'/posts/'+postId\r\n\r\n\t\t\tAxios.delete(url, {\r\n\t\t\t\t//글 삭제\r\n\t\t\t\twithCredentials: true, //CORS\r\n\t\t\t})\r\n\t\t\t\t.then((res) => {\r\n\t\t\t\t\tconsole.log(`${postId}번 글 삭제 성공`)\r\n\t\t\t\t\thistory.go(-1)\r\n\t\t\t\t})\r\n\t\t\t\t.catch((e) => alert(e)) //실패\r\n\t\t}\r\n\t}\r\n\r\n\tconst postComment = (e) => {\r\n\t\tconst comment = document.querySelector(`.commentContent textarea`) //댓글 텍스트\r\n\t\tif (comment && comment.value !== '' && window.confirm('댓글을 작성하시겠습니까?')) {\r\n\t\t\tlet url = process.env.REACT_APP_URL + '/comments/' + post.postId\r\n\t\t\t//url = process.env.REACT_APP_LOCAL_URL+'/comments/'+post.postId\r\n\r\n\t\t\tAxios.patch(url, {\r\n\t\t\t\t//댓글 작성\r\n\t\t\t\twithCredentials: true, //CORS\r\n\t\t\t\tdata: {\r\n\t\t\t\t\tusername: store.login.username,\r\n\t\t\t\t\tcontent: comment.value,\r\n\t\t\t\t},\r\n\t\t\t})\r\n\t\t\t\t.then((res) => {\r\n\t\t\t\t\tconsole.log(`${post.postId} 댓글 추가 성공`)\r\n\t\t\t\t\trefreshComment(null, setCommentCnt(res.data.comments.length)) //포스트 다시 불러오고 댓글 끝까지 보이기\r\n\t\t\t\t})\r\n\t\t\t\t.catch((e) => alert(e)) //실패\r\n\t\t}\r\n\t}\r\n\r\n\tconst refreshComment = (e, func) => {\r\n\t\t//댓글 가져오기\r\n\t\tlet url = process.env.REACT_APP_URL + '/comments/' + post.postId\r\n\t\t//url = process.env.REACT_APP_LOCAL_URL+'/comments/'+post.postId\r\n\r\n\t\tlet svg //refresh 아이콘\r\n\t\tif (e && e.target) svg = e.target.querySelector('svg')\r\n\t\tif (svg) svg.classList.add('refreshing') //refresh 애니메이션 시작\r\n\r\n\t\tAxios.get(url, {\r\n\t\t\twithCredentials: true,\r\n\t\t}) //댓글 새로고치기\r\n\t\t\t.then((res) => {\r\n\t\t\t\tconsole.log(`${post.postId} 댓글 새로고침`)\r\n\t\t\t\tsetComments(res.data) //댓글 저장\r\n\t\t\t\tif (svg) svg.classList.remove('refreshing') //refresh 애니메이션 끝\r\n\r\n\t\t\t\tif (func) func() //파라미터에 함수가 있으면 함수 실행\r\n\t\t\t})\r\n\t\t\t.catch((e) => {\r\n\t\t\t\t//실패\r\n\t\t\t\tif (svg) svg.classList.remove('refreshing') //refresh 애니메이션 끝\r\n\t\t\t\talert(e)\r\n\t\t\t})\r\n\t}\r\n\r\n\t//댓글 10개 더보기\r\n\tconst more = (e) => {\r\n\t\tsetCommentCnt(commentCnt + 10)\r\n\t}\r\n\r\n\t//댓글 더보기, 댓글 새로고침 하면 리사이즈\r\n\tuseEffect(() => {\r\n\t\tstore.resizeTextarea()\r\n\t}, [commentCnt, store, comments])\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<div className=\"post\">\r\n\t\t\t\t{location.pathname === '/' ? (\r\n\t\t\t\t\t<Meta\r\n\t\t\t\t\t\tdata={{\r\n\t\t\t\t\t\t\ttitle: '임기의 코딩 블로그 :D',\r\n\t\t\t\t\t\t\tdiscription: 'imki123의 임기의 코딩 블로그입니다 :D',\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t/>\r\n\t\t\t\t) : (\r\n\t\t\t\t\t<Meta data={{ title: post.title, discription: post.text, locale: 'ko' }} />\r\n\t\t\t\t)}\r\n\t\t\t\t{/* 태그 */}\r\n\t\t\t\t<div className=\"nav\">\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<span>Tag : </span>\r\n\t\t\t\t\t\t{post.tags &&\r\n\t\t\t\t\t\t\tpost.tags.map((i, idx) =>\r\n\t\t\t\t\t\t\t\tidx === 0 ? (\r\n\t\t\t\t\t\t\t\t\t<span key={i}>\r\n\t\t\t\t\t\t\t\t\t\t<Link to={i === 'home' ? '/' : `/tags/${i}`}>{i}</Link>\r\n\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t<span key={i}>\r\n\t\t\t\t\t\t\t\t\t\t, <Link to={`/tags/${i}`}>{i}</Link>\r\n\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t),\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t{post && post.publishedDate.substring(0, 16).replace('T', ' ')}\r\n\t\t\t\t</div>\r\n\t\t\t\t<h2 className=\"postTitle\">{post.title}</h2>\r\n\t\t\t\t<div className=\"postContent\">\r\n\t\t\t\t\t{/* 본문 */}\r\n\t\t\t\t\t<div id=\"editor\">\r\n\t\t\t\t\t\t<div ref={quillRef} />\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t{/* 글 수정 삭제 버튼 */}\r\n\t\t\t\t\t{store.login && store.login.username === 'imki123' && (\r\n\t\t\t\t\t\t<div className=\"postButtons\">\r\n\t\t\t\t\t\t\t<Link to={`/quill/${post.postId}`} className=\"hover no-drag\">\r\n\t\t\t\t\t\t\t\t수정\r\n\t\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t\t&nbsp;\r\n\t\t\t\t\t\t\t<button onClick={deletePost} id={post.postId} style={{ background: 'red' }}>\r\n\t\t\t\t\t\t\t\t삭제\r\n\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t{/* 댓글 작성*/}\r\n\t\t\t\t{location.pathname !== '/' && (\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t<div className=\"writeComment\">\r\n\t\t\t\t\t\t\t<div className=\"commentProfile\">\r\n\t\t\t\t\t\t\t\t{!store.login ? (\r\n\t\t\t\t\t\t\t\t\t<img alt=\"PROFILE\" src={process.env.PUBLIC_URL + '/images/noavatar.png'} />\r\n\t\t\t\t\t\t\t\t) : store.login.username === 'imki123' ? (\r\n\t\t\t\t\t\t\t\t\t<img alt=\"PROFILE\" src={process.env.PUBLIC_URL + '/images/avatar.png'} />\r\n\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t<img alt=\"PROFILE\" src={process.env.PUBLIC_URL + '/images/dog' + (Math.floor(Math.random() * (3 - 1 + 1)) + 1) + '.png'} />\r\n\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className=\"commentContent\">\r\n\t\t\t\t\t\t\t\t{store.login ? (\r\n\t\t\t\t\t\t\t\t\t<span className=\"commentUsername\">{store.login.username}</span>\r\n\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\t\t\t\tclassName=\"loginButton\"\r\n\t\t\t\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\t\t\t\thistory.push('/login')\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t로그인\r\n\t\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t{store.login ? <textarea onChange={store.resizeTextarea} placeholder=\" 댓글을 남겨주세요 :D\" /> : <textarea readOnly placeholder=\" 로그인 후에 댓글을 남겨주세요 :D\" />}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className=\"commentButtons\">\r\n\t\t\t\t\t\t\t{store.login && (\r\n\t\t\t\t\t\t\t\t<button className=\"commentButton\" onClick={postComment}>\r\n\t\t\t\t\t\t\t\t\t댓글작성\r\n\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</>\r\n\t\t\t\t)}\r\n\r\n\t\t\t\t{/* 댓글 목록 */}\r\n\t\t\t\t{comments && comments.length > 0 && (\r\n\t\t\t\t\t<div id=\"comments\">\r\n\t\t\t\t\t\t<div className=\"commentTitle\">\r\n\t\t\t\t\t\t\t<div className=\"commentCnt\">댓글 {comments.length}개</div>\r\n\t\t\t\t\t\t\t<span className=\"commentRefresh\" onClick={refreshComment}>\r\n\t\t\t\t\t\t\t\t댓글 새로고침 <RefreshIcon />\r\n\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t{comments.map((i, idx) => idx < commentCnt && <Comment post={post} comment={i} key={i.commentId} refreshComment={refreshComment} />)}\r\n\t\t\t\t\t\t{comments.length > commentCnt && (\r\n\t\t\t\t\t\t\t<div className=\"more\">\r\n\t\t\t\t\t\t\t\t<span className=\"moreButton\" onClick={more}>\r\n\t\t\t\t\t\t\t\t\t댓글 더보기\r\n\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t)}\r\n\t\t\t</div>\r\n\t\t\t{location.pathname === '/' && (\r\n\t\t\t\t<div className=\"homeLists\">\r\n\t\t\t\t\t<Recents title=\"최신글\" list={recents} />\r\n\t\t\t\t\t<Recents title=\"인기글\" list={popular} />\r\n\t\t\t\t\t<CommentLists title=\"최근 댓글\" list={recentComments} />\r\n\t\t\t\t</div>\r\n\t\t\t)}\r\n\t\t</>\r\n\t)\r\n}\r\nexport default React.memo(Post)\r\n","import React, { useEffect } from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { AppContext } from '../App'\r\nimport './NotFoundPage.css'\r\n\r\nfunction NotFoundPage() {\r\n\tconst store = React.useContext(AppContext)\r\n\tconst history = useHistory()\r\n\tuseEffect(() => {\r\n\t\t//console.log(`Not found page! https://imki123.github.io${process.env.PUBLIC_URL}`)\r\n\t\tstore.setReady(true)\r\n\t})\r\n\r\n\tconst goBack = e => {\r\n\t\thistory.go(-1)\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className=\"notFound\">\r\n\t\t\t<div className=\"title\">Not Found Page</div>\r\n\t\t\t<div className=\"goHome\">\r\n\t\t\t\t<span onClick={goBack}>Go back</span>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\nexport default React.memo(NotFoundPage)\r\n","import React, { useState, useEffect } from 'react'\r\nimport './Login.css'\r\nimport { Switch, Route, Link } from 'react-router-dom'\r\nimport { AppContext } from '../App'\r\nimport GoogleLogin from 'react-google-login'\r\n\r\nfunction Login({ history, match, location }) {\r\n\tconst href = window.location.href\r\n\tlet clientId\r\n\tif (href.indexOf('localhost') > -1) {\r\n\t\t//로컬\r\n\t\tclientId = '605411712139-7nr29rfs5ihfu9uoev3igr5hpf4ubkle.apps.googleusercontent.com'\r\n\t} else {\r\n\t\t//서버\r\n\t\tclientId = '605411712139-eb3qqicskmkal2i9u26ppdhoq2jt0bd8.apps.googleusercontent.com'\r\n\t}\r\n\tconst store = React.useContext(AppContext)\r\n\tlet browser = ''\r\n\tconst agent = navigator.userAgent.toLowerCase()\r\n\tif (agent.indexOf('chrome') > -1) browser = 'chrome'\r\n\telse if (agent.indexOf('safari') > -1) browser = 'safari'\r\n\r\n\tconst [checkUsername, setCheckUsername] = useState('')\r\n\tconst [checkPassword, setCheckPassword] = useState('')\r\n\tconst [checkPasswordConfirm, setCheckPasswordConfirm] = useState('')\r\n\tconst [buttonName, setButtonName] = useState('로그인')\r\n\r\n\tuseEffect(() => {\r\n\t\tstore.setReady(true)\r\n\t})\r\n\tuseEffect(() => {\r\n\t\t//이미 로그인이 되어있다면 스테이터스로 이동\r\n\t\tif (store.login && location.pathname === '/login') {\r\n\t\t\thistory.replace('/loginStatus')\r\n\t\t}\r\n\t\t//로그인이 안되어있으면 로그인으로 이동\r\n\t\tif (!store.login && location.pathname === '/loginStatus') {\r\n\t\t\thistory.replace('/login')\r\n\t\t}\r\n\t\tif (location.pathname.indexOf('register') > -1) {\r\n\t\t\tsetButtonName('회원가입')\r\n\t\t} else if (location.pathname.indexOf('withdraw') > -1) {\r\n\t\t\tsetButtonName('회원탈퇴')\r\n\t\t} else {\r\n\t\t\tsetButtonName('로그인')\r\n\t\t}\r\n\t}, [location, store.login, history])\r\n\r\n\tconst changeUsername = (e) => {\r\n\t\tconst pattern = /[^a-zA-Z0-9ㄱ-ㅎㅏ-ㅣ가-힣_]/g\r\n\t\tconst value = (e.target.value = e.target.value.replace(/\\s/g, '_').replace(pattern, ''))\r\n\t\tif (value.length < 3) {\r\n\t\t\t//3글자 이상\r\n\t\t\tsetCheckUsername('- 3자 이상 입력해주세요')\r\n\t\t} else if (value.length > 20) {\r\n\t\t\t//20글자 이하\r\n\t\t\tsetCheckUsername('- 20자 이하로 입력해주세요')\r\n\t\t} else {\r\n\t\t\tsetCheckUsername('')\r\n\t\t}\r\n\t}\r\n\tconst changePassword = (e) => {\r\n\t\tconst { value } = e.target\r\n\t\tconst passwordConfirm = document.querySelector('[name=passwordConfirm]')\r\n\r\n\t\t//비밀번호가 변경되면 비밀번호 확인은 초기화\r\n\t\tif (passwordConfirm) {\r\n\t\t\tpasswordConfirm.value = ''\r\n\t\t\tsetCheckPasswordConfirm('')\r\n\t\t}\r\n\r\n\t\tif (value.length < 6) {\r\n\t\t\t//6글자 이상\r\n\t\t\tsetCheckPassword('- 6자 이상 입력해주세요')\r\n\t\t} else if (value.length > 20) {\r\n\t\t\t//20글자 이하\r\n\t\t\tsetCheckPassword('- 20자 이하로 입력해주세요')\r\n\t\t} else {\r\n\t\t\tsetCheckPassword('')\r\n\t\t}\r\n\t}\r\n\tconst changePasswordConfirm = (e) => {\r\n\t\tconst { value } = e.target\r\n\t\tconst password = document.querySelector('[name=password]')\r\n\r\n\t\tif (value !== password.value && value.length >= 1) {\r\n\t\t\t//password와 같으면\r\n\t\t\tsetCheckPasswordConfirm('- 비밀번호가 일치하지 않습니다')\r\n\t\t} else {\r\n\t\t\tsetCheckPasswordConfirm('')\r\n\t\t}\r\n\t}\r\n\tconst clickButton = (e) => {\r\n\t\te.preventDefault()\r\n\t\tlet url = process.env.REACT_APP_URL + '/auth'\r\n\t\t//url = process.env.REACT_APP_LOCAL_URL+'/auth'\r\n\r\n\t\tconst pattern = /[^a-zA-Z0-9가-힣_]/g\r\n\t\tlet username = document.querySelector('[name=username]')\r\n\t\tif (username) username = username.value = username.value.replace(pattern, '')\r\n\t\tlet password = document.querySelector('[name=password]')\r\n\t\tif (password) password = password.value\r\n\r\n\t\tif (checkUsername === '' && password.length >= 1 && checkPassword === '' && checkPasswordConfirm === '') {\r\n\t\t\t//입력폼에 이상이 없으면 fetch submit\r\n\t\t\tif (buttonName === '회원가입') {\r\n\t\t\t\turl += '/register'\r\n\t\t\t\tfetch(url, {\r\n\t\t\t\t\tmode: 'cors',\r\n\t\t\t\t\tmethod: 'POST',\r\n\t\t\t\t\tcredentials: 'include',\r\n\t\t\t\t\theaders: { 'Content-Type': 'application/json' },\r\n\t\t\t\t\tbody: JSON.stringify({\r\n\t\t\t\t\t\tusername: username,\r\n\t\t\t\t\t\tpassword: password,\r\n\t\t\t\t\t}),\r\n\t\t\t\t})\r\n\t\t\t\t\t.then((res) => {\r\n\t\t\t\t\t\tif (res.status === 200 || res.status === 201) {\r\n\t\t\t\t\t\t\t//성공하면 아래 then 작동\r\n\t\t\t\t\t\t\tres.json().then((res) => {\r\n\t\t\t\t\t\t\t\talert(res.username + '님의 회원가입에 성공했습니다 :D')\r\n\t\t\t\t\t\t\t\thistory.go(-1)\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tlet message = '회원가입에 실패했습니다 :('\r\n\t\t\t\t\t\t\tif (res.status === 409) {\r\n\t\t\t\t\t\t\t\tmessage += '\\n이미 존재하는 아이디입니다.'\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tif (res.status === 400) {\r\n\t\t\t\t\t\t\t\tmessage += '\\n아이디나 비밀번호를 확인해주세요.'\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\talert(message)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t})\r\n\t\t\t\t\t.catch((e) => console.error(e))\r\n\t\t\t} else if (buttonName === '회원탈퇴') {\r\n\t\t\t\tif (window.confirm('계정 탈퇴시 복구할 수 없습니다. 정말로 탈퇴하시겠습니까?')) {\r\n\t\t\t\t\turl += '/withdraw'\r\n\t\t\t\t\tfetch(url, {\r\n\t\t\t\t\t\tmode: 'cors',\r\n\t\t\t\t\t\tmethod: 'DELETE',\r\n\t\t\t\t\t\tcredentials: 'include',\r\n\t\t\t\t\t\theaders: { 'Content-Type': 'application/json' },\r\n\t\t\t\t\t\tbody: JSON.stringify({\r\n\t\t\t\t\t\t\tusername: store.login.username,\r\n\t\t\t\t\t\t\tpassword: password,\r\n\t\t\t\t\t\t}),\r\n\t\t\t\t\t})\r\n\t\t\t\t\t\t.then((res) => {\r\n\t\t\t\t\t\t\tif (res.status === 200) {\r\n\t\t\t\t\t\t\t\t//삭제하면 Ok\r\n\t\t\t\t\t\t\t\talert('계정이 탈퇴되었습니다. 또 들러 주세요 :D')\r\n\t\t\t\t\t\t\t\thistory.push('/')\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tlet message = '탈퇴에 실패했습니다 :('\r\n\t\t\t\t\t\t\t\tif (res.status === 204) {\r\n\t\t\t\t\t\t\t\t\tmessage += '\\n존재하지 않는 아이디입니다.'\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tif (res.status === 401) {\r\n\t\t\t\t\t\t\t\t\tmessage += '\\n비밀번호를 확인해주세요.'\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\talert(message)\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t\t.catch((e) => console.error(e))\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\t//로그인\r\n\t\t\t\turl += '/login'\r\n\t\t\t\tfetch(url, {\r\n\t\t\t\t\tmode: 'cors',\r\n\t\t\t\t\tmethod: 'POST',\r\n\t\t\t\t\tcredentials: 'include',\r\n\t\t\t\t\theaders: { 'Content-Type': 'application/json' },\r\n\t\t\t\t\tbody: JSON.stringify({\r\n\t\t\t\t\t\tusername: username,\r\n\t\t\t\t\t\tpassword: password,\r\n\t\t\t\t\t}),\r\n\t\t\t\t})\r\n\t\t\t\t\t.then((res) => {\r\n\t\t\t\t\t\tif (res.status === 200 || res.status === 201) {\r\n\t\t\t\t\t\t\t//성공하면 아래 then 작동\r\n\t\t\t\t\t\t\tres.json().then((res) => {\r\n\t\t\t\t\t\t\t\tstore.setLogin(res)\r\n\t\t\t\t\t\t\t\talert(res.username + '님 환영합니다 :D')\r\n\t\t\t\t\t\t\t\thistory.go(-1)\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tlet message = '로그인에 실패했습니다 :('\r\n\t\t\t\t\t\t\tif (res.status === 401) {\r\n\t\t\t\t\t\t\t\tmessage += '\\n로그인 정보를 확인해주세요.'\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\talert(message)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t})\r\n\t\t\t\t\t.catch((e) => console.error(e))\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\talert('입력 정보를 확인해주세요.')\r\n\t\t}\r\n\t}\r\n\r\n\tconst successGoogle = (res) => {\r\n\t\tconsole.log('구글로그인 성공')\r\n\t\t//console.log(res)\r\n\r\n\t\tlet url = process.env.REACT_APP_URL + '/auth/oauth'\r\n\t\t//url = process.env.REACT_APP_LOCAL_URL + '/auth/oauth'\r\n\t\t//구글로그인 성공시 토큰에 name, email, imageUrl 저장\r\n\t\tfetch(url, {\r\n\t\t\tmode: 'cors',\r\n\t\t\tmethod: 'POST',\r\n\t\t\tcredentials: 'include',\r\n\t\t\theaders: { 'Content-Type': 'application/json' },\r\n\t\t\tbody: JSON.stringify({\r\n\t\t\t\tusername: res.profileObj.name.replace(/\\s/g, '_'),\r\n\t\t\t\temail: res.profileObj.email,\r\n\t\t\t\timageUrl: res.profileObj.imageUrl,\r\n\t\t\t}),\r\n\t\t})\r\n\t\t\t.then((res) => {\r\n\t\t\t\tif (res.status === 200 || res.status === 201) {\r\n\t\t\t\t\t//성공하면 아래 then 작동\r\n\t\t\t\t\tres.json().then((res) => {\r\n\t\t\t\t\t\talert(res.username + '님 환영합니다 :D')\r\n\t\t\t\t\t\thistory.go(-1)\r\n\t\t\t\t\t\tstore.setLogin(res)\r\n\t\t\t\t\t})\r\n\t\t\t\t} else {\r\n\t\t\t\t\tlet message = '로그인에 실패했습니다 :('\r\n\t\t\t\t\tif (res.status === 401) {\r\n\t\t\t\t\t\tmessage += '\\n로그인 정보를 확인해주세요.'\r\n\t\t\t\t\t}\r\n\t\t\t\t\tconsole.log(message)\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\t.catch((e) => console.error(e))\r\n\t}\r\n\tconst failureGoogle = (res) => {\r\n\t\tconsole.log('구글로그인 실패')\r\n\t\tconsole.log(res)\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div id=\"background\">\r\n\t\t\t<div id=\"loginWrapper\">\r\n\t\t\t\t<Switch>\r\n\t\t\t\t\t<Route path={['/login', '/register', '/withdraw']}>\r\n\t\t\t\t\t\t<div className=\"oAuth\">\r\n\t\t\t\t\t\t\t<div className=\"login\">\r\n\t\t\t\t\t\t\t\t{/* 구글로그인 */}\r\n\t\t\t\t\t\t\t\t<GoogleLogin\r\n\t\t\t\t\t\t\t\t\tbuttonText=\"Login with Google\"\r\n\t\t\t\t\t\t\t\t\tclassName=\"googleLogin\"\r\n\t\t\t\t\t\t\t\t\tclientId={clientId}\r\n\t\t\t\t\t\t\t\t\tonSuccess={successGoogle}\r\n\t\t\t\t\t\t\t\t\tonFailure={failureGoogle}\r\n\t\t\t\t\t\t\t\t\tcookiePolicy={'single_host_origin'}\r\n\t\t\t\t\t\t\t\t\tisSignedIn={true}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<form className=\"login\">\r\n\t\t\t\t\t\t\t<div className=\"text\">아이디</div>\r\n\t\t\t\t\t\t\t{buttonName === '회원탈퇴' ? <div>{store.login.username}</div> : <input name=\"username\" onChange={changeUsername} />}\r\n\r\n\t\t\t\t\t\t\t<div className=\"check\">{checkUsername}</div>\r\n\r\n\t\t\t\t\t\t\t<div className=\"text\">비밀번호</div>\r\n\t\t\t\t\t\t\t<input name=\"password\" type=\"password\" onChange={changePassword} autoComplete=\"currnet-password\" />\r\n\t\t\t\t\t\t\t<div className=\"check\">{checkPassword}</div>\r\n\r\n\t\t\t\t\t\t\t{buttonName === '회원가입' && (\r\n\t\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t\t<div className=\"text\">비밀번호 확인</div>\r\n\t\t\t\t\t\t\t\t\t<input name=\"passwordConfirm\" type=\"password\" onChange={changePasswordConfirm} autoComplete=\"currnet-password\" />\r\n\t\t\t\t\t\t\t\t\t<div className=\"check\" id=\"checkPasswordConfirm\">\r\n\t\t\t\t\t\t\t\t\t\t{checkPasswordConfirm}\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t\t)}\r\n\r\n\t\t\t\t\t\t\t{/* 버튼 */}\r\n\t\t\t\t\t\t\t{buttonName === '회원탈퇴' ? (\r\n\t\t\t\t\t\t\t\t<button style={{ background: 'red' }} onClick={clickButton}>\r\n\t\t\t\t\t\t\t\t\t{buttonName}\r\n\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t<button onClick={clickButton}>{buttonName}</button>\r\n\t\t\t\t\t\t\t)}\r\n\r\n\t\t\t\t\t\t\t{/* 로그인 or 회원가입 */}\r\n\t\t\t\t\t\t\t{buttonName === '로그인' && (\r\n\t\t\t\t\t\t\t\t<div className=\"loginLink\">\r\n\t\t\t\t\t\t\t\t\t<Link to=\"/register\">회원가입</Link>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t{buttonName === '회원가입' && (\r\n\t\t\t\t\t\t\t\t<div className=\"loginLink\">\r\n\t\t\t\t\t\t\t\t\t<Link to=\"/login\" className=\"loginLink\">\r\n\t\t\t\t\t\t\t\t\t\t로그인\r\n\t\t\t\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t)}\r\n\r\n\t\t\t\t\t\t\t{browser === 'safari' && (\r\n\t\t\t\t\t\t\t\t<div className=\"text\" style={{ fontSize: '0.8rem', textAlign: 'center' }}>\r\n\t\t\t\t\t\t\t\t\t(Safari의 경우 설정을 변경해주셔야 로그인이 가능합니다.\r\n\t\t\t\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t\t\t\t설정 → Safari → 개인 정보 보호 및 보안 → <br />\r\n\t\t\t\t\t\t\t\t\t크로스 사이트 추적방지 OFF, 모든 쿠키 차단 OFF)\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t</form>\r\n\t\t\t\t\t</Route>\r\n\t\t\t\t\t<Route path={['/loginStatus']}>\r\n\t\t\t\t\t\t{store.login ? (\r\n\t\t\t\t\t\t\t<div className=\"center\">\r\n\t\t\t\t\t\t\t\t{store.login.username}님은 현재 <span style={{ color: 'green' }}>로그인</span> 되어있습니다 :D\r\n\t\t\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t\t\t<span style={{ fontSize: '0.8rem' }}>(로그인은 최대 일주일간 유지됩니다.)</span>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t<div className=\"login center\">\r\n\t\t\t\t\t\t\t\t재 로그인이 필요합니다\r\n\t\t\t\t\t\t\t\t<Link to=\"/login\" className=\"loginLink\">\r\n\t\t\t\t\t\t\t\t\t로그인\r\n\t\t\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t</Route>\r\n\t\t\t\t</Switch>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\nexport default React.memo(Login)\r\n","import React, { useEffect, useState } from 'react'\r\nimport './Quill.css'\r\nimport 'quill/dist/quill.snow.css'\r\nimport { useQuill } from 'react-quilljs'\r\nimport imageCompress from 'quill-image-compress'\r\nimport { AppContext } from '../App'\r\nimport Axios from 'axios'\r\n\r\n\r\nfunction Quill({ match, location, history }) {\r\n\tconst store = React.useContext(AppContext)\r\n\tlet { postId } = match.params\r\n\tconst [post, setPost] = useState()\r\n\tconst [ready, setReady] = useState()\r\n\tconst [subMenus, setSubMenus] = useState()\r\n\r\n\tconst modules = {\r\n\t\ttoolbar: [\r\n\t\t\t['bold', 'italic', 'underline', 'strike'],\r\n\t\t\t[{ size: ['small', false, 'large', 'huge'] }, { header: 1 }, { header: 2 }],\r\n\t\t\t[{ align: [] }],\r\n\t\t\t[{ color: [] }, { background: [] }],\r\n\t\t\t[{ indent: '-1' }, { indent: '+1' }],\r\n\t\t\t[{ list: 'ordered' }, { list: 'bullet' }],\r\n\t\t\t['code-block', 'blockquote'],\r\n\t\t\t['link', 'image', 'video'],\r\n\t\t\t['clean'],\r\n\t\t],\r\n\t\tsyntax: true,\r\n\t\timageCompress: {\r\n\t\t\tquality: 0.7, // default\r\n\t\t\tmaxWidth: 1000, // default 1000\r\n\t\t\tmaxHeight: 1000, // default 1000\r\n\t\t\timageType: 'image/jpeg', // default\r\n\t\t\tdebug: true, // default\r\n\t\t  }\r\n\t}\r\n\tconst formats = ['bold', 'italic', 'underline', 'strike', 'code-block', 'blockquote', 'size', 'header', 'align', 'color', 'background', 'indent', 'list', 'link', 'image', 'video', 'clean']\r\n\r\n\tconst { quill, quillRef, Quill } = useQuill({ modules, formats })\r\n\tif (Quill && !quill) {\r\n\t\t// For execute this line only once.\r\n\t\tQuill.register('modules/imageCompress', imageCompress)\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\t\tsetReady(false)\r\n\t\t//포스트 불러오기 axios\r\n\t\tif (postId !== undefined && Number(postId) >= 1 && quill) {\r\n\t\t\t//postId가 없으면 포스트 내용 가져오지 않기\r\n\t\t\tlet url = process.env.REACT_APP_URL + '/posts/' + postId\r\n\t\t\t//url = process.env.REACT_APP_LOCAL_URL+'/posts/' + postId\r\n\r\n\t\t\tAxios.get(url, {\r\n\t\t\t\twithCredentials: true,\r\n\t\t\t}) //포스트 불러오기\r\n\t\t\t\t.then((res) => {\r\n\t\t\t\t\tlet title = document.querySelector('[name=title]')\r\n\t\t\t\t\ttitle.value = res.data.title\r\n\r\n\t\t\t\t\tconst tags = document.querySelectorAll('[type=radio]')\r\n\t\t\t\t\tfor (let i of tags) {\r\n\t\t\t\t\t\t//체크 초기화\r\n\t\t\t\t\t\ti.checked = false\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (res.data.tags) {\r\n\t\t\t\t\t\t//체크박스 체크\r\n\t\t\t\t\t\tconst mainMenu = document.getElementById(res.data.tags[0])\r\n\t\t\t\t\t\tif (mainMenu) mainMenu.checked = true\r\n\t\t\t\t\t\tfor (let i of store.menus) {\r\n\t\t\t\t\t\t\tif (i.name === res.data.tags[0]) {\r\n\t\t\t\t\t\t\t\t//선택된 메인메뉴의 서브메뉴를 그리기\r\n\t\t\t\t\t\t\t\tsetSubMenus(i.subMenus)\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t//포스트바디 가져오기\r\n\t\t\t\t\turl = process.env.REACT_APP_URL + '/posts/postBody/' + postId\r\n\t\t\t\t\t//url = process.env.REACT_APP_LOCAL_URL + '/posts/postBody/' + postId\r\n\t\t\t\t\tAxios.get(url)\r\n\t\t\t\t\t\t.then((res2) => {\r\n\t\t\t\t\t\t\tif (typeof res2.data.body === 'string') quill.setText(res2.data.body)\r\n\t\t\t\t\t\t\t//body가 string이면 setText\r\n\t\t\t\t\t\t\telse quill.setContents(res2.data.body) //body가 string이 아니면 setContents : Delta\r\n\t\t\t\t\t\t\tsetPost({\r\n\t\t\t\t\t\t\t\t...res.data,\r\n\t\t\t\t\t\t\t\tbody: res2.data.body,\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t\t.catch((e) => {\r\n\t\t\t\t\t\t\talert(e)\r\n\t\t\t\t\t\t\tsetReady(true)\r\n\t\t\t\t\t\t}) //실패\r\n\t\t\t\t})\r\n\t\t\t\t.catch((e) => {\r\n\t\t\t\t\talert(e)\r\n\t\t\t\t\tsetReady(true)\r\n\t\t\t\t}) //실패\r\n\t\t}else{\r\n\t\t\tsetReady(true)\r\n\t\t}\r\n\t}, [location, quill, postId, store.menus])\r\n\r\n\tuseEffect(() => {\r\n\t\tif (subMenus && post) {\r\n\t\t\tconst subMenu = document.getElementById(post.tags[1])\r\n\t\t\tif (subMenu) subMenu.checked = true\r\n\t\t}\r\n\t\tconst newSubMenu = document.querySelector('[name=newSubMenu]')\r\n\t\tif (newSubMenu) newSubMenu.value = ''\r\n\t}, [subMenus, post])\r\n\r\n\tuseEffect(() => {\r\n\t\tstore.setReady(false)\r\n\t\tif(post || ready){\r\n\t\t\tstore.setReady(true)\r\n\t\t}\r\n\t})\r\n\r\n\t//글 작성 or 수정\r\n\tconst clickPost = (e) => {\r\n\t\tif (!store.login || (store.login && store.login.username !== 'imki123')) {\r\n\t\t\talert('글 작성은 블로그 주인만 가능합니다 ^^;')\r\n\t\t\treturn\r\n\t\t}\r\n\t\tif (!window.confirm('글을 게시하시겠습니까?')) {\r\n\t\t\treturn\r\n\t\t}\r\n\t\t//제목, 내용, 태그가 있는지 검사\r\n\t\tlet title = document.querySelector('[name=title]')\r\n\t\tconst content = quill.getContents()\r\n\t\tconst text = quill.getText()\r\n\t\tconst mainMenu = document.querySelector('[name=mainMenu]:checked')\r\n\t\tlet tags = []\r\n\t\tconst subMenu = document.querySelector('[name=subMenu]:checked')\r\n\t\tconst newMainMenu = document.querySelector('[name=newMainMenu]')\r\n\t\tconst newSubMenu = document.querySelector('[name=newSubMenu]')\r\n\r\n\t\tif (mainMenu) {\r\n\t\t\ttags[0] = mainMenu.value\r\n\t\t}\r\n\t\tif (newMainMenu.value !== '') {\r\n\t\t\ttags[0] = newMainMenu.value\r\n\t\t}\r\n\t\tif (subMenu) {\r\n\t\t\tif (subMenu.value !== '') tags[1] = subMenu.value //체크 된 서브메뉴 추가\r\n\t\t}\r\n\t\tif (newSubMenu.value !== '') {\r\n\t\t\ttags[1] = newSubMenu.value\r\n\t\t}\r\n\r\n\t\tif (title.value.length === 0) {\r\n\t\t\talert('제목을 입력해주세요.')\r\n\t\t\treturn\r\n\t\t} else if (quill.getLength() === 1) {\r\n\t\t\talert('내용을 입력해주세요.')\r\n\t\t\treturn\r\n\t\t} else if (tags.length < 1 && newMainMenu.value === '') {\r\n\t\t\talert('메인메뉴를 1개 선택해주세요.')\r\n\t\t\treturn\r\n\t\t}\r\n\r\n\t\t//url에 POST 또는 PATCH 요청\r\n\t\tlet url = process.env.REACT_APP_URL + '/posts'\r\n\t\t//url = process.env.REACT_APP_LOCAL_URL + '/posts'\r\n\t\tlet method = 'POST',\r\n\t\t\tmessage = '글 작성 성공'\r\n\t\tif (e.target.id === 'PATCH') {\r\n\t\t\tif (postId !== undefined && Number(postId) >= 1) {\r\n\t\t\t\turl += '/' + postId\r\n\t\t\t\tmethod = 'PATCH'\r\n\t\t\t\tmessage = '글 수정 성공'\r\n\t\t\t} else {\r\n\t\t\t\tconsole.log('postId 비정상, 글 수정 실패')\r\n\t\t\t\treturn\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tAxios(url, {\r\n\t\t\t//포스트 작성, 수정 (최대 10mb. koa-bodyparser에서 설정.)\r\n\t\t\tmethod: method,\r\n\t\t\twithCredentials: true, //CORS\r\n\t\t\tdata: {\r\n\t\t\t\ttitle: title.value,\r\n\t\t\t\tbody: content,\r\n\t\t\t\ttext: text,\r\n\t\t\t\ttags: tags,\r\n\t\t\t},\r\n\t\t})\r\n\t\t\t.then((res) => {\r\n\t\t\t\talert(message) //성공\r\n\t\t\t\tpostId = res.data.postId\r\n\t\t\t\tif (method === 'POST') {\r\n\t\t\t\t\t//글 작성시 menus 카운트 증가\r\n\t\t\t\t\tAxios()\r\n\t\t\t\t}\r\n\t\t\t\tif (postId > 1) {\r\n\t\t\t\t\thistory.push(`/posts/${postId}`) //수정 성공하면 해당 글로 이동함\r\n\t\t\t\t} else {\r\n\t\t\t\t\thistory.push(`/posts/1`) //인사말은 홈으로 이동\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\t.catch((e) => alert(e)) //실패\r\n\t}\r\n\r\n\t// 화면 리사이즈시 editor 아래 마진 변경\r\n\tuseEffect(() => {\r\n\t\tconst editor = document.querySelector('#editor')\r\n\t\tconst toolbar = document.querySelector('.ql-toolbar')\r\n\t\tif (editor && toolbar) {\r\n\t\t\teditor.style.marginBottom = toolbar.clientHeight + 10 + 'px'\r\n\t\t}\r\n\t\twindow.removeEventListener('resize', function () {})\r\n\t\twindow.addEventListener('resize', function () {\r\n\t\t\tif (editor && toolbar) {\r\n\t\t\t\teditor.style.marginBottom = toolbar.clientHeight + 10 + 'px'\r\n\t\t\t}\r\n\t\t})\r\n\t}, [location])\r\n\r\n\t//메인메뉴 추가시 라디오박스 체크 해제, 띄어쓰기를 _로 변경\r\n\tconst changeMainMenu = (e) => {\r\n\t\tif (store.menus) {\r\n\t\t\tfor (let i of store.menus) {\r\n\t\t\t\tif (i.name === e.target.value) {\r\n\t\t\t\t\tsetSubMenus(i.subMenus)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (e.target.type !== 'radio') {\r\n\t\t\t//인풋박스 입력하면 라디오 체크 해제\r\n\t\t\te.target.value = e.target.value.replace(/\\s/g, '_')\r\n\t\t\tconst mainMenu = document.querySelector('[name=mainMenu]:checked')\r\n\t\t\tif (mainMenu) mainMenu.checked = false\r\n\t\t}\r\n\t}\r\n\t//서브메뉴 추가시 라디오박스 체크 해제, 띄어쓰기를 _로 변경\r\n\tconst changeSubMenu = (e) => {\r\n\t\tif (e.target.type !== 'radio') {\r\n\t\t\t//인풋박스 입력하면 라디오 체크 해제\r\n\t\t\te.target.value = e.target.value.replace(/\\s/g, '_')\r\n\t\t\tconst subMenu = document.querySelector('[name=subMenu]:checked')\r\n\t\t\tif (subMenu) subMenu.checked = false\r\n\t\t} else {\r\n\t\t\tconst newSubMenu = document.querySelector('[name=newSubMenu]')\r\n\t\t\tif (newSubMenu) newSubMenu.value = ''\r\n\t\t}\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className=\"quill\">\r\n\t\t\t<div className=\"quillTitle\">\r\n\t\t\t\t<input name=\"title\" placeholder=\"제목\" />\r\n\t\t\t</div>\r\n\t\t\t<div id=\"editor\">\r\n\t\t\t\t<div ref={quillRef} />\r\n\t\t\t\t<div id=\"tags\" className=\"no-drag\">\r\n\t\t\t\t\t<div id=\"tagsTitle\">\r\n\t\t\t\t\t\ttags\r\n\t\t\t\t\t\t{postId !== undefined && Number(postId) >= 1 ? (\r\n\t\t\t\t\t\t\t<button className=\"editorButton\" onClick={clickPost} id=\"PATCH\">\r\n\t\t\t\t\t\t\t\t글 수정\r\n\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t<button className=\"editorButton\" onClick={clickPost}>\r\n\t\t\t\t\t\t\t\t새글 작성\r\n\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t메인메뉴:\r\n\t\t\t\t\t\t{store.menus &&\r\n\t\t\t\t\t\t\tstore.menus.map((i) => (\r\n\t\t\t\t\t\t\t\t<label key={i.name}>\r\n\t\t\t\t\t\t\t\t\t<input type=\"radio\" name=\"mainMenu\" value={i.name} id={i.name} onClick={changeMainMenu} />\r\n\t\t\t\t\t\t\t\t\t{i.name}\r\n\t\t\t\t\t\t\t\t</label>\r\n\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t<input name=\"newMainMenu\" placeholder=\"메인메뉴 추가\" onChange={changeMainMenu} autoComplete=\"off\"></input>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t서브메뉴:\r\n\t\t\t\t\t\t<label>\r\n\t\t\t\t\t\t\t<input type=\"radio\" name=\"subMenu\" value=\"\" onClick={changeSubMenu} /> 선택안함\r\n\t\t\t\t\t\t</label>\r\n\t\t\t\t\t\t{subMenus &&\r\n\t\t\t\t\t\t\tsubMenus.map((i) => (\r\n\t\t\t\t\t\t\t\t<label key={i.name}>\r\n\t\t\t\t\t\t\t\t\t<input type=\"radio\" name=\"subMenu\" value={i.name} id={i.name} onClick={changeSubMenu} /> {i.name}\r\n\t\t\t\t\t\t\t\t</label>\r\n\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t<input name=\"newSubMenu\" placeholder=\"서브메뉴 추가\" autoComplete=\"off\" onChange={changeSubMenu}></input>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\nexport default React.memo(Quill)\r\n","import React, { useEffect } from 'react'\r\nimport './Paging.css'\r\nimport {NavLink, useLocation } from 'react-router-dom'\r\nimport queryString from 'query-string';\r\n\r\nfunction Paging(props){\r\n    const {postCount} = props\r\n\tconst location = useLocation()\r\n\tconst search = queryString.parse(location.search)\r\n    let paging = null\r\n    const pages = []\r\n\tif (postCount) {\r\n\t\tconst page = Number(search.page) || 1\r\n\t\tconst startPost = postCount - (page - 1) * 10\r\n\t\tpaging = {\r\n\t\t\tpage: page,\r\n\t\t\tlastPage: Math.ceil(postCount / 10),\r\n\t\t\tpostCount: postCount,\r\n\t\t\tstartPost: startPost,\r\n        }\r\n        \r\n        for(let i=0; i<paging.lastPage; i++){\r\n            pages.push(i+1)\r\n        }\r\n\t}\r\n\r\n    useEffect(() => {\r\n        const links = document.querySelectorAll('.paging a')\r\n        for(let i=0; i<links.length; i++){\r\n            if(links[i].innerHTML === search.page){\r\n                links[i].className = 'activePage'\r\n            }else{\r\n                links[i].className = 'inactivePage'\r\n            }\r\n            if(search.page === undefined){ //search에 page가 없으면 1을 activePage로 설정\r\n                if(links[i].innerHTML === '1'){\r\n                    links[i].className = 'activePage'\r\n                }\r\n            }\r\n        }\r\n    }, [search, postCount])\r\n\r\n    \r\n    return(\r\n        <div className=\"paging\">\r\n            {pages.map((p, idx) =>  \r\n                <NavLink path={location.pathname} to={`${location.pathname}?page=${p}`} \r\n                    className=\"inactivePage\" key={idx}>{p}</NavLink>)}\r\n        </div>\r\n    )\r\n}\r\nexport default React.memo(Paging)","import Axios from 'axios'\r\nimport React, { useEffect, useState } from 'react'\r\nimport { AppContext } from '../App'\r\nimport Paging from './Paging'\r\nimport PostList from './PostList'\r\n\r\nimport './Tags.css'\r\n\r\nfunction Tags({ match, location, history }) {\r\n\tconst store = React.useContext(AppContext)\r\n\tconst { tag } = match.params\r\n\tconst [lists, setLists] = useState([])\r\n\tuseEffect(() => {\r\n\t\t\r\n\t\tlet url = process.env.REACT_APP_URL + '/posts/tag/' + tag + location.search\r\n\t\t//url = process.env.REACT_APP_LOCAL_URL + '/posts/tag/' + tag + location.search\r\n\r\n\t\tAxios.get(url, {\r\n\t\t\twithCredentials: true,\r\n\t\t})\r\n\t\t\t.then((res) => {\r\n\t\t\t\tif(res.data.list.length < 1){\r\n\t\t\t\t\talert('찾으시는 페이지가 없습니다.')\r\n\t\t\t\t\thistory.go(-1)\r\n\t\t\t\t}else{\r\n\t\t\t\t\tsetLists(res.data.list)\r\n\t\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\t.catch((e) => alert(e)) //실패\r\n\t},[tag, location, history])\r\n\t\r\n\tuseEffect(() => {\r\n\t\tstore.setReady(false)\r\n\t\tif(lists){\r\n\t\t\tstore.setReady(true)\r\n\t\t}\r\n\t})\r\n\r\n\treturn (\r\n\t\t<div className=\"postListWrapper\">\r\n\t\t\t<div className=\"postListTitle\">{tag.substring(0,1).toUpperCase() + tag.substring(1)}</div>\r\n\t\t\t{lists && lists.map((i, idx) => <PostList no={lists.length - idx} list={i} key={i.postId} />)}\r\n\t\t\t{<Paging postCount={lists.length} />}\r\n\t\t</div>\r\n\t)\r\n}\r\nexport default React.memo(Tags)\r\n","import React, { useEffect } from 'react'\r\nimport AddCircleOutlineIcon from '@material-ui/icons/AddCircleOutline'\r\nimport ArrowUpwardIcon from '@material-ui/icons/ArrowUpward'\r\nimport './Content.css'\r\nimport { Link, Route, useLocation, Switch } from 'react-router-dom'\r\nimport { AppContext } from '../App'\r\n\r\nimport Post from './Post'\r\nimport NotFoundPage from './NotFoundPage'\r\nimport Login from './Login'\r\nimport Quill from './Quill'\r\nimport Tags from './Tags'\r\n\r\nfunction Content(props) {\r\n\tconst store = React.useContext(AppContext)\r\n\tconst location = useLocation()\r\n\r\n\tuseEffect(() => {\r\n\t\tconst resize = () => {\r\n\t\t\tstore.resizeTextarea()\r\n\t\t}\r\n\r\n\t\twindow.addEventListener('resize', resize)\r\n\t\tconst loading = document.querySelector('#loading')\r\n\t\tconst view = document.querySelector('.post')\r\n\t\tif (store.ready) {\r\n\t\t\tif (loading) loading.style.display = 'none'\r\n\t\t\tif (view) view.style.display = 'block'\r\n\r\n\t\t\tsetTimeout(function () {\r\n\t\t\t\tstore.resizeTextarea()\r\n\t\t\t}, 10)\r\n\t\t} else {\r\n\t\t\tif (loading) loading.style.display = 'flex'\r\n\t\t\tif (view) view.style.display = 'none'\r\n\t\t}\r\n\t\treturn window.removeEventListener('resize', resize)\r\n\t}, [location.hash, store])\r\n\r\n\tconst scrollUp = (e) => {\r\n\t\t// content의 스크롤을 가장 위로\r\n\t\tconst content = document.querySelector('#content')\r\n\t\tlet contentScroll = content.scrollTop\r\n\t\tlet dif = contentScroll / 50\r\n\t\tconst frame = setInterval(function () {\r\n\t\t\tif (content.scrollTop <= 0) {\r\n\t\t\t\tclearInterval(frame)\r\n\t\t\t} else {\r\n\t\t\t\tcontent.scrollTop -= dif\r\n\t\t\t}\r\n\t\t}, 10)\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div id=\"content\" className=\"slideMenu\">\r\n\t\t\t{/* FAB */}\r\n\t\t\t{store.login && store.login.username === 'imki123' && (\r\n\t\t\t\t<Link id=\"postFAB\" className=\"hover\" to=\"/quill\">\r\n\t\t\t\t\t<AddCircleOutlineIcon />\r\n\t\t\t\t</Link>\r\n\t\t\t)}\r\n\t\t\t<div id=\"scrollFAB\" className=\"hover\" onClick={scrollUp}>\r\n\t\t\t\t<ArrowUpwardIcon />\r\n\t\t\t</div>\r\n\t\t\t<div id=\"menuFAB\" className=\"hover\" onClick={store.slideMenu}>\r\n\t\t\t\t<img alt=\"MENU\" src={process.env.PUBLIC_URL + '/images/guide_icon.png'} />\r\n\t\t\t</div>\r\n\r\n\t\t\t{/* 로딩 */}\r\n\t\t\t<div id=\"loading\">\r\n\t\t\t\t<img alt=\"Loading\" src={process.env.PUBLIC_URL + '/images/loading.gif'} />\r\n\t\t\t</div>\r\n\r\n\t\t\t<Switch>\r\n\t\t\t\t<Route path={['/login', '/register', '/loginStatus', '/withdraw']} component={Login} />\r\n\t\t\t\t<Route path=\"/quill/:postId?\" component={Quill} />\r\n\t\t\t\t<Route path=\"/tags/:tag\" component={Tags} />\r\n\t\t\t\t<Route path=\"/\" exact component={Post} />\r\n\t\t\t\t<Route path=\"/posts/:postId\" component={Post} />\r\n\t\t\t\t<Route path=\"/NotFoundPage\" component={NotFoundPage} />\r\n\t\t\t\t<Route path=\"*\" component={NotFoundPage} />\r\n\t\t\t</Switch>\r\n\r\n\t\t\t{/* 텍스트 에어리어 높이 조정을 위한 안보이는 가짜 텍스트에어리어 */}\r\n\t\t\t<textarea disabled id=\"fakeTextarea\" />\r\n\t\t</div>\r\n\t)\r\n}\r\nexport default React.memo(Content)\r\n","import React from 'react'\r\nimport './Setting.css'\r\nimport { Link } from 'react-router-dom'\r\nimport { AppContext } from '../App'\r\nimport { GoogleLogout } from 'react-google-login'\r\n\r\nfunction Setting(props) {\r\n\tconst store = React.useContext(AppContext)\r\n\tconst href = window.location.href\r\n\tlet clientId\r\n\tif (href.indexOf('localhost') > -1) {\r\n\t\t//로컬\r\n\t\tclientId = '605411712139-7nr29rfs5ihfu9uoev3igr5hpf4ubkle.apps.googleusercontent.com'\r\n\t} else {\r\n\t\t//서버\r\n\t\tclientId = '605411712139-eb3qqicskmkal2i9u26ppdhoq2jt0bd8.apps.googleusercontent.com'\r\n\t}\r\n\r\n\t/* const { signOut } = useGoogleLogout({\r\n\t\tclientId: clientId,\r\n\t\tonFailure: (res) => console.log(res),\r\n\t\tonLogoutSuccess: (res, e) => console.log('success:', res, e),\r\n\t}) */\r\n\r\n\tconst closeSetting = (e) => {\r\n\t\tconst settingWrapper = document.querySelector('#settingWrapper')\r\n\t\te.stopPropagation()\r\n\t\tsetTimeout(function () {\r\n\t\t\tsettingWrapper.style.display = 'none'\r\n\t\t}, 200)\r\n\t}\r\n\r\n\tconst logout = (e) => {\r\n\t\tif (window.confirm('로그아웃 하시겠습니까?')) {\r\n\t\t\tlet url = process.env.REACT_APP_URL + '/auth/logout'\r\n\t\t\t//url = process.env.REACT_APP_LOCAL_URL + '/auth/logout'\r\n\r\n\t\t\tfetch(url, {\r\n\t\t\t\tmode: 'cors',\r\n\t\t\t\tmethod: 'POST',\r\n\t\t\t\tcredentials: 'include',\r\n\t\t\t})\r\n\t\t\t\t.then((res) => {\r\n\t\t\t\t\tif (res.status === 204) {\r\n\t\t\t\t\t\t//로그아웃 하면 204\r\n\t\t\t\t\t\tconsole.log('로그아웃 성공')\r\n\t\t\t\t\t\t//구글 로그아웃\r\n\t\t\t\t\t\t//signOut()\r\n\t\t\t\t\t\tstore.setLogin(false)\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tconsole.log('로그아웃 실패')\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t\t.catch((e) => console.error(e))\r\n\t\t}\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div id=\"settingWrapper\" onClick={closeSetting}>\r\n\t\t\t<div id=\"setting\">\r\n\t\t\t\t<div id=\"settingListWrapper\">\r\n\t\t\t\t\t{store.login ? (\r\n\t\t\t\t\t\t<Link className=\"settingList\" to=\"/loginStatus\">\r\n\t\t\t\t\t\t\t{store.login.username}\r\n\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t) : (\r\n\t\t\t\t\t\t<Link className=\"settingList\" to=\"/login\">\r\n\t\t\t\t\t\t\t로그인\r\n\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t)}\r\n\t\t\t\t\t{store.login && (\r\n\t\t\t\t\t\t<div onClick={logout}>\r\n\t\t\t\t\t\t\t<GoogleLogout\r\n\t\t\t\t\t\t\t\tbuttonText=\"로그아웃\"\r\n\t\t\t\t\t\t\t\tclassName=\"settingList googleLogout\"\r\n\t\t\t\t\t\t\t\tclientId={clientId}\r\n\t\t\t\t\t\t\t\tonSuccess={(res) => {\r\n\t\t\t\t\t\t\t\t\tconsole.log('logout')\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\tonFailure={(res) => {\r\n\t\t\t\t\t\t\t\t\tconsole.log(res)\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\tcookiePolicy={'single_host_origin'}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t)}\r\n\t\t\t\t\t{!store.login && (\r\n\t\t\t\t\t\t<Link className=\"settingList\" to=\"/register\">\r\n\t\t\t\t\t\t\t회원가입\r\n\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t)}\r\n\t\t\t\t\t{store.login && !store.login.oAuth && (\r\n\t\t\t\t\t\t<Link className=\"settingList\" to=\"/withdraw\">\r\n\t\t\t\t\t\t\t회원탈퇴\r\n\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\nexport default React.memo(Setting)\r\n","import React, { createContext, useEffect, useState } from 'react'\r\nimport './App.css'\r\nimport { useLocation } from 'react-router-dom'\r\n\r\nimport Header from './components/Header'\r\nimport Body from './components/Body'\r\nimport Guide from './components/Guide'\r\nimport Content from './components/Content'\r\nimport Setting from './components/Setting'\r\nimport Axios from 'axios'\r\nimport Meta from './components/Meta'\r\n\r\nconst AppContext = createContext()\r\n\r\nfunction App() {\r\n\tconst location = useLocation() //페이지 경로 변경 감지\r\n\tconst [ready, setReady] = useState(false)\r\n\tconst [login, setLogin] = useState(false)\r\n\tconst [menus, setMenus] = useState([\r\n\t\t{ name: 'home', count: 1, order: 1 },\r\n\t\t{ name: 'programming', order: 2 },\r\n\t\t{ name: 'article', order: 3 },\r\n\t])\r\n\r\n\tconst resizeTextarea = (e) => {\r\n\t\t//텍스트에어리어를 찾아서 크기를 글자 높이에 맞게 변경하기\r\n\t\t//textarea 높이 조정\r\n\t\tconst fake = document.querySelector('#fakeTextarea')\r\n\t\tlet textareas = []\r\n\t\tif (e && e.target) {\r\n\t\t\ttextareas.push(e.target)\r\n\t\t} else {\r\n\t\t\ttextareas = document.querySelectorAll('textarea')\r\n\t\t}\r\n\r\n\t\tif (textareas && fake) {\r\n\t\t\tfor (let i = 0; i < textareas.length; i++) {\r\n\t\t\t\tfake.style.height = '1px'\r\n\t\t\t\tfake.style.width = textareas[i].clientWidth + 'px'\r\n\t\t\t\tfake.value = textareas[i].value\r\n\t\t\t\ttextareas[i].style.height = 5 + fake.scrollHeight + 'px'\r\n\t\t\t}\r\n\t\t\tfake.value = ''\r\n\t\t\tfake.style.height = '0px'\r\n\t\t}\r\n\t}\r\n\r\n\tconst slideMenu = () => {\r\n\t\t//메뉴버튼 클릭 시 메뉴 보이기 & 숨기기\r\n\t\tconst body = document.querySelector('#body')\r\n\t\tconst guideWrapper = document.querySelector('#guideWrapper')\r\n\t\tconst content = document.querySelector('#content')\r\n\r\n\t\tif (!guideWrapper.style.left) {\r\n\t\t\t//스타일 속성이 없으면 초기값 지정\r\n\t\t\tif (body.clientWidth < 500) {\r\n\t\t\t\tguideWrapper.style.left = '-312px' //모바일\r\n\t\t\t} else {\r\n\t\t\t\tguideWrapper.style.left = '0px' //PC\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (guideWrapper.style.left && guideWrapper.style.left.replace('px', '') > -100) {\r\n\t\t\tconsole.log(guideWrapper.style.left)\r\n\t\t\tconsole.log('close')\r\n\t\t\t//메뉴 닫기\r\n\t\t\tguideWrapper.parentNode.style.width = '0' // 회색 0\r\n\t\t\tcontent.style.width = 'calc(100% - 16px)' //콘텐트 100% - 16px\r\n\t\t\tguideWrapper.style.left = '-312px' // 메뉴 왼쪽으로\r\n\t\t} else {\r\n\t\t\tconsole.log(guideWrapper.style.left)\r\n\t\t\tconsole.log('open')\r\n\t\t\t//메뉴 열기\r\n\t\t\tguideWrapper.style.left = '0px' // 메뉴 0\r\n\t\t\tif (body.clientWidth < 500) {\r\n\t\t\t\t//모바일\r\n\t\t\t\tguideWrapper.parentNode.style.width = '100%' // 회색 100%\r\n\t\t\t} else {\r\n\t\t\t\t//PC\r\n\t\t\t\tcontent.style.width = `calc(100% - 312px - 16px)`\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t//모바일에서 회색부분 클릭 시 메뉴 닫기\r\n\tconst closeMenuMobile = (e) => {\r\n\t\tconst body = document.querySelector('#body')\r\n\t\tconst guideWrapper = document.querySelector('#guideWrapper')\r\n\t\tconst content = document.querySelector('#content')\r\n\r\n\t\tguideWrapper.parentNode.style.width = '0' // 회색 0\r\n\t\tif (body.clientWidth < 500) {\r\n\t\t\t//모바일\r\n\t\t\tguideWrapper.style.left = '-312px' // 메뉴 0\r\n\t\t\tcontent.style.width = 'calc(100% - 16px)'\r\n\t\t} else {\r\n\t\t\tcontent.style.width = 'calc(100% - 312px - 16px)'\r\n\t\t}\r\n\t}\r\n\tconst checkToken = (func) => {\r\n\t\t//로그인 되어있는지 토큰 체크하기\r\n\t\tlet url = process.env.REACT_APP_URL + '/auth/check'\r\n\t\t//url = process.env.REACT_APP_LOCAL_URL+'/auth/check'\r\n\t\tAxios.get(url, { withCredentials: true })\r\n\t\t\t.then((res) => {\r\n\t\t\t\tif (res.data) {\r\n\t\t\t\t\t//console.log('토큰 체크 성공')\r\n\t\t\t\t\tsetLogin(res.data)\r\n\t\t\t\t} else {\r\n\t\t\t\t\t//console.log('토큰 없음') //res.status===204(No Content)\r\n\t\t\t\t\tsetLogin(false)\r\n\t\t\t\t}\r\n\t\t\t\tif (func) func()\r\n\t\t\t})\r\n\t\t\t.catch((e) => {\r\n\t\t\t\t//실패\r\n\t\t\t\tif (func) func()\r\n\t\t\t})\r\n\t}\r\n\r\n\t//useContext 이용하여 하위 컴포넌트에 상태 전달\r\n\tconst store = {\r\n\t\tready,\r\n\t\tsetReady,\r\n\t\tlogin,\r\n\t\tsetLogin,\r\n\t\tmenus,\r\n\t\tsetMenus,\r\n\t\tresizeTextarea,\r\n\t\tslideMenu,\r\n\t\tcloseMenuMobile,\r\n\t\tcheckToken,\r\n\t}\r\n\r\n\t// 포스트에서 태그 정보를 가져와서 메뉴에 표시함, Quill의 태그목록에 표시\r\n\tuseEffect(() => {\r\n\t\tlet url = process.env.REACT_APP_URL + '/menus'\r\n\t\t//url = process.env.REACT_APP_LOCAL_URL+'/menus'\r\n\r\n\t\tAxios.get(url, {\r\n\t\t\twithCredentials: true,\r\n\t\t}) //메뉴 태그 가져오기\r\n\t\t\t.then((res) => {\r\n\t\t\t\tsetMenus(res.data)\r\n\t\t\t})\r\n\t\t\t.catch((e) => alert(e)) //실패\r\n\t}, [location.pathname])\r\n\r\n\t//주소 변경될 때, 토큰 체크하고 포스트 조회하기\r\n\tuseEffect(() => {\r\n\t\tcheckToken()\r\n\t}, [location.pathname, location.search])\r\n\r\n\treturn (\r\n\t\t<AppContext.Provider value={store}>\r\n\t\t\t<div id=\"app\">\r\n\t\t\t\t<Meta\r\n\t\t\t\t\tdata={{\r\n\t\t\t\t\t\ttitle: '임기의 코딩 블로그 :D',\r\n\t\t\t\t\t\tdiscription: 'imki123의 임기의 코딩 블로그입니다 :D',\r\n\t\t\t\t\t\timage: process.env.PUBLIC_URL + '/images/imcat_800x400.png',\r\n\t\t\t\t\t}}\r\n\t\t\t\t/>\r\n\t\t\t\t<Header />\r\n\t\t\t\t<Setting />\r\n\t\t\t\t<Body>\r\n\t\t\t\t\t<Guide />\r\n\t\t\t\t\t<Content />\r\n\t\t\t\t</Body>\r\n\t\t\t</div>\r\n\t\t</AppContext.Provider>\r\n\t)\r\n}\r\nexport { AppContext }\r\nexport default React.memo(App)\r\n","import React from 'react'\r\nimport ReactDOM, { hydrate } from 'react-dom'\r\nimport { BrowserRouter } from 'react-router-dom'\r\nimport App from './App'\r\n\r\nconst rootElement = document.getElementById('root')\r\n\r\nif (rootElement.hasChildNodes()) {\r\n\thydrate(\r\n\t\t<BrowserRouter>\r\n\t\t\t<App />\r\n\t\t</BrowserRouter>,\r\n\t\trootElement,\r\n\t)\r\n} else {\r\n\tReactDOM.render(\r\n\t\t<BrowserRouter basename={process.env.PUBLIC_URL}>\r\n\t\t\t<App />\r\n\t\t</BrowserRouter>,\r\n\t\tdocument.getElementById('root'),\r\n\t)\r\n}\r\n"],"sourceRoot":""}